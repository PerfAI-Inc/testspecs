{
  "basePath": "/elements/api-v2",
  "paths": {
    "/advance-receipts": {
      "post": {
        "summary": "Create an Advance-receipt",
        "operationId": "createAdvanceReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/advanceReceiptsPostResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/advanceReceiptsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Advance Receipts"
        ]
      },
      "get": {
        "summary": "Search for Advance-receipts",
        "operationId": "getAdvanceReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/advanceReceiptsGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Advance Receipts"
        ]
      }
    },
    "/advance-receipts/{id}": {
      "patch": {
        "summary": "Update an Advance-receipt",
        "operationId": "updateAdvanceReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/advanceReceiptsPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/advanceReceiptsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Advance Receipts"
        ]
      },
      "get": {
        "summary": "Retrieve an Advance-receipt",
        "operationId": "getAdvanceReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/advanceReceiptsGetResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Advance Receipts"
        ]
      },
      "delete": {
        "summary": "Delete an Advance-receipt",
        "operationId": "deleteAdvanceReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Advance Receipts"
        ]
      }
    },
    "/bulk/download": {
      "post": {
        "summary": "Create a new bulk download job (asynchronous)",
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Fetch all the bulk jobs for an instance",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Cancel an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the errors of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the status of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the results of an asynchronous bulk query.",
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ]
      }
    },
    "/companies": {
      "get": {
        "summary": "Search for Companies",
        "operationId": "getCompanies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/companiesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Companies"
        ]
      }
    },
    "/companies/{id}": {
      "get": {
        "summary": "Retrieve a Company",
        "operationId": "getCompanyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/companiesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Companies"
        ]
      }
    },
    "/customer-credit-memos": {
      "post": {
        "summary": "Create a Customer-credit-memo",
        "operationId": "createCustomerCreditMemo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerCreditMemosPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customerCreditMemosPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customer Credit Memos"
        ]
      },
      "get": {
        "summary": "Search for Customer-credit-memos",
        "operationId": "getCustomerCreditMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customerCreditMemosObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customer Credit Memos"
        ]
      }
    },
    "/customer-credit-memos/{id}": {
      "patch": {
        "summary": "Update a Customer-credit-memo",
        "operationId": "updateCustomerCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerCreditMemosPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customerCreditMemosPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customer Credit Memos"
        ]
      },
      "get": {
        "summary": "Retrieve a Customer-credit-memo",
        "operationId": "getCustomerCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerCreditMemosObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customer Credit Memos"
        ]
      },
      "delete": {
        "summary": "Delete a Customer-credit-memo",
        "operationId": "deleteCustomerCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customer Credit Memos"
        ]
      }
    },
    "/customers": {
      "post": {
        "summary": "Create a Customer",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Search for Customers",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customersObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/{id}": {
      "patch": {
        "summary": "Update a Customer",
        "operationId": "updateCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Retrieve a Customer",
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "summary": "Delete a Customer",
        "operationId": "deleteCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/employees": {
      "get": {
        "summary": "Search for Employees",
        "operationId": "getEmployees",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/employeesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "Retrieve an Employee",
        "operationId": "getEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/employeesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/inventory-items": {
      "get": {
        "summary": "Search for Inventory-items",
        "operationId": "getInventoryItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryItemsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Inventory Items"
        ]
      }
    },
    "/inventory-items/{id}": {
      "get": {
        "summary": "Retrieve an Inventory-item",
        "operationId": "getInventoryItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryItemsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Inventory Items"
        ]
      }
    },
    "/jobs": {
      "get": {
        "summary": "Search for Jobs",
        "operationId": "getJobs",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/jobsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs"
        ]
      }
    },
    "/jobs/{id}": {
      "get": {
        "summary": "Retrieve a Job",
        "operationId": "getJobById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/jobsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Jobs"
        ]
      }
    },
    "/journal-entries": {
      "post": {
        "summary": "Create a Journal-entry",
        "operationId": "createJournalEntry",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntriesPostResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/journalEntriesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "get": {
        "summary": "Search for Journal-entries",
        "operationId": "getJournalEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/journalEntriesGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/journal-entries/{id}": {
      "patch": {
        "summary": "Update a Journal-entry",
        "operationId": "updateJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntriesPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/journalEntriesPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "get": {
        "summary": "Retrieve a Journal-entry",
        "operationId": "getJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntriesGetResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "delete": {
        "summary": "Delete a Journal-entry",
        "operationId": "deleteJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/ledger-accounts": {
      "post": {
        "summary": "Create a Ledger-account",
        "operationId": "createLedgerAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsObjectPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Search for Ledger-accounts",
        "operationId": "getLedgerAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerAccountsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-accounts/{id}": {
      "patch": {
        "summary": "Update a Ledger-account",
        "operationId": "updateLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsObjectPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Retrieve a Ledger-account",
        "operationId": "getLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "delete": {
        "summary": "Delete a Ledger-account",
        "operationId": "deleteLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the available objects.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get swagger docs for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the field for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/payments": {
      "post": {
        "summary": "Create a Payment",
        "operationId": "createPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsPostResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "summary": "Search for Payments",
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/paymentsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments/{id}": {
      "patch": {
        "summary": "Update a Payment",
        "operationId": "updatePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "summary": "Retrieve a Payment",
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "delete": {
        "summary": "Delete a Payment",
        "operationId": "deletePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.",
        "tags": [
          "Ping"
        ]
      }
    },
    "/proposals": {
      "get": {
        "summary": "Search for Proposals",
        "operationId": "getProposals",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/proposalsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Proposals"
        ]
      }
    },
    "/proposals/{id}": {
      "get": {
        "summary": "Retrieve a Proposal",
        "operationId": "getProposalById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/proposalsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Proposals"
        ]
      }
    },
    "/purchase-invoices": {
      "get": {
        "summary": "Search for Purchase-invoices",
        "operationId": "getPurchaseInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseInvoicesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      }
    },
    "/purchase-invoices/{id}": {
      "get": {
        "summary": "Retrieve a Purchase-invoice",
        "operationId": "getPurchaseInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      }
    },
    "/purchase-orders": {
      "post": {
        "summary": "Create a Purchase-order",
        "operationId": "createPurchaseOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPostResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "get": {
        "summary": "Search for Purchase-orders",
        "operationId": "getPurchaseOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseOrdersObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/purchase-orders/{id}": {
      "patch": {
        "summary": "Update a Purchase-order",
        "operationId": "updatePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "get": {
        "summary": "Retrieve a Purchase-order",
        "operationId": "getPurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "delete": {
        "summary": "Delete a Purchase-order",
        "operationId": "deletePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/quotes": {
      "post": {
        "summary": "Create a Quote",
        "operationId": "createQuote",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quotesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/quotesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "get": {
        "summary": "Search for Quotes",
        "operationId": "getQuotes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/quotesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Quotes"
        ]
      }
    },
    "/quotes/{id}": {
      "patch": {
        "summary": "Update a Quote",
        "operationId": "updateQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quotesPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/quotesPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "get": {
        "summary": "Retrieve a Quote",
        "operationId": "getQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quotesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "delete": {
        "summary": "Delete a Quote",
        "operationId": "deleteQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Quotes"
        ]
      }
    },
    "/receipts": {
      "post": {
        "summary": "Create a Receipt",
        "operationId": "createReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receiptsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/receiptsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Receipts"
        ]
      },
      "get": {
        "summary": "Search for Receipts",
        "operationId": "getReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/receiptsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Receipts"
        ]
      }
    },
    "/receipts/{id}": {
      "patch": {
        "summary": "Update a Receipt",
        "operationId": "updateReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receiptsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/receiptsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Receipts"
        ]
      },
      "get": {
        "summary": "Retrieve a Receipt",
        "operationId": "getReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receiptsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Receipts"
        ]
      },
      "delete": {
        "summary": "Delete a Receipt",
        "operationId": "deleteReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Receipts"
        ]
      }
    },
    "/sales-invoices": {
      "post": {
        "summary": "Create a Sales-invoice",
        "operationId": "createSalesInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesInvoicesPostResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesInvoicesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Invoices"
        ]
      },
      "get": {
        "summary": "Search for Sales-invoices",
        "operationId": "getSalesInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesInvoicesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Invoices"
        ]
      }
    },
    "/sales-invoices/{id}": {
      "patch": {
        "summary": "Update a Sales-invoice",
        "operationId": "updateSalesInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesInvoicesPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesInvoicesPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Invoices"
        ]
      },
      "get": {
        "summary": "Retrieve a Sales-invoice",
        "operationId": "getSalesInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesInvoicesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Invoices"
        ]
      },
      "delete": {
        "summary": "Delete a Sales-invoice",
        "operationId": "deleteSalesInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Invoices"
        ]
      }
    },
    "/sales-orders": {
      "post": {
        "summary": "Create a Sales-order",
        "operationId": "createSalesOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesOrdersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      },
      "get": {
        "summary": "Search for Sales-orders",
        "operationId": "getSalesOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrdersObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      }
    },
    "/sales-orders/{id}": {
      "patch": {
        "summary": "Update a Sales-order",
        "operationId": "updateSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersPatchResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesOrdersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      },
      "get": {
        "summary": "Retrieve a Sales-order",
        "operationId": "getSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      },
      "delete": {
        "summary": "Delete a Sales-order",
        "operationId": "deleteSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      }
    },
    "/sales-tax-agencies": {
      "get": {
        "summary": "Search for Sales-tax-agencies",
        "operationId": "getSalesTaxAgencies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesTaxAgenciesGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Tax Agencies"
        ]
      }
    },
    "/sales-tax-agencies/{id}": {
      "get": {
        "summary": "Retrieve a Sales-tax-agency",
        "operationId": "getSalesTaxAgencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesTaxAgenciesGetResObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Tax Agencies"
        ]
      }
    },
    "/sales-tax-codes": {
      "get": {
        "summary": "Search for Sales-tax-codes",
        "operationId": "getSalesTaxCodes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesTaxCodesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Tax Codes"
        ]
      }
    },
    "/sales-tax-codes/{id}": {
      "get": {
        "summary": "Retrieve a Sales-tax-code",
        "operationId": "getSalesTaxCodeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesTaxCodesObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Tax Codes"
        ]
      }
    },
    "/vendor-credit-memos": {
      "get": {
        "summary": "Search for Vendor-credit-memos",
        "operationId": "getVendorCreditMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorCreditMemosObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendor Credit Memos"
        ]
      }
    },
    "/vendor-credit-memos/{id}": {
      "get": {
        "summary": "Retrieve a Vendor-credit-memo",
        "operationId": "getVendorCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorCreditMemosObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Credit Memos"
        ]
      }
    },
    "/vendors": {
      "post": {
        "summary": "Create a Vendor",
        "operationId": "createVendor",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Search for Vendors",
        "operationId": "getVendors",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/vendors/{id}": {
      "patch": {
        "summary": "Update a Vendor",
        "operationId": "updateVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Retrieve a Vendor",
        "operationId": "getVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "delete": {
        "summary": "Delete a Vendor",
        "operationId": "deleteVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/{objectName}": {
      "get": {
        "operationId": "getByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}": {
      "delete": {
        "operationId": "deleteObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "customersPostResContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2cf97b74-f836-449e-a021-85f34d4b8a22"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "journalEntriesPatchReqGeneralJournalEntryLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a1331316-ce07-4160-8507-9d7297f9305a"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "proposalsProposalLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "343f2c86-dee6-4f8f-b58c-2021dd5938ab"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "companiesDefaultsPayablesVendorCustomFieldDefinitions": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Label": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        }
      },
      "title": "VendorCustomFieldDefinitions",
      "type": "object"
    },
    "customersObjectPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "vendorsPaymentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "quotesPatchReqQuoteLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4c2eab55-7f5a-4337-a85b-e4d7eb284fd2"
        }
      },
      "type": "object"
    },
    "customersPostReqCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "companiesDefaultsJobPayablesRetainageAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "PayablesRetainageAccountReference",
      "type": "object"
    },
    "companiesDefaultsPayablesPayablesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "title": "PayablesAccountReference",
      "type": "object"
    },
    "vendorsPatchResPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "inventoryItemsInventoryAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "receiptsCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ecc8b01d-8ab6-455f-9a08-366bf3bf0846"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "vendorCreditMemosApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c7382b37-df7e-4702-88bd-201d51a3ed0c"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "purchaseInvoicesCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPatchReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "VendorsPostResPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/VendorsPostResPurchaseOrdersContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResPurchaseOrdersContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResPurchaseOrdersContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesPurchaseInvoiceLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c040bc52-5150-4da6-b03e-d8809ca4e48e"
        }
      },
      "title": "PurchaseInvoiceLineReference",
      "type": "object"
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "salesInvoicesObjectApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesInvoiceReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "0cb16224-9cf8-4831-ad5b-d85f6e468195"
        }
      },
      "title": "InvoiceReference",
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "advanceReceiptsPostResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsGetResAccountReference"
        },
        "AdvanceReceiptLines": {
          "items": {
            "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLines"
          },
          "type": "array"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500
        },
        "AmountRemaining": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -500
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/advanceReceiptsGetResCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/advanceReceiptsGetResCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/advanceReceiptsGetResKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-25T20:05:36"
        },
        "MainAddress": {
          "$ref": "#/definitions/advanceReceiptsGetResMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "abcdef"
        },
        "Revision": {
          "$ref": "#/definitions/advanceReceiptsGetResRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/advanceReceiptsGetResSalesRepresentativeReference"
        }
      },
      "title": "advanceReceiptsGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "advance-receipts"
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "purchaseOrdersVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "customerCreditMemosAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "vendorsPatchReqShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchReqShipmentsContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "DiscountAccountReference",
      "type": "object"
    },
    "vendorsObjectExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "paymentsObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "proposalsProposalLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "fca5d7b9-111c-4edd-9a2f-137175a36fcb"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "inventoryItemsSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2fd263f3-0112-4343-aa61-0add644ecfd2"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "salesTaxAgenciesGetResAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ae0f430c-9b01-4bcc-a8f1-ea3408ed5257"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsPatchReqShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "vendorsMailToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersPatchResContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResAdvanceReceiptLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "vendorsPurchaseOrdersContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receiptsSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqGeneralJournalEntryLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5b110d17-1994-464f-9de9-464c2ffd19c9"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.8
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Catalog #S100335: Hedge Shears"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "Revision": {
          "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7.95
        }
      },
      "title": "ApplyToPurchasesLines",
      "type": "object"
    },
    "vendorsObjectShipmentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "quotesPatchReqQuoteLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2fa466c0-8d58-45be-a301-2c2b9dd6f943"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "customerCreditMemosPostReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "proposalsShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "2300 Club Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite A"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30093"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "vendorsPatchReqExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "quotesPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "customersObjectContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "customersKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "f3be89bf-9167-4176-bcb5-411a13170463"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "customersPostReqShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostReqShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostReqShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "inventoryItemsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "companiesObject": {
      "properties": {
        "CompanyIdentifier": {
          "$ref": "#/definitions/companiesCompanyIdentifier"
        },
        "Defaults": {
          "$ref": "#/definitions/companiesDefaults"
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "companies",
      "type": "object",
      "x-primary-key": [
        "CompanyIdentifier.Guid"
      ],
      "x-vendor-objectname": "companies"
    },
    "purchaseOrdersPatchResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesPaymentMethodNames": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "Cash"
        },
        "Number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "PaymentMethodNames",
      "type": "object"
    },
    "vendorsObjectPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "proposalsProposalLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/proposalsProposalLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 159.98
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Prefabricated Birdhouse-Large Eiffel Tower"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/proposalsProposalLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/proposalsProposalLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/proposalsProposalLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/proposalsProposalLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/proposalsProposalLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        }
      },
      "title": "ProposalLines",
      "type": "object"
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "customersObjectContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesSalesOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "23e67fe3-e9c0-4ed3-937a-64abc51d965f"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqApplyToInvoiceLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a70f3b22-49de-4bfe-8cfb-8471673d7115"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "advanceReceiptsGetResCreditCardAuthorizationInfo": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsGetResCreditCardAuthorizationInfoAddress"
        },
        "AmountAuthorized": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AuthorizationCode": {
          "type": "string"
        },
        "AuthorizationStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastFourDigits": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        }
      },
      "title": "CreditCardAuthorizationInfo",
      "type": "object"
    },
    "salesOrdersPostReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "customersBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "quotesPostReqQuoteLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "vendorsObjectShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsObjectShipmentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectShipmentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectShipmentsContactRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30092"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "salesOrdersPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "VendorsPostResPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "9670aa3f-5f29-495a-aff9-1ab7973ce5c6"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "salesOrdersShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "ledgerAccountsObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsPatchResObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "customersPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "customersPatchReqShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "quotesPatchReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "4589 East Jefferson Blvd."
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Alpharetta"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30004"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "customerCreditMemosObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.98
        },
        "AmountDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToSalesLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "213456"
        },
        "CustomerReference": {
          "$ref": "#/definitions/customerCreditMemosCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-27T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-18T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.2
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-26T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/customerCreditMemosFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customerCreditMemosKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "CCM4001"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customerCreditMemosRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesTaxCodeReference"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "customerCreditMemos",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "customer-credit-memos"
    },
    "salesInvoicesShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 200"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "employeesObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "a581cd1e-bf82-40f6-889f-9ab67f00ff52"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "vendorsObjectContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "vendorsPatchResCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectInventoryAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectBuyerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "533fc9be-bb7c-43e7-8237-5fb72149425d"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "employeesObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayablesPurchaseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "PurchaseAccountReference",
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "customersPostResBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "vendorsShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsShipmentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsShipmentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsShipmentsContactRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "employeesObject": {
      "properties": {
        "Email": {
          "type": "string",
          "x-alias": "email",
          "x-samplevalue": "achester@sample.sage.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ACHESTER"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSalesRepresentative": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/employeesObjectKey"
        },
        "Name": {
          "type": "string",
          "x-alias": "firstName",
          "x-samplevalue": "Amanda W. Chester"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/employeesObjectPhoneNumbers"
          },
          "type": "array"
        },
        "Revision": {
          "$ref": "#/definitions/employeesObjectRevision"
        }
      },
      "x-vendor-objectname": "employees",
      "type": "object"
    },
    "salesOrdersResObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "b9946a0e-0448-4d18-b1ea-f26f1b1fefb1"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "customersObject": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account"
        },
        "AverageDaysToPayInvoices": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 0
        },
        "BillToContact": {
          "$ref": "#/definitions/customersObjectBillToContact"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/customersObjectCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "LAND"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/customersObjectContacts"
          },
          "type": "array"
        },
        "CreditStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/customersObjectCustomFieldValues"
          },
          "type": "array"
        },
        "CustomerSince": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T00:00:00"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "UPDATE@ce.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "TESTMAXLOAD"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsProspect": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersObjectKey"
        },
        "LastInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-04T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastPaymentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Max PayloadUPDATE"
        },
        "OpenPurchaseOrderNumber": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersObjectPhoneNumbers"
          },
          "type": "array"
        },
        "PriceLevel": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ResaleNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersObjectRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customersObjectSalesRepresentativeReference"
        },
        "ShipToContact": {
          "$ref": "#/definitions/customersObjectShipToContact"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Terms": {
          "$ref": "#/definitions/customersObjectTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsualSalesAccountReference": {
          "$ref": "#/definitions/customersObjectUsualSalesAccountReference"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.ce.com"
        }
      },
      "x-vendor-objectname": "Customer",
      "type": "object"
    },
    "customersObjectCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesInvoicesSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersPostResBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "companiesDefaultsInventory": {
      "properties": {
        "AllowDuplicatePartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AllowDuplicateUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CustomFieldDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsInventoryCustomFieldDefinitions"
          },
          "type": "array"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/companiesDefaultsInventoryFreightAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PriceLevelDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsInventoryPriceLevelDefinitions"
          },
          "type": "array"
        },
        "Revision": {
          "$ref": "#/definitions/companiesDefaultsInventoryRevision"
        },
        "ShipViaNames": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsInventoryShipViaNames"
          },
          "type": "array"
        }
      },
      "title": "Inventory",
      "type": "object"
    },
    "salesInvoicesPostResObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "purchaseOrdersShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "quotesPatchReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "customersPostResShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostResShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPostResShipToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostResShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPostResShipToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesOrderLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesOrderLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "paymentsPatchResObjectApplyToInvoiceLinesInvoiceReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].invoiceNumber",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedger": {
      "properties": {
        "AccountIDSegments": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsGeneralLedgerAccountIDSegments"
          },
          "type": "array"
        },
        "AccountingPeriods": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsGeneralLedgerAccountingPeriods"
          },
          "type": "array"
        },
        "BeginningBalanceEquityAccountReference": {
          "$ref": "#/definitions/companiesDefaultsGeneralLedgerBeginningBalanceEquityAccountReference"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/companiesDefaultsGeneralLedgerCashAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/companiesDefaultsGeneralLedgerRevision"
        },
        "RoundingAccountReference": {
          "$ref": "#/definitions/companiesDefaultsGeneralLedgerRoundingAccountReference"
        }
      },
      "title": "GeneralLedger",
      "type": "object"
    },
    "customersPatchReq": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 0
        },
        "BillToContact": {
          "$ref": "#/definitions/customersPatchReqBillToContact"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/customersPatchReqCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "LAND"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/customersPatchReqContacts"
          },
          "type": "array"
        },
        "CreditStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/customersPatchReqCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "UPDATE@ce.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "TESTMAXLOAD"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsProspect": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-04T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Max PayloadUPDATE"
        },
        "OpenPurchaseOrderNumber": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchReqPhoneNumbers"
          },
          "type": "array"
        },
        "PriceLevel": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ResaleNumber": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customersPatchReqSalesRepresentativeReference"
        },
        "ShipToContact": {
          "$ref": "#/definitions/customersPatchReqShipToContact"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Terms": {
          "$ref": "#/definitions/customersPatchReqTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsualSalesAccountReference": {
          "$ref": "#/definitions/customersPatchReqUsualSalesAccountReference"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.ce.com"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPatchReqMainAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "8d6d8278-6e50-4665-b7d5-e48895fef556"
        }
      },
      "type": "object"
    },
    "customersPatchRes": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 0
        },
        "BillToContact": {
          "$ref": "#/definitions/customersPatchResBillToContact"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/customersPatchResCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "LAND"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/customersPatchResContacts"
          },
          "type": "array"
        },
        "CreditStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/customersPatchResCustomFieldValues"
          },
          "type": "array"
        },
        "CustomerSince": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T00:00:00"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "UPDATE@ce.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "TESTMAXLOAD"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsProspect": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPatchResKey"
        },
        "LastInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Max PayloadUPDATE"
        },
        "OpenPurchaseOrderNumber": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchResPhoneNumbers"
          },
          "type": "array"
        },
        "PriceLevel": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ResaleNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPatchResRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customersPatchResSalesRepresentativeReference"
        },
        "ShipToContact": {
          "$ref": "#/definitions/customersPatchResShipToContact"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Terms": {
          "$ref": "#/definitions/customersPatchResTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsualSalesAccountReference": {
          "$ref": "#/definitions/customersPatchResUsualSalesAccountReference"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.ce.com"
        }
      },
      "x-vendor-objectname": "Customer",
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2f36cbe7-cc61-4814-8284-34601a441a5a"
        }
      },
      "type": "object"
    },
    "salesOrdersKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "b9946a0e-0448-4d18-b1ea-f26f1b1fefb1"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "vendorsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "163eaebf-ed3f-40d9-a29c-c0b6ecca645e"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "purchaseOrdersCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPatchReq": {
      "properties": {
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 0
        },
        "Description": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "Petty Cash"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "10000-00"
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        }
      },
      "x-vendor-objectname": "ledger-accounts",
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4af222da-dd47-430e-a626-d468f73b1780"
        }
      },
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "journalEntriesPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsPostReqPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "customersPatchResContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1c6f7ec2-f6e6-427b-8936-2e145783bc46"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "10dc99e7-6603-472c-8e73-060255661913"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "paymentsAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a40fe907-eed7-4e34-bd7b-27e46d8ad65e"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsObjectPaymentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "d2e1aef5-a2e8-47ac-ab97-9906fe617253"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "customersPatchReqContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "46fbdeea-7a5f-4cc0-8369-ed1e3c10ae78"
        }
      },
      "type": "object"
    },
    "customersPatchResShipToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "VendorsPostResKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "customersPatchReqTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "proposalsFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "customersPatchReqCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "vendorsMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsMailToContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsMailToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsMailToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsPostReqApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.99
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Bell-Gro Wheelbarrow - Green Metal; Holds 6 cubic feet"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/receiptsPostReqApplyToSalesLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/receiptsPostReqApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/receiptsPostReqApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/receiptsPostReqApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.99
        }
      },
      "title": "ApplyToSalesLines",
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "420e68e7-6763-45f6-a34d-4ec0c5ddcd0c"
        }
      },
      "type": "object"
    },
    "ledgerAccountsObjectPatchResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customersPostResKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "f3be89bf-9167-4176-bcb5-411a13170463"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "purchaseOrdersObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "vendorsExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesSalesTaxTypeDefinitions": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "Regular"
        },
        "Number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Taxable": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "SalesTaxTypeDefinitions",
      "type": "object"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 100
        },
        "AmountPaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "Description": {
          "type": "string"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesDiscountAccountReference"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesInvoiceReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLinesRevision"
        }
      },
      "type": "object"
    },
    "VendorsPostResPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/VendorsPostResPaymentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResPaymentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResPaymentsContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cc0f31be-413b-4721-a949-3fc3bed6f1a2"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "customersPatchResPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "receiptsApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "03b4aa2c-19a4-4abd-9a91-f639ebadb45a"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 215.85
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseOrdersCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.32
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/purchaseOrdersMainAddress"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PurchaseOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersPurchaseOrderLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "12345"
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersRevision"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseOrdersShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorNote": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseOrdersVendorReference"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2ff80f5a-d4c2-4e9c-9151-4ca9e3fa87de"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchase-orders",
      "type": "object"
    },
    "vendorsPatchResMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "959c1773-4362-43db-85c1-ed39ca8563af"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "type": "object"
    },
    "quotesPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "paymentsPatchResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "paymentsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsPostReqPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customersPatchResContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesInvoiceReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].invoiceNumber",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "8d6d8278-6e50-4665-b7d5-e48895fef556"
        }
      },
      "type": "object"
    },
    "salesTaxAgenciesGetResPayeeVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8ec5f063-5a6d-48f6-b5e1-6074d30c6f49"
        }
      },
      "title": "PayeeVendorReference",
      "type": "object"
    },
    "customersContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "paymentsApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "quotesQuoteLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesQuoteLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 159.98
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Prefabricated Birdhouse-Large Eiffel Tower"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/quotesQuoteLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/quotesQuoteLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/quotesQuoteLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/quotesQuoteLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/quotesQuoteLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        }
      },
      "title": "QuoteLines",
      "type": "object"
    },
    "customersPatchReqBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "paymentsObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 1000
        },
        "ApplyToExpenseLines": {
          "items": {
            "$ref": "#/definitions/paymentsApplyToExpenseLines"
          },
          "type": "array"
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/paymentsApplyToInvoiceLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-13T00:00:00"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsDiscountAccountReference"
        },
        "ElectronicIdentifier": {
          "type": "string"
        },
        "FundingAccount": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsElectronicPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/paymentsKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/paymentsMainAddress"
        },
        "Memo": {
          "type": "string",
          "x-samplevalue": "99-6-8-91"
        },
        "PaymentMethod": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsRevision"
        },
        "VendorReference": {
          "$ref": "#/definitions/paymentsVendorReference"
        }
      },
      "x-vendor-objectname": "payments",
      "type": "object"
    },
    "salesOrdersObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "vendorsPatchResMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "quotesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "customersPatchReqContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchReqContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchReqContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "paymentsPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPatchReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 1000
        },
        "ApplyToExpenseLines": {
          "items": {
            "$ref": "#/definitions/paymentsPatchReqApplyToExpenseLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-13T00:00:00"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPatchReqDiscountAccountReference"
        },
        "ElectronicIdentifier": {
          "type": "string"
        },
        "FundingAccount": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsElectronicPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/paymentsPatchReqMainAddress"
        },
        "Memo": {
          "type": "string",
          "x-samplevalue": "99-6-8-91"
        },
        "PaymentMethod": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPatchReqRevision"
        },
        "VendorReference": {
          "$ref": "#/definitions/paymentsPatchReqVendorReference"
        }
      },
      "x-vendor-objectname": "payments",
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersObjectPurchaseOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "VendorsPostResContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseOrdersPatchReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPatchReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "41dbc6e0-4647-4793-a171-edcd40c86ed6"
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 100
        },
        "AmountPaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "Description": {
          "type": "string"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesDiscountAccountReference"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceReference": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesInvoiceReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsApplyToInvoiceLinesRevision"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "customersPatchResContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 400
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Extra greenhouse"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayablesAges": {
      "properties": {
        "Label": {
          "type": "string",
          "x-samplevalue": "0 - 30"
        },
        "NumberOfDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        }
      },
      "title": "Ages",
      "type": "object"
    },
    "customersPatchResBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "3764d43c-46cf-4541-8355-3d719d524983"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1192.5
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Catalog #B11255:  Thistle Bird Seed Mix - 6lb."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesParentTransactionReference"
        },
        "PurchaseOrderLineReference": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesPurchaseOrderLineReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "Revision": {
          "$ref": "#/definitions/purchaseInvoicesApplyToOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7.95
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "18348541-98bd-4f43-a9c3-a5090b8131d8"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqAccountReference"
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.32
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/purchaseOrdersPatchReqMainAddress"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PurchaseOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "12345"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseOrdersPatchReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorNote": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqVendorReference"
        }
      },
      "x-vendor-objectname": "purchase-orders",
      "type": "object"
    },
    "purchaseInvoicesShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseInvoicesShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsObjectMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPatchReqAccountReference"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "First SOUPdated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-samplevalue": "PO1234"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesOrdersPatchReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesOrdersPatchReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "10310"
        },
        "SalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesOrdersPatchReqSalesOrderLines"
          },
          "type": "array"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 28.54
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "ShipDate": {
          "type": "string"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesOrdersPatchReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-orders",
      "type": "object"
    },
    "customersPostReqTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "customersObjectBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersObjectBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersObjectBillToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersObjectBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersObjectBillToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesInvoicesCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchReqContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "TESTVENDOR2UPDATE"
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ]
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.99
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Topsoil 5lb. Bag"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqApplyToInvoiceLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqApplyToInvoiceLinesJobReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesInvoiceLineReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqApplyToInvoiceLinesSalesInvoiceLineReference"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.99
        }
      },
      "title": "ApplyToInvoiceLines",
      "type": "object"
    },
    "purchaseOrdersPostReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseOrdersContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "customersPatchResShipToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "salesOrdersRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 100
        },
        "AmountPaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "Description": {
          "type": "string"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesDiscountAccountReference"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesInvoiceReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLinesRevision"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsObjectApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "vendorsPostReqPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "paymentsMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "receiptsMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Snowden Interior Design"
        }
      },
      "title": "MainAddress",
      "type": "object"
    },
    "salesTaxCodesSalesTaxAgenciesPayeeVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8ec5f063-5a6d-48f6-b5e1-6074d30c6f49"
        }
      },
      "title": "PayeeVendorReference",
      "type": "object"
    },
    "companiesDefaultsReceivablesAges": {
      "properties": {
        "Label": {
          "type": "string",
          "x-samplevalue": "0 - 30"
        },
        "NumberOfDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        }
      },
      "title": "Ages",
      "type": "object"
    },
    "vendorsObjectContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesPatchReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f5a1e3f-c61e-41ab-ac1d-90060c79aaac"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "journalEntriesPostReqGeneralJournalEntryLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesPostReqGeneralJournalEntryLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.01
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Miscellaneous reconciling entry"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/journalEntriesPostReqGeneralJournalEntryLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/journalEntriesPostReqGeneralJournalEntryLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/journalEntriesPostReqGeneralJournalEntryLinesParentTransactionReference"
        }
      },
      "title": "GeneralJournalEntryLines",
      "type": "object"
    },
    "advanceReceiptsPostReqAdvanceReceiptLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseOrdersShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesPostReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "salesOrdersFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "customersPatchResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customersBillToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "proposalsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "purchaseOrdersPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "vendorsPatchResContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "71ef6421-f9c7-41b7-af81-4b7d68bcac0c"
        }
      },
      "type": "object"
    },
    "VendorsPostResTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "vendorsPatchResShipmentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchResPurchaseOrdersContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResPurchaseOrdersContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResPurchaseOrdersContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersObjectBillToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2cf97b74-f836-449e-a021-85f34d4b8a22"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "8d6d8278-6e50-4665-b7d5-e48895fef556"
        }
      },
      "type": "object"
    },
    "paymentsMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "customersPatchReqUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "journalEntriesPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesPatchReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "GeneralJournalEntryLines": {
          "items": {
            "$ref": "#/definitions/journalEntriesPatchReqGeneralJournalEntryLines"
          },
          "type": "array"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsReversingTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PartnerReference": {
          "$ref": "#/definitions/journalEntriesPatchReqPartnerReference"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "TESTJL"
        }
      },
      "title": "journalEntriesPatchReq",
      "x-vendor-objectname": "journal-entries",
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "companies": {
      "items": {
        "$ref": "#/definitions/companiesObject"
      },
      "type": "array"
    },
    "advanceReceiptsGetResAdvanceReceiptLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "paymentsObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "vendorsPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPaymentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPaymentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPaymentsContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "inventoryItemsCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Alternate Vendor"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersObjectTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10000
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Transfer From Regular to Payroll Checking"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLinesRevision"
        }
      },
      "title": "GeneralJournalEntryLines",
      "type": "object"
    },
    "receiptsSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "VendorsPostResContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqCreditCardAuthorizationInfoAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqApplyToInvoiceLinesSalesInvoiceLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "19e2520b-2e50-430d-ab75-6258a70052f8"
        }
      },
      "title": "SalesInvoiceLineReference",
      "type": "object"
    },
    "salesInvoicesPostResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 200"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "VendorsPostResContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/VendorsPostResContactsAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-20T18:00:30"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResContactsRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "customersPostResCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesProposalLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "62d35f15-799d-4f15-b61e-f554bbb4b80f"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "vendorsPatchResExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "customersObjectContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1c6f7ec2-f6e6-427b-8936-2e145783bc46"
        }
      },
      "type": "object"
    },
    "quotesPatchReqQuoteLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "eff16ea0-0a30-49b6-8cab-830f634001fb"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "quotesPostReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "salesInvoicesPostResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 7538.82
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 7538.82
        },
        "ApplyToProposalLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLines"
          },
          "type": "array"
        },
        "ApplyToSalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "discountAmount",
          "x-samplevalue": 150.78
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPostResObjectRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount",
          "x-samplevalue": 426.73
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectSalesTaxCodeReference"
        },
        "ShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesInvoicesPostResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string",
          "x-alias": "description"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "e5fab6b8-d451-455c-92a0-147f782115e3"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "sales-invoices",
      "type": "object"
    },
    "purchaseInvoicesObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "paymentsObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "customersPatchResSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "vendorsPatchResKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companiesDefaultsInventoryFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "customersPostReq": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 0
        },
        "BillToContact": {
          "$ref": "#/definitions/customersPostReqBillToContact"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/customersPostReqCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "LAND"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/customersPostReqContacts"
          },
          "type": "array"
        },
        "CreditStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/customersPostReqCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "UPDATE@ce.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "TESTMAXLOAD"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsProspect": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-04T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Max PayloadUPDATE"
        },
        "OpenPurchaseOrderNumber": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostReqPhoneNumbers"
          },
          "type": "array"
        },
        "PriceLevel": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ResaleNumber": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customersPostReqSalesRepresentativeReference"
        },
        "ShipToContact": {
          "$ref": "#/definitions/customersPostReqShipToContact"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Terms": {
          "$ref": "#/definitions/customersPostReqTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsualSalesAccountReference": {
          "$ref": "#/definitions/customersPostReqUsualSalesAccountReference"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.ce.com"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "customersPostRes": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 0
        },
        "BillToContact": {
          "$ref": "#/definitions/customersPostResBillToContact"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/customersPostResCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "LAND"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/customersPostResContacts"
          },
          "type": "array"
        },
        "CreditStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/customersPostResCustomFieldValues"
          },
          "type": "array"
        },
        "CustomerSince": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T00:00:00"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "UPDATE@ce.com"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "TESTMAXLOAD"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsProspect": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPostResKey"
        },
        "LastInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Max PayloadUPDATE"
        },
        "OpenPurchaseOrderNumber": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostResPhoneNumbers"
          },
          "type": "array"
        },
        "PriceLevel": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ResaleNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPostResRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customersPostResSalesRepresentativeReference"
        },
        "ShipToContact": {
          "$ref": "#/definitions/customersPostResShipToContact"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Terms": {
          "$ref": "#/definitions/customersPostResTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsualSalesAccountReference": {
          "$ref": "#/definitions/customersPostResUsualSalesAccountReference"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.ce.com"
        }
      },
      "x-vendor-objectname": "Customer",
      "type": "object"
    },
    "paymentsPostResObjectDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesSalesOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "23e67fe3-e9c0-4ed3-937a-64abc51d965f"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "customersPatchReqShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchReqShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchReqShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "customersPatchResShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchResShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPatchResShipToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchResShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPatchResShipToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3499
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Riding Lawn Mower- 17 Horse Power"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Revision": {
          "$ref": "#/definitions/customerCreditMemosApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3499
        }
      },
      "title": "ApplyToSalesLines",
      "type": "object"
    },
    "quotesPostReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "4589 East Jefferson Blvd."
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Alpharetta"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30004"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "receiptsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "24bf1e4a-a008-41c9-97ae-510ffd2b1eb8"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "salesInvoicesPatchReqApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqApplyToSalesLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqApplyToSalesLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "customersPatchReqBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchReqBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchReqBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPatchReqBillToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "companiesDefaultsJob": {
      "properties": {
        "AppliedLaborBurdenAccountReference": {
          "$ref": "#/definitions/companiesDefaultsJobAppliedLaborBurdenAccountReference"
        },
        "CustomFieldDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsJobCustomFieldDefinitions"
          },
          "type": "array"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LaborBurdenAccountReference": {
          "$ref": "#/definitions/companiesDefaultsJobLaborBurdenAccountReference"
        },
        "LaborBurdenPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PayablesRetainageAccountReference": {
          "$ref": "#/definitions/companiesDefaultsJobPayablesRetainageAccountReference"
        },
        "ReceivablesRetainageAccountReference": {
          "$ref": "#/definitions/companiesDefaultsJobReceivablesRetainageAccountReference"
        },
        "RetainagePercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/companiesDefaultsJobRevision"
        }
      },
      "title": "Job",
      "type": "object"
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "purchaseOrdersPostResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "paymentsPatchReqRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "customersPostReqContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "receiptsDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "DiscountAccountReference",
      "type": "object"
    },
    "salesInvoicesPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "customersPatchResBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchResBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPatchResBillToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchResBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPatchResBillToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "customerCreditMemosRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "purchaseOrdersPostResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 200"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesPostReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "GeneralJournalEntryLines": {
          "items": {
            "$ref": "#/definitions/journalEntriesPostReqGeneralJournalEntryLines"
          },
          "type": "array"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsReversingTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PartnerReference": {
          "$ref": "#/definitions/journalEntriesPostReqPartnerReference"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "TESTJL"
        }
      },
      "title": "journalEntriesPostReq",
      "x-vendor-objectname": "journal-entries",
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "7d0f2aca-649f-4daf-8f54-44f4374cfc71"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "41dbc6e0-4647-4793-a171-edcd40c86ed6"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseInvoicesObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersPostReqBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7d0bfc0b-4d19-4fc2-a591-00a32b94c6d7"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "companiesDefaultsJobReceivablesRetainageAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "ReceivablesRetainageAccountReference",
      "type": "object"
    },
    "VendorsPostResShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/VendorsPostResShipmentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResShipmentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResShipmentsContactRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2cf97b74-f836-449e-a021-85f34d4b8a22"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "customersPatchResKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "f3be89bf-9167-4176-bcb5-411a13170463"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "quotesPatchRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 213.89
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/quotesCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-07T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.28
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/quotesFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-06T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/quotesKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuoteLines": {
          "items": {
            "$ref": "#/definitions/quotesQuoteLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/quotesRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/quotesSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.99
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/quotesSalesTaxCodeReference"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/quotesShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "quotes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Quote"
    },
    "purchaseOrdersPurchaseOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "vendorsContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "quotesPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesPatchReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 213.89
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Sample Note Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/quotesPatchReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-07T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.28
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/quotesPatchReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-06T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuoteLines": {
          "items": {
            "$ref": "#/definitions/quotesPatchReqQuoteLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/quotesPatchReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.99
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/quotesPatchReqSalesTaxCodeReference"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/quotesPatchReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "quotesPatchReq",
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1995
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Riding Lawn Mower- 17 Horse Power"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesParentTransactionReference"
        },
        "PurchaseInvoiceLineReference": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesPurchaseInvoiceLineReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Revision": {
          "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1995
        }
      },
      "title": "ApplyToInvoiceLines",
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "VendorsPostResPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "quotesShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/quotesShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Franklin Botanical Gardens"
        }
      },
      "title": "ShipToAddress",
      "type": "object"
    },
    "quotesPatchReqQuoteLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesPatchReqQuoteLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 199.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Thistle Bird Seed Mix 6 lb. Bag"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/quotesPatchReqQuoteLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/quotesPatchReqQuoteLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/quotesPatchReqQuoteLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 19.99
        }
      },
      "title": "QuoteLines",
      "type": "object"
    },
    "salesOrdersPatchResObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "vendorsPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "inventoryItemsPriceLevels": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Level": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Price Level 1"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": [
            {
              "alias": "priceList[*].price",
              "path": "PriceLevels[*].UnitPrice | [0]"
            }
          ],
          "x-samplevalue": 39.99
        }
      },
      "type": "object"
    },
    "paymentsPatchReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsPatchReqMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "title": "SalesAccountReference",
      "type": "object"
    },
    "receiptsPostReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "4552 Peachtree Industrial Blvd"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Chamblee"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30329"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c6ce506c-8397-49cc-9b2a-75fe92aa800a"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "163eaebf-ed3f-40d9-a29c-c0b6ecca645e"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "customersPostReqUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "vendorsPatchResCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "quotesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2fa466c0-8d58-45be-a301-2c2b9dd6f943"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "salesTaxCodesSalesTaxAgenciesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ae0f430c-9b01-4bcc-a8f1-ea3408ed5257"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "receiptsPostReqCreditCardAuthorizationInfoAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsPostReqCreditCardAuthorizationInfoAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Williamson Industries"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2f36cbe7-cc61-4814-8284-34601a441a5a"
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersSalesOrderLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayables": {
      "properties": {
        "Ages": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsPayablesAges"
          },
          "type": "array"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/companiesDefaultsPayablesCashAccountReference"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/companiesDefaultsPayablesDiscountAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PayablesAccountReference": {
          "$ref": "#/definitions/companiesDefaultsPayablesPayablesAccountReference"
        },
        "PaymentMethodNames": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsPayablesPaymentMethodNames"
          },
          "type": "array"
        },
        "PurchaseAccountReference": {
          "$ref": "#/definitions/companiesDefaultsPayablesPurchaseAccountReference"
        },
        "Revision": {
          "$ref": "#/definitions/companiesDefaultsPayablesRevision"
        },
        "Terms": {
          "$ref": "#/definitions/companiesDefaultsPayablesTerms"
        },
        "VendorCustomFieldDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsPayablesVendorCustomFieldDefinitions"
          },
          "type": "array"
        },
        "WriteChecksCashAccountReference": {
          "$ref": "#/definitions/companiesDefaultsPayablesWriteChecksCashAccountReference"
        }
      },
      "title": "Payables",
      "type": "object"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "420e68e7-6763-45f6-a34d-4ec0c5ddcd0c"
        }
      },
      "type": "object"
    },
    "customersPatchResShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receiptsAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "receiptsPostRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToSalesLines"
          },
          "type": "array"
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/receiptsCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/receiptsCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-01-02T00:00:00"
        },
        "DepositTicketID": {
          "type": "string",
          "x-samplevalue": "010207"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsDiscountAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/receiptsKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/receiptsMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReceiptNumber": {
          "type": "string",
          "x-samplevalue": "1000"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "1009"
        },
        "Revision": {
          "$ref": "#/definitions/receiptsRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/receiptsSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/receiptsSalesTaxCodeReference"
        }
      },
      "title": "receipts",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Receipt"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "receiptsPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsPostReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 220.31
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/receiptsPostReqApplyToSalesLines"
          },
          "type": "array"
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/receiptsPostReqCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/receiptsPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "DepositTicketID": {
          "type": "string",
          "x-samplevalue": "030307"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsPostReqDiscountAccountReference"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/receiptsPostReqMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "AMEX"
        },
        "ReceiptNumber": {
          "type": "string",
          "x-samplevalue": "2015"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "4452"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/receiptsPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 14.41
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/receiptsPostReqSalesTaxCodeReference"
        }
      },
      "title": "receiptsPostReq",
      "x-vendor-objectname": "Receipt",
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerAccountingPeriods": {
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "To": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        }
      },
      "title": "AccountingPeriods",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "959c1773-4362-43db-85c1-ed39ca8563af"
        }
      },
      "type": "object"
    },
    "customerCreditMemosFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "companiesDefaultsPayablesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "salesInvoicesPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "receiptsApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "salesTaxAgenciesGetResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesTaxAgenciesGetResAccountReference"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Cherokee County Sales Tax"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "CHEROKEE"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PayeeVendorReference": {
          "$ref": "#/definitions/salesTaxAgenciesGetResPayeeVendorReference"
        },
        "Revision": {
          "$ref": "#/definitions/salesTaxAgenciesGetResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4f2ceed7-b910-43b2-8b3e-2219aee60e01"
        }
      },
      "title": "salesTaxAgenciesGetRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "tax-agencies"
    },
    "purchaseInvoicesApplyToPurchasesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPatchResMailToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "VendorsPostResMailToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsPatchResShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "paymentsApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "paymentsVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "VendorsPostResPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "companiesDefaultsJobLaborBurdenAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "LaborBurdenAccountReference",
      "type": "object"
    },
    "paymentsObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "salesInvoicesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f5a1e3f-c61e-41ab-ac1d-90060c79aaac"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "receiptsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "22ad2e24-1c15-41a8-a83a-97b76468a68e"
        }
      },
      "type": "object"
    },
    "proposalsCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5841f453-6c47-4e89-8f84-6b601ecadff0"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "salesInvoicesPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersObjectSalesOrderLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "paymentsApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "435ee8f2-5368-4baa-8e9e-9f4383dac53d"
        }
      },
      "type": "object"
    },
    "paymentsPostReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 7538.82
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 7538.82
        },
        "ApplyToProposalLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLines"
          },
          "type": "array"
        },
        "ApplyToSalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "discountAmount",
          "x-samplevalue": 150.78
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount",
          "x-samplevalue": 426.73
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectSalesTaxCodeReference"
        },
        "ShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string",
          "x-alias": "description"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "e5fab6b8-d451-455c-92a0-147f782115e3"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "sales-invoices",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "quotesSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5be0d571-c750-49cf-b91b-dfe519583170"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "customersBillToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "03b4aa2c-19a4-4abd-9a91-f639ebadb45a"
        }
      },
      "type": "object"
    },
    "customersObjectShipToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 75
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "inventoryItemsVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "vendorsPostReqMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "vendorsPostReqMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "journalEntriesGetResAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseOrdersPatchReqVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "vendorsObjectPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "vendorsPatchResContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchResContactsAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-20T18:00:30"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResContactsRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "959c1773-4362-43db-85c1-ed39ca8563af"
        }
      },
      "type": "object"
    },
    "vendorsCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 215.85
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.32
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectMainAddress"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PurchaseOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "12345"
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectRevision"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorNote": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectVendorReference"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2ff80f5a-d4c2-4e9c-9151-4ca9e3fa87de"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchase-orders",
      "type": "object"
    },
    "customerCreditMemosPatchReqApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1b12e086-d33a-4450-b042-7c19ed1c2aaf"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsPatchReqPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "vendorsObjectMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsObjectMailToContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectMailToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectMailToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "customersPatchReqContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "ledgerAccountsObject": {
      "properties": {
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 0
        },
        "Description": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "Petty Cash"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "10000-00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/ledgerAccountsRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "16c6cacc-40d0-4fce-a77a-e8ca8048027d"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "ledger-accounts",
      "type": "object"
    },
    "vendorsPostReqMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPostReqMailToContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersPatchResCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "VendorsPostResPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "vendorsObjectCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesPurchaseOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c808ee53-4c4a-4033-9f42-7758e0fa38f7"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 504.22
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "First SOUPdated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-samplevalue": "PO1234"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersPatchResObjectKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "10310"
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersPatchResObjectRevision"
        },
        "SalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesOrdersPatchResObjectSalesOrderLines"
          },
          "type": "array"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 28.54
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesOrdersPatchResObjectSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesOrdersPatchResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-orders",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "journalEntriesPatchReqPartnerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "PartnerReference",
      "type": "object"
    },
    "purchaseOrdersPatchReqPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "salesOrdersResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 504.22
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "First SOUPdated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-samplevalue": "PO1234"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesOrdersResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesOrdersResObjectFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersResObjectKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "10310"
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersResObjectRevision"
        },
        "SalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesOrdersResObjectSalesOrderLines"
          },
          "type": "array"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 28.54
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesOrdersResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-orders",
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d8a90af4-0ba5-44b5-8abb-7ea5a420920e"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 100
        },
        "AmountPaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "Description": {
          "type": "string"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesDiscountAccountReference"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceReference": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesInvoiceReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsObjectApplyToInvoiceLinesRevision"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReqSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "vendorsPatchResShipmentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "vendorsObject": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "BEL005"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 75
        },
        "CashAccountReference": {
          "$ref": "#/definitions/vendorsObjectCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "REPAIR"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/vendorsObjectContacts"
          },
          "type": "array"
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/vendorsObjectCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "wabney@sample.sage.com"
        },
        "ExpenseAccountReference": {
          "$ref": "#/definitions/vendorsObjectExpenseAccountReference"
        },
        "Form1099Type": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ABNEY"
        },
        "IncludePurchaseRepresentativeOnEmailedForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectKey"
        },
        "LastInvoiceAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": -195.65
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-12T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "LastPaymentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MailToContact": {
          "$ref": "#/definitions/vendorsObjectMailToContact"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney and Son Contractors"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PaymentsContact": {
          "$ref": "#/definitions/vendorsObjectPaymentsContact"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectPhoneNumbers"
          },
          "type": "array"
        },
        "PurchaseOrdersContact": {
          "$ref": "#/definitions/vendorsObjectPurchaseOrdersContact"
        },
        "PurchaseRepresentativeReference": {
          "$ref": "#/definitions/vendorsObjectPurchaseRepresentativeReference"
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectRevision"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ShipmentsContact": {
          "$ref": "#/definitions/vendorsObjectShipmentsContact"
        },
        "TaxIDNumber": {
          "type": "string"
        },
        "Terms": {
          "$ref": "#/definitions/vendorsObjectTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPaymentDefaults": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.sage50accounting.com"
        }
      },
      "x-vendor-objectname": "Vendor",
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "vendorsObjectCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "salesTaxAgenciesGetResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "ledgerAccountsObjectPostRes": {
      "properties": {
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 0
        },
        "Description": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "Petty Cash"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "10000-00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/ledgerAccountsObjectPostResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "16c6cacc-40d0-4fce-a77a-e8ca8048027d"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "ledger-accounts",
      "type": "object"
    },
    "customerCreditMemosKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ae0feb78-1740-4be7-a7db-7c997ebe65da"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "customersPostResBillToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "vendorsPostReqShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "vendorsObjectPaymentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesCustomerCustomFieldDefinitions": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Label": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        }
      },
      "title": "CustomerCustomFieldDefinitions",
      "type": "object"
    },
    "customersPostReqContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostReqContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostReqContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "vendorsPurchaseOrdersContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqGeneralJournalEntryLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a1331316-ce07-4160-8507-9d7297f9305a"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "customersPostResShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesInvoicesObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 7538.82
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 7538.82
        },
        "ApplyToProposalLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesApplyToProposalLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesApplyToSalesLines"
          },
          "type": "array"
        },
        "ApplyToSalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesInvoicesCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "discountAmount",
          "x-samplevalue": 150.78
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesInvoicesFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesInvoicesSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount",
          "x-samplevalue": 426.73
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesInvoicesSalesTaxCodeReference"
        },
        "ShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesInvoicesShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string",
          "x-alias": "description"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "e5fab6b8-d451-455c-92a0-147f782115e3"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "sales-invoices",
      "type": "object"
    },
    "receiptsCreditCardAuthorizationInfo": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsCreditCardAuthorizationInfoAddress"
        },
        "AmountAuthorized": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AuthorizationCode": {
          "type": "string"
        },
        "AuthorizationStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LastFourDigits": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        }
      },
      "title": "CreditCardAuthorizationInfo",
      "type": "object"
    },
    "vendorsObjectPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30092"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "quotesQuoteLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "customersShipToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "vendorsPatchReqShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customersBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersBillToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersBillToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetRes": {
      "items": {
        "$ref": "#/definitions/advanceReceiptsGetResObject"
      },
      "type": "array"
    },
    "salesOrdersPatchReqSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "customersPostResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "jobsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "vendorsPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPurchaseOrdersContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPurchaseOrdersContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPurchaseOrdersContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersObjectUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "vendorsPatchResContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "companiesDefaultsInventoryPriceLevelDefinitions": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Level": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Price Level 1"
        }
      },
      "title": "PriceLevelDefinitions",
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseInvoicesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 1412.5
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 1412.5
        },
        "ApplyToOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesApplyToOrderLines"
          },
          "type": "array"
        },
        "ApplyToPurchasesLines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesApplyToPurchasesLines"
          },
          "type": "array"
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseInvoicesCustomerReference"
        },
        "CustomerSalesOrderNumber": {
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-12-02T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-01-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "discountDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-12-12T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/purchaseInvoicesKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "93238-01"
        },
        "Revision": {
          "$ref": "#/definitions/purchaseInvoicesRevision"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseInvoicesShipToAddress"
        },
        "ShipVia": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseInvoicesVendorReference"
        },
        "WaitingForBill": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "x-vendor-objectname": "PurchaseInvoice",
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "VendorsPostResPurchaseOrdersContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "quotesShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "4589 East Jefferson Blvd."
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Alpharetta"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30004"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "advanceReceiptsGetResCreditCardAuthorizationInfoAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsGetResCreditCardAuthorizationInfoAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "salesOrdersPatchResObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cc752df9-e3d9-4ca3-abfd-373b6efa723d"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "receiptsPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseOrdersPostReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPostReqMainAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "quotesQuoteLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "343f2c86-dee6-4f8f-b58c-2021dd5938ab"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "salesOrdersPatchResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "08d615eb-ad77-4ad2-b38b-25df548725d2"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 200"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "VendorsPostResPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "proposalsSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "receiptsPostReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsPostReqMainAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Williams Industries"
        }
      },
      "title": "MainAddress",
      "type": "object"
    },
    "quotesObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 213.89
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/quotesCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-07T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.28
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/quotesFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-06T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/quotesKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuoteLines": {
          "items": {
            "$ref": "#/definitions/quotesQuoteLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/quotesRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/quotesSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.99
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/quotesSalesTaxCodeReference"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/quotesShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "quotes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Quote"
    },
    "paymentsObjectApplyToInvoiceLinesInvoiceReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].invoiceNumber",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "inventoryItemsObjectPriceLevels": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Level": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Price Level 1"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": [
            {
              "alias": "priceList[*].price",
              "path": "PriceLevels[*].UnitPrice | [0]"
            }
          ],
          "x-samplevalue": 39.99
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "salesInvoicesPatchResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "VendorsPostResCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "62e9aa9a-ddbf-4804-b8e5-b215f6fe4a3d"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "purchaseOrdersPatchReqPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersPatchReqShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "customersObjectShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "journalEntriesPatchReqGeneralJournalEntryLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesPatchReqGeneralJournalEntryLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.01
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Miscellaneous reconciling entry"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/journalEntriesPatchReqGeneralJournalEntryLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/journalEntriesPatchReqGeneralJournalEntryLinesParentTransactionReference"
        }
      },
      "title": "GeneralJournalEntryLines",
      "type": "object"
    },
    "paymentsObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "d2e1aef5-a2e8-47ac-ab97-9906fe617253"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "receiptsApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "advanceReceiptsGetResMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsGetResMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        }
      },
      "title": "MainAddress",
      "type": "object"
    },
    "vendorsPostReqContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "quotesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "purchaseOrdersObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1505 Pavilion Place"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30093-3203"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        },
        "AmountDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosPostReqApplyToInvoiceLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.36
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.02
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/customerCreditMemosPostReqSalesTaxCodeReference"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "customerCreditMemosPostReq",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Bell-Grow Series: Gardening Handbook (Madison)"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesRevision"
        },
        "SalesOrderLineReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToSalesOrderLinesSalesOrderLineReference"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.95
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.98
        },
        "AmountDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToSalesLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "213456"
        },
        "CustomerReference": {
          "$ref": "#/definitions/customerCreditMemosCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-27T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-18T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.2
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-26T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/customerCreditMemosFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customerCreditMemosKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "CCM4001"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customerCreditMemosRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesTaxCodeReference"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "customerCreditMemos",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "customer-credit-memos"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "quotesQuoteLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "36ff70f9-cc32-4f2d-8f84-5928839d1450"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResAdvanceReceiptLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "da8bb82b-d277-4e55-9246-1cebfd749b80"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 215.85
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.32
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectMainAddress"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PurchaseOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersPatchResObjectPurchaseOrderLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "12345"
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectRevision"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorNote": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseOrdersPatchResObjectVendorReference"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2ff80f5a-d4c2-4e9c-9151-4ca9e3fa87de"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchase-orders",
      "type": "object"
    },
    "customersPostResContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostResContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPostResContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostResContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/customersPostResContactsRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "salesTaxCodesSalesTaxAgenciesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "purchaseOrdersPatchReqPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "receiptsObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToSalesLines"
          },
          "type": "array"
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/receiptsCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/receiptsCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-01-02T00:00:00"
        },
        "DepositTicketID": {
          "type": "string",
          "x-samplevalue": "010207"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsDiscountAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/receiptsKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/receiptsMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReceiptNumber": {
          "type": "string",
          "x-samplevalue": "1000"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "1009"
        },
        "Revision": {
          "$ref": "#/definitions/receiptsRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/receiptsSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/receiptsSalesTaxCodeReference"
        }
      },
      "title": "receipts",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Receipt"
    },
    "purchaseOrdersPatchReqPurchaseOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "420e68e7-6763-45f6-a34d-4ec0c5ddcd0c"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsGetResAccountReference"
        },
        "AdvanceReceiptLines": {
          "items": {
            "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLines"
          },
          "type": "array"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500
        },
        "AmountRemaining": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -500
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/advanceReceiptsGetResCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/advanceReceiptsGetResCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/advanceReceiptsGetResKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-25T20:05:36"
        },
        "MainAddress": {
          "$ref": "#/definitions/advanceReceiptsGetResMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "abcdef"
        },
        "Revision": {
          "$ref": "#/definitions/advanceReceiptsGetResRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/advanceReceiptsGetResSalesRepresentativeReference"
        }
      },
      "title": "advanceReceiptsGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "advance-receipts"
    },
    "vendorsPatchResContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "customersPostResContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPatchResObjectAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 1000
        },
        "ApplyToExpenseLines": {
          "items": {
            "$ref": "#/definitions/paymentsPatchResObjectApplyToExpenseLines"
          },
          "type": "array"
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/paymentsPatchResObjectApplyToInvoiceLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-13T00:00:00"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPatchResObjectDiscountAccountReference"
        },
        "ElectronicIdentifier": {
          "type": "string"
        },
        "FundingAccount": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsElectronicPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/paymentsPatchResObjectKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/paymentsPatchResObjectMainAddress"
        },
        "Memo": {
          "type": "string",
          "x-samplevalue": "99-6-8-91"
        },
        "PaymentMethod": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPatchResObjectRevision"
        },
        "VendorReference": {
          "$ref": "#/definitions/paymentsPatchResObjectVendorReference"
        }
      },
      "x-vendor-objectname": "payments",
      "type": "object"
    },
    "journalEntriesPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesGetResAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "GeneralJournalEntryLines": {
          "items": {
            "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLines"
          },
          "type": "array"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsReversingTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PartnerReference": {
          "$ref": "#/definitions/journalEntriesGetResPartnerReference"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "ADJ0303103"
        },
        "Revision": {
          "$ref": "#/definitions/journalEntriesGetResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a1331316-ce07-4160-8507-9d7297f9305a"
        }
      },
      "title": "journalEntriesGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "journal-entries"
    },
    "paymentsPostResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPostResObjectAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 1000
        },
        "ApplyToExpenseLines": {
          "items": {
            "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLines"
          },
          "type": "array"
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/paymentsPostResObjectApplyToInvoiceLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-13T00:00:00"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPostResObjectDiscountAccountReference"
        },
        "ElectronicIdentifier": {
          "type": "string"
        },
        "FundingAccount": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsElectronicPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/paymentsPostResObjectKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/paymentsPostResObjectMainAddress"
        },
        "Memo": {
          "type": "string",
          "x-samplevalue": "99-6-8-91"
        },
        "PaymentMethod": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPostResObjectRevision"
        },
        "VendorReference": {
          "$ref": "#/definitions/paymentsPostResObjectVendorReference"
        }
      },
      "x-vendor-objectname": "payments",
      "type": "object"
    },
    "receiptsApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "customersPatchReqBillToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "727f5195-b2bf-4bab-b86a-713141b1fedf"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesPurchaseOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c808ee53-4c4a-4033-9f42-7758e0fa38f7"
        }
      },
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].billNumber",
          "x-samplevalue": "5d027468-92d1-49a5-8c7a-425aaf6f07cf"
        }
      },
      "type": "object"
    },
    "customersPatchResContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPatchResContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPatchResContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPatchResContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/customersPatchResContactsRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesSalesOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "23e67fe3-e9c0-4ed3-937a-64abc51d965f"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "quotesPatchReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9127b75c-d92e-4181-8981-c800adf9e511"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "customerCreditMemosPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        },
        "AmountDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosPatchReqApplyToInvoiceLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.36
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.02
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqSalesTaxCodeReference"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "customerCreditMemosPatchReq",
      "type": "object"
    },
    "customerCreditMemosPatchRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.98
        },
        "AmountDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/customerCreditMemosApplyToSalesLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "213456"
        },
        "CustomerReference": {
          "$ref": "#/definitions/customerCreditMemosCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-27T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-18T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.2
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-26T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/customerCreditMemosFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customerCreditMemosKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "CCM4001"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customerCreditMemosRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/customerCreditMemosSalesTaxCodeReference"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "customerCreditMemos",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "customer-credit-memos"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customersObjectContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "customerCreditMemosSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "customersShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "salesOrdersObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 504.22
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "First SOUPdated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-samplevalue": "PO1234"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesOrdersCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesOrdersFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "10310"
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersRevision"
        },
        "SalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesOrdersSalesOrderLines"
          },
          "type": "array"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesOrdersSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 28.54
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesOrdersSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesOrdersShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-orders",
      "type": "object"
    },
    "salesOrdersPostReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "customersObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "f3be89bf-9167-4176-bcb5-411a13170463"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "paymentsApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerRoundingAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ecc7ff85-6f2f-42e6-a22d-ffb47f76dfa5"
        }
      },
      "title": "RoundingAccountReference",
      "type": "object"
    },
    "salesOrdersPatchResObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "b9946a0e-0448-4d18-b1ea-f26f1b1fefb1"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "proposalsObject": {
      "properties": {
        "Accepted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "AccountReference": {
          "$ref": "#/definitions/proposalsAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10600
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/proposalsCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/proposalsFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ProposalLines": {
          "items": {
            "$ref": "#/definitions/proposalsProposalLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "P10005"
        },
        "Revision": {
          "$ref": "#/definitions/proposalsRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/proposalsSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 600
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/proposalsSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-31T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/proposalsShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "Net Due"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a977a03e-0d9c-4531-9e62-6c9a4568052e"
        }
      },
      "title": "proposals",
      "type": "object",
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "journal-entries"
    },
    "salesOrdersPatchReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqAccountReference"
        },
        "AdvanceReceiptLines": {
          "items": {
            "$ref": "#/definitions/advanceReceiptsPostReqAdvanceReceiptLines"
          },
          "type": "array"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "AmountRemaining": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -5000
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/advanceReceiptsPostReqCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/advanceReceiptsPostReqMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "TESTADVRECEIPT"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqSalesRepresentativeReference"
        }
      },
      "title": "advanceReceiptsPatchReq",
      "x-vendor-objectname": "advance-receipts",
      "type": "object"
    },
    "vendorsPostReqPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqGeneralJournalEntryLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "companiesDefaultsReceivables": {
      "properties": {
        "Ages": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsReceivablesAges"
          },
          "type": "array"
        },
        "CashAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesCashAccountReference"
        },
        "CustomerCustomFieldDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsReceivablesCustomerCustomFieldDefinitions"
          },
          "type": "array"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesDiscountAccountReference"
        },
        "FinanceChargeRevenueAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesFinanceChargeRevenueAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PaymentMethodNames": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsReceivablesPaymentMethodNames"
          },
          "type": "array"
        },
        "ReceivablesAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesReceivablesAccountReference"
        },
        "Revision": {
          "$ref": "#/definitions/companiesDefaultsReceivablesRevision"
        },
        "SalesAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesSalesAccountReference"
        },
        "SalesTaxTypeDefinitions": {
          "items": {
            "$ref": "#/definitions/companiesDefaultsReceivablesSalesTaxTypeDefinitions"
          },
          "type": "array"
        },
        "TaxAccountReference": {
          "$ref": "#/definitions/companiesDefaultsReceivablesTaxAccountReference"
        },
        "Terms": {
          "$ref": "#/definitions/companiesDefaultsReceivablesTerms"
        }
      },
      "title": "Receivables",
      "type": "object"
    },
    "customersPostResContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1c6f7ec2-f6e6-427b-8936-2e145783bc46"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cf3ca6e4-1f1a-4fcb-92f1-da61247255a8"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "salesInvoicesFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPatchResCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerAccountIDSegments": {
      "properties": {
        "Length": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "GL Account"
        },
        "Separator": {
          "type": "string",
          "x-samplevalue": "-"
        }
      },
      "title": "AccountIDSegments",
      "type": "object"
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "salesOrdersSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "41dbc6e0-4647-4793-a171-edcd40c86ed6"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        }
      },
      "type": "object"
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "vendorsContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsContactsAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/vendorsContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-20T18:00:30"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsContactsRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqApplyToInvoiceLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a70f3b22-49de-4bfe-8cfb-8471673d7115"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "companiesDefaults": {
      "properties": {
        "GeneralLedger": {
          "$ref": "#/definitions/companiesDefaultsGeneralLedger"
        },
        "Inventory": {
          "$ref": "#/definitions/companiesDefaultsInventory"
        },
        "Job": {
          "$ref": "#/definitions/companiesDefaultsJob"
        },
        "Payables": {
          "$ref": "#/definitions/companiesDefaultsPayables"
        },
        "Receivables": {
          "$ref": "#/definitions/companiesDefaultsReceivables"
        }
      },
      "title": "Defaults",
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "18348541-98bd-4f43-a9c3-a5090b8131d8"
        }
      },
      "type": "object"
    },
    "customersObjectBillToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "customersObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "420e68e7-6763-45f6-a34d-4ec0c5ddcd0c"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPatchResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsPostReqMainAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        }
      },
      "title": "MainAddress",
      "type": "object"
    },
    "receiptsCreditCardAuthorizationInfoAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsCreditCardAuthorizationInfoAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersPostResShipToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "customersPatchResBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "VendorsPostResPurchaseOrdersContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseOrdersMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "VendorsPostResPaymentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPostReqShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.99
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Topsoil 5lb. Bag"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqApplyToInvoiceLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqApplyToInvoiceLinesJobReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesInvoiceLineReference": {
          "$ref": "#/definitions/customerCreditMemosPatchReqApplyToInvoiceLinesSalesInvoiceLineReference"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.99
        }
      },
      "title": "ApplyToInvoiceLines",
      "type": "object"
    },
    "customersPatchResShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqAccountReference"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPatchReqApplyToSalesLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "discountAmount",
          "x-samplevalue": 150.78
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount",
          "x-samplevalue": 426.73
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesInvoicesPatchReqSalesTaxCodeReference"
        },
        "ShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesInvoicesPatchReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string",
          "x-alias": "description"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-invoices",
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsPatchResPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "vendorsMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "proposalsProposalLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8119bc7f-19b8-453f-a79b-130a9a7a3b22"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "customersShipToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "ledgerAccountsObjectPostResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "22ad2e24-1c15-41a8-a83a-97b76468a68e"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPostReqPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPostReqPaymentsContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "receiptsApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 25
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Customer referral bonus"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/receiptsApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "ApplyToSalesLines",
      "type": "object"
    },
    "customerCreditMemosPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "959c1773-4362-43db-85c1-ed39ca8563af"
        }
      },
      "type": "object"
    },
    "inventoryItemsObjectCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Alternate Vendor"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotesQuoteLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "salesInvoicesPatchResObjectSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "customersObjectShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersObjectShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersObjectShipToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersObjectShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersObjectShipToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "paymentsApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "vendorsPostReq": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "BEL005"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 75
        },
        "CashAccountReference": {
          "$ref": "#/definitions/vendorsPostReqCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "REPAIR"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqContacts"
          },
          "type": "array"
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "wabney@sample.sage.com"
        },
        "ExpenseAccountReference": {
          "$ref": "#/definitions/vendorsPostReqExpenseAccountReference"
        },
        "Form1099Type": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ABNEY"
        },
        "IncludePurchaseRepresentativeOnEmailedForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "MailToContact": {
          "$ref": "#/definitions/vendorsPostReqMailToContact"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney and Son Contractors"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PaymentsContact": {
          "$ref": "#/definitions/vendorsPostReqPaymentsContact"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqPhoneNumbers"
          },
          "type": "array"
        },
        "PurchaseOrdersContact": {
          "$ref": "#/definitions/vendorsPostReqPurchaseOrdersContact"
        },
        "PurchaseRepresentativeReference": {
          "$ref": "#/definitions/vendorsPostReqPurchaseRepresentativeReference"
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ShipmentsContact": {
          "$ref": "#/definitions/vendorsPostReqShipmentsContact"
        },
        "TaxIDNumber": {
          "type": "string"
        },
        "Terms": {
          "$ref": "#/definitions/vendorsPostReqTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPaymentDefaults": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "VendorSince": {
          "type": "string",
          "x-alias": "createdDate"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.sage50accounting.com"
        }
      },
      "type": "object"
    },
    "vendorsPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customersPostReqContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 100"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "customersContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "salesInvoicesPatchResObjectApplyToProposalLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Landscaping redesign"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesParentTransactionReference"
        },
        "ProposalLineReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesProposalLineReference"
        },
        "Quantity": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToProposalLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsPostResObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseOrdersMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "paymentsPostReqDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPostReqContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchReqPaymentsContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotesPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "customersPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "purchaseOrdersPatchReqPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "paymentsPatchReqApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsObjectDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cad5af5c-394c-4ac5-be0e-cb217f7015e0"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "purchaseOrdersRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReqPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 39.99
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Lawn and Turf Care Service"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Revision": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesRevision"
        },
        "SalesInvoiceLineReference": {
          "$ref": "#/definitions/customerCreditMemosApplyToInvoiceLinesSalesInvoiceLineReference"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 39.99
        }
      },
      "title": "ApplyToInvoiceLines",
      "type": "object"
    },
    "salesInvoicesApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "vendorsPostReqTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Bell-Grow Series: Gardening Handbook (Madison)"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesRevision"
        },
        "SalesOrderLineReference": {
          "$ref": "#/definitions/salesInvoicesApplyToSalesOrderLinesSalesOrderLineReference"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.95
        }
      },
      "type": "object"
    },
    "vendorsMailToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "vendorsPatchResShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchResShipmentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResShipmentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResShipmentsContactRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "salesOrdersShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "salesOrdersPatchReqSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "receiptsApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d845c91e-46e7-4da2-87c3-1ff475c70e74"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "customersPostResBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostResBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersPostResBillToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostResBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersPostResBillToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResPartnerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "PartnerReference",
      "type": "object"
    },
    "vendorsObjectPurchaseOrdersContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesInvoiceReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].invoiceNumber",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "VendorsPostResShipmentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "VendorsPostResExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayablesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d73ef346-281d-4ae0-add9-f0ae8cb07692"
        }
      },
      "title": "DiscountAccountReference",
      "type": "object"
    },
    "quotesPatchReqQuoteLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "3764d43c-46cf-4541-8355-3d719d524983"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Landscaping redesign"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesParentTransactionReference"
        },
        "ProposalLineReference": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesProposalLineReference"
        },
        "Quantity": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPostResObjectApplyToProposalLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1fe63472-2a3c-4c3e-9a72-bb483baa3e97"
        }
      },
      "title": "VendorReference",
      "type": "object"
    },
    "vendorsObjectContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsObjectContactsAddress"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-20T18:00:30"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectContactsRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqGeneralJournalEntryLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "017e0c94-71ee-42b4-95b9-35bd8291d177"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "purchaseInvoicesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "employeesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsObjectShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "435ee8f2-5368-4baa-8e9e-9f4383dac53d"
        }
      },
      "type": "object"
    },
    "vendorsShipmentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesProposalLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "62d35f15-799d-4f15-b61e-f554bbb4b80f"
        }
      },
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "68cfd770-379d-48ea-817f-212aefeeaabc"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "salesOrdersPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "customersTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "vendorsPatchResTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "CashAccountReference",
      "type": "object"
    },
    "customersPostResSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f5a1e3f-c61e-41ab-ac1d-90060c79aaac"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "vendorsMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customersPostResBillToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "vendorsPaymentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "salesOrdersAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "customersShipToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersShipToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersShipToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersShipToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/customersShipToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "420e68e7-6763-45f6-a34d-4ec0c5ddcd0c"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "VendorsPostResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "VendorsPostResMailToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "03b4aa2c-19a4-4abd-9a91-f639ebadb45a"
        }
      },
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPatchResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsGetResAccountReference"
        },
        "AdvanceReceiptLines": {
          "items": {
            "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLines"
          },
          "type": "array"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500
        },
        "AmountRemaining": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -500
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/advanceReceiptsGetResCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/advanceReceiptsGetResCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/advanceReceiptsGetResKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-25T20:05:36"
        },
        "MainAddress": {
          "$ref": "#/definitions/advanceReceiptsGetResMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "abcdef"
        },
        "Revision": {
          "$ref": "#/definitions/advanceReceiptsGetResRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/advanceReceiptsGetResSalesRepresentativeReference"
        }
      },
      "title": "advanceReceiptsGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "advance-receipts"
    },
    "VendorsPostResMailToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "companiesDefaultsGeneralLedgerBeginningBalanceEquityAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "BeginningBalanceEquityAccountReference",
      "type": "object"
    },
    "paymentsPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPostReqAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 1000
        },
        "ApplyToExpenseLines": {
          "items": {
            "$ref": "#/definitions/paymentsPostReqApplyToExpenseLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-13T00:00:00"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/paymentsPostReqDiscountAccountReference"
        },
        "ElectronicIdentifier": {
          "type": "string"
        },
        "FundingAccount": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsElectronicPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/paymentsPostReqMainAddress"
        },
        "Memo": {
          "type": "string",
          "x-samplevalue": "99-6-8-91"
        },
        "PaymentMethod": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPostReqRevision"
        },
        "VendorReference": {
          "$ref": "#/definitions/paymentsPostReqVendorReference"
        }
      },
      "x-vendor-objectname": "payments",
      "type": "object"
    },
    "customersObjectBillToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "vendorsPatchResPaymentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "vendorsCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 7538.82
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 7538.82
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLines"
          },
          "type": "array"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesInvoicesPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "discountAmount",
          "x-samplevalue": 150.78
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesInvoicesPostReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesInvoicesPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount",
          "x-samplevalue": 426.73
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesInvoicesPostReqSalesTaxCodeReference"
        },
        "ShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesInvoicesPostReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string",
          "x-alias": "description"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-invoices",
      "type": "object"
    },
    "customersRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "paymentsPatchReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "employeesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "a581cd1e-bf82-40f6-889f-9ab67f00ff52"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "vendorsPatchResPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchResPaymentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResPaymentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResPaymentsContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "journalEntriesPatchReqGeneralJournalEntryLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "vendorsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "ledgerAccountsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "50c65fb5-4c94-45ea-b3f3-3268c818ab45"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPatchReq": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "BEL005"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 75
        },
        "CashAccountReference": {
          "$ref": "#/definitions/vendorsPatchReqCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "REPAIR"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqContacts"
          },
          "type": "array"
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "wabney@sample.sage.com"
        },
        "ExpenseAccountReference": {
          "$ref": "#/definitions/vendorsPatchReqExpenseAccountReference"
        },
        "Form1099Type": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ABNEY"
        },
        "IncludePurchaseRepresentativeOnEmailedForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "LastInvoiceAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": -195.65
        },
        "MailToContact": {
          "$ref": "#/definitions/vendorsPatchReqMailToContact"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney and Son Contractors"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PaymentsContact": {
          "$ref": "#/definitions/vendorsPatchReqPaymentsContact"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqPhoneNumbers"
          },
          "type": "array"
        },
        "PurchaseOrdersContact": {
          "$ref": "#/definitions/vendorsPatchReqPurchaseOrdersContact"
        },
        "PurchaseRepresentativeReference": {
          "$ref": "#/definitions/vendorsPatchReqPurchaseRepresentativeReference"
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ShipmentsContact": {
          "$ref": "#/definitions/vendorsPatchReqShipmentsContact"
        },
        "TaxIDNumber": {
          "type": "string"
        },
        "Terms": {
          "$ref": "#/definitions/vendorsPatchReqTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPaymentDefaults": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "VendorSince": {
          "type": "string",
          "x-alias": "createdDate"
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.sage50accounting.com"
        }
      },
      "x-vendor-objectname": "Vendor",
      "type": "object"
    },
    "purchaseInvoicesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "9670aa3f-5f29-495a-aff9-1ab7973ce5c6"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "vendorsPatchRes": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "BEL005"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 75
        },
        "CashAccountReference": {
          "$ref": "#/definitions/vendorsPatchResCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "REPAIR"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResContacts"
          },
          "type": "array"
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "wabney@sample.sage.com"
        },
        "ExpenseAccountReference": {
          "$ref": "#/definitions/vendorsPatchResExpenseAccountReference"
        },
        "Form1099Type": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ABNEY"
        },
        "IncludePurchaseRepresentativeOnEmailedForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResKey"
        },
        "LastInvoiceAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": -195.65
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-12T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "LastPaymentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MailToContact": {
          "$ref": "#/definitions/vendorsPatchResMailToContact"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney and Son Contractors"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PaymentsContact": {
          "$ref": "#/definitions/vendorsPatchResPaymentsContact"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResPhoneNumbers"
          },
          "type": "array"
        },
        "PurchaseOrdersContact": {
          "$ref": "#/definitions/vendorsPatchResPurchaseOrdersContact"
        },
        "PurchaseRepresentativeReference": {
          "$ref": "#/definitions/vendorsPatchResPurchaseRepresentativeReference"
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResRevision"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ShipmentsContact": {
          "$ref": "#/definitions/vendorsPatchResShipmentsContact"
        },
        "TaxIDNumber": {
          "type": "string"
        },
        "Terms": {
          "$ref": "#/definitions/vendorsPatchResTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPaymentDefaults": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.sage50accounting.com"
        }
      },
      "x-vendor-objectname": "Vendor",
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "advanceReceiptsPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorsPatchReqTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPostReqContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPostReqContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "TESTVENDOR2UPDATE"
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ]
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "nagaseshubabu"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "nagaseshubabu"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPostResPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d8a90af4-0ba5-44b5-8abb-7ea5a420920e"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "salesOrdersPostReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "journalEntriesPatchReqGeneralJournalEntryLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "017e0c94-71ee-42b4-95b9-35bd8291d177"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "advanceReceiptsPostReqCreditCardAuthorizationInfo": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsPostReqCreditCardAuthorizationInfoAddress"
        },
        "AmountAuthorized": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AuthorizationCode": {
          "type": "string"
        },
        "AuthorizationStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ExpirationDate": {
          "type": "string"
        },
        "LastFourDigits": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        }
      },
      "title": "CreditCardAuthorizationInfo",
      "type": "object"
    },
    "purchaseOrdersPostReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersPostReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        }
      },
      "type": "object"
    },
    "VendorsPostResPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "proposalsAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "inventoryItemsObjectSalaryAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "596a124e-c87d-494d-be9d-25e16de7108a"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "quotesQuoteLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "eff16ea0-0a30-49b6-8cab-830f634001fb"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d8a90af4-0ba5-44b5-8abb-7ea5a420920e"
        }
      },
      "type": "object"
    },
    "vendorsObjectTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "22ad2e24-1c15-41a8-a83a-97b76468a68e"
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayablesWriteChecksCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "WriteChecksCashAccountReference",
      "type": "object"
    },
    "customersPatchResBillToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "receiptsPostReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5db76823-8d34-4ce9-bb54-00c29d2996d5"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "vendorsPatchReqPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchReqPurchaseOrdersContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotesPostReqQuoteLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "3764d43c-46cf-4541-8355-3d719d524983"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "salesInvoicesShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Howell Walk"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 200"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30096"
        }
      },
      "type": "object"
    },
    "customersPostResContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "22ad2e24-1c15-41a8-a83a-97b76468a68e"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchReqMailToContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchReqMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Landscaping redesign"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesParentTransactionReference"
        },
        "ProposalLineReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesProposalLineReference"
        },
        "Quantity": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToProposalLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c955b631-905c-4db6-842d-feaeedbb83bf"
        }
      },
      "title": "InventoryItemReference",
      "type": "object"
    },
    "customersObjectContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersObjectContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersObjectContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersObjectContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/customersObjectContactsRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "vendorsObjectShipmentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "proposalsProposalLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "quotesFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "salesOrdersObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPostReqApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "type": "object"
    },
    "vendorsObjectShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4c2eab55-7f5a-4337-a85b-e4d7eb284fd2"
        }
      },
      "type": "object"
    },
    "vendorsPatchResShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesGetResAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "GeneralJournalEntryLines": {
          "items": {
            "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLines"
          },
          "type": "array"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsReversingTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PartnerReference": {
          "$ref": "#/definitions/journalEntriesGetResPartnerReference"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "ADJ0303103"
        },
        "Revision": {
          "$ref": "#/definitions/journalEntriesGetResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a1331316-ce07-4160-8507-9d7297f9305a"
        }
      },
      "title": "journalEntriesGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "journal-entries"
    },
    "paymentsPatchResObjectApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4af222da-dd47-430e-a626-d468f73b1780"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "CashAccountReference",
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "proposalsProposalLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "eff16ea0-0a30-49b6-8cab-830f634001fb"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "companiesDefaultsPayablesCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "title": "CashAccountReference",
      "type": "object"
    },
    "purchaseInvoicesShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "3879a9e4-9eb4-4739-acf2-b45d199ed033"
        }
      },
      "type": "object"
    },
    "vendorsObjectPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsObjectPurchaseOrdersContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectPurchaseOrdersContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectPurchaseOrdersContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "proposalsShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/proposalsShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Armstrong Landscaping"
        }
      },
      "title": "ShipToAddress",
      "type": "object"
    },
    "customerCreditMemosPostReqApplyToInvoiceLinesSalesInvoiceLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "19e2520b-2e50-430d-ab75-6258a70052f8"
        }
      },
      "title": "SalesInvoiceLineReference",
      "type": "object"
    },
    "salesOrdersPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "paymentsObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "customersPostResShipToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "customersPostResShipToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipToContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "vendorsPostReqCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "customersPostResTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesOrdersSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 169.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Red Rose Starter Bush"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 10
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPostReqApplyToSalesLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": 16.99
        }
      },
      "type": "object"
    },
    "companiesCompanyIdentifier": {
      "properties": {
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Bellwether Garden Supply"
        },
        "DatabaseName": {
          "type": "string",
          "x-samplevalue": "bellwethergardensupp"
        },
        "Guid": {
          "type": "string",
          "x-samplevalue": "bcffa421-17a5-11d4-a132-0008c72adc07"
        },
        "Path": {
          "type": "string",
          "x-samplevalue": "c:\\sage\\peachtree\\company\\sample\\ptxa\\bcs\\"
        },
        "SchemaVersion": {
          "type": "string",
          "x-samplevalue": "29.0"
        },
        "ServerName": {
          "type": "string",
          "x-samplevalue": "DESKTOP-QE4H4HG"
        }
      },
      "title": "CompanyIdentifier",
      "type": "object"
    },
    "paymentsPostReqApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "vendorsObjectMailToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsPostReqRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "870c229c-efbe-496e-bf0f-53f8c8dda837"
        }
      },
      "title": "DiscountAccountReference",
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "6184f7e0-340b-4661-aab7-8675ff234286"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPatchReqApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "receiptsApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a6a2920f-cbe7-4867-a1d9-88fb18219c7c"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "type": "object"
    },
    "customerCreditMemosSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "salesOrdersResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "e99ac002-881f-4b23-bfd7-081c5acd90bc"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "customerCreditMemosApplyToSalesLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4af222da-dd47-430e-a626-d468f73b1780"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqAccountReference"
        },
        "AdvanceReceiptLines": {
          "items": {
            "$ref": "#/definitions/advanceReceiptsPostReqAdvanceReceiptLines"
          },
          "type": "array"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "AmountRemaining": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -5000
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/advanceReceiptsPostReqCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/advanceReceiptsPostReqMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "TESTADVRECEIPT"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqSalesRepresentativeReference"
        }
      },
      "title": "advanceReceiptsPostReq",
      "x-vendor-objectname": "advance-receipts",
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "vendorsObjectPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesSalesOrderLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "23e67fe3-e9c0-4ed3-937a-64abc51d965f"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "4ab697a3-0321-4538-8fb7-8e7f520f45f0"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4c2eab55-7f5a-4337-a85b-e4d7eb284fd2"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "customersContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1c6f7ec2-f6e6-427b-8936-2e145783bc46"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "VendorsPostResMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/VendorsPostResMailToContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResMailToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResMailToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "companiesDefaultsPayablesPaymentMethodNames": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "Cash"
        },
        "Number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "PaymentMethodNames",
      "type": "object"
    },
    "customersObjectCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 215.85
        },
        "CustomerReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.32
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-14T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/purchaseOrdersPostReqMainAddress"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PurchaseOrderLines": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersPostReqPurchaseOrderLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "12345"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/purchaseOrdersPostReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorNote": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqVendorReference"
        }
      },
      "x-vendor-objectname": "purchase-orders",
      "type": "object"
    },
    "proposalsProposalLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "vendorsPatchResPaymentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesProposalLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "62d35f15-799d-4f15-b61e-f554bbb4b80f"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/vendorCreditMemosAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 103.6
        },
        "AmountDue": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 103.6
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/vendorCreditMemosApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToPurchasesLines": {
          "items": {
            "$ref": "#/definitions/vendorCreditMemosApplyToPurchasesLines"
          },
          "type": "array"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-01T00:00:00"
        },
        "DateDue": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-31T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 2.07
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-11T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintVendorNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "VCM30009"
        },
        "ReturnAuthorization": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorCreditMemosRevision"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        },
        "VendorReference": {
          "$ref": "#/definitions/vendorCreditMemosVendorReference"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fea0024f-95ff-431e-90d2-585073f2f479"
        }
      },
      "title": "vendorCreditMemos",
      "type": "object",
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "vendor-credit-memos"
    },
    "companiesDefaultsPayablesTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "Terms",
      "type": "object"
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "Terms",
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "e0ac411e-b85d-4080-a05a-7f0468755ba5"
        }
      },
      "type": "object"
    },
    "companiesDefaultsJobAppliedLaborBurdenAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "AppliedLaborBurdenAccountReference",
      "type": "object"
    },
    "receiptsPostReqApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "43269081-84b1-4c79-9a72-d1791b74224c"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "customersPostReqCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "vendorsObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "receiptsMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "1890 Singleton Road"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30093"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "vendorsPostReqExpenseAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ac483091-cd5d-4561-ae49-16a7a1ca2209"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReqPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersPatchReqPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "vendorsTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 5000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4c2eab55-7f5a-4337-a85b-e4d7eb284fd2"
        }
      },
      "type": "object"
    },
    "VendorsPostResContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "71ef6421-f9c7-41b7-af81-4b7d68bcac0c"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "type": "object"
    },
    "salesOrdersObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "inventoryItemsCOGSAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "cogsAccount",
          "x-samplevalue": "94e8ca4c-875f-44df-8dc2-fa0d85ba803d"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "3764d43c-46cf-4541-8355-3d719d524983"
        }
      },
      "type": "object"
    },
    "inventoryItemsBuyerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "533fc9be-bb7c-43e7-8237-5fb72149425d"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d503935f-ac23-4604-a7c8-c6ef0bf339a0"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "customerCreditMemosPatchReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f5a1e3f-c61e-41ab-ac1d-90060c79aaac"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "salesOrdersPatchReqSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "VendorsPostResShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "companiesDefaultsInventoryShipViaNames": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "ShipViaNames",
      "type": "object"
    },
    "purchaseOrdersPostResObjectMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "4555 Oakland Park Blvd."
        },
        "Address2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Atlanta"
        },
        "Country": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "30312"
        }
      },
      "type": "object"
    },
    "vendorsPatchResContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "receiptsCreditCardAuthorizationInfoAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Bell-Grow Series: Gardening Handbook (Madison)"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesRevision"
        },
        "SalesOrderLineReference": {
          "$ref": "#/definitions/salesInvoicesPatchResObjectApplyToSalesOrderLinesSalesOrderLineReference"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.95
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "7e79c95e-594a-4b76-a649-fa0c6cfc0505"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToInvoiceLinesDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "VendorsPostResContactsRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "customersBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "customersPatchReqShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesTaxAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "TaxAccountReference",
      "type": "object"
    },
    "salesInvoicesSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "7d0f2aca-649f-4daf-8f54-44f4374cfc71"
        }
      },
      "type": "object"
    },
    "vendorsObjectPurchaseOrdersContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "46fbdeea-7a5f-4cc0-8369-ed1e3c10ae78"
        }
      },
      "type": "object"
    },
    "vendorsObjectMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "quotesPostReqQuoteLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2fa466c0-8d58-45be-a301-2c2b9dd6f943"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "salesInvoicesApplyToProposalLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Landscaping redesign"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesParentTransactionReference"
        },
        "ProposalLineReference": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesProposalLineReference"
        },
        "Quantity": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesApplyToProposalLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "VendorsPostResShipmentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "shippingAddress.phone",
              "path": "ShipmentsContact.PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "customersPatchResTerms": {
      "properties": {
        "ChargeInterest": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-samplevalue": 50000
        },
        "DiscountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "IsStandardTerms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PaymentTimeFrame": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UseDiscounts": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d8a90af4-0ba5-44b5-8abb-7ea5a420920e"
        }
      },
      "type": "object"
    },
    "purchaseOrdersObjectPurchaseOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPostReqBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "d2e1aef5-a2e8-47ac-ab97-9906fe617253"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "salesInvoicesPostReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1192.5
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Catalog #B11255:  Thistle Bird Seed Mix - 6lb."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesParentTransactionReference"
        },
        "PurchaseOrderLineReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesPurchaseOrderLineReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "Revision": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7.95
        }
      },
      "type": "object"
    },
    "paymentsPatchResObjectDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "11c30d7f-4c98-4e9f-b01e-bf5573912d5b"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesTaxCodesObject": {
      "properties": {
        "AppliesToFreight": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Cherokee County Sales Tax"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "GACHER"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/salesTaxCodesRevision"
        },
        "SalesTaxAgencies": {
          "items": {
            "$ref": "#/definitions/salesTaxCodesSalesTaxAgencies"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c20886c2-7c38-46e2-b6de-78b1fa4dc33d"
        }
      },
      "title": "salesTaxCodes",
      "type": "object",
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "tax-codes"
    },
    "salesInvoicesPostResObjectSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "9061dcb9-4c5c-42cf-9ec5-7df931f63dc5"
        }
      },
      "type": "object"
    },
    "customersPostResUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "customersPostResCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Sales Contact"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Larry Murphy"
        }
      },
      "type": "object"
    },
    "vendorsObjectPurchaseOrdersContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "journalEntriesGetResGeneralJournalEntryLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "be209b43-5b33-4f1d-9c0f-85372b3e3d35"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "vendorsPostReqShipmentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPostReqShipmentsContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "Sample Updated Note"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqShipmentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "ddd"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToPurchasesLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "08d615eb-ad77-4ad2-b38b-25df548725d2"
        }
      },
      "type": "object"
    },
    "ledgerAccountsObjectPatchRes": {
      "properties": {
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 0
        },
        "Description": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "Petty Cash"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "10000-00"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/ledgerAccountsObjectPatchResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "16c6cacc-40d0-4fce-a77a-e8ca8048027d"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "ledger-accounts",
      "type": "object"
    },
    "vendorsPatchResMailToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPatchResMailToContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsPatchResMailToContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPatchResMailToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsPatchResMailToContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "quotesSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "salesOrdersPatchReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "type": "object"
    },
    "salesOrdersObjectSalesOrderLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "41dbc6e0-4647-4793-a171-edcd40c86ed6"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "vendorCreditMemosApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a753e27f-6a04-400d-aea4-17c0401a34a3"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "vendorsPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesTaxCodesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "customersPatchReqCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "receiptsApplyToInvoiceLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "AmountPaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "Description": {
          "type": "string"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesDiscountAccountReference"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceReference": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesInvoiceReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/receiptsApplyToInvoiceLinesRevision"
        }
      },
      "title": "ApplyToInvoiceLines",
      "type": "object"
    },
    "vendorsObjectPaymentsContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsObjectPaymentsContactAddress"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/vendorsObjectPaymentsContactKey"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsObjectPaymentsContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/vendorsObjectPaymentsContactRevision"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "salesInvoicesPostResObjectApplyToProposalLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "4af222da-dd47-430e-a626-d468f73b1780"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToProposalLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "VendorsPostResMailToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "quotesPostReqQuoteLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "eff16ea0-0a30-49b6-8cab-830f634001fb"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 59.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Bell-Grow Series: Gardening Handbook (Madison)"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "Revision": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesRevision"
        },
        "SalesOrderLineReference": {
          "$ref": "#/definitions/salesInvoicesObjectApplyToSalesOrderLinesSalesOrderLineReference"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.95
        }
      },
      "type": "object"
    },
    "salesOrdersObjectKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "b9946a0e-0448-4d18-b1ea-f26f1b1fefb1"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersPurchaseOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "quotesCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9127b75c-d92e-4181-8981-c800adf9e511"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "receiptsPostReqCreditCardAuthorizationInfoAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "4552 Peachtree Industrial Blvd"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Chamblee"
        },
        "Country": {
          "type": "string"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30329"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "vendorsPostReqPurchaseOrdersContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/vendorsPostReqPurchaseOrdersContactAddress"
        },
        "CompanyName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Abney"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Contractors"
        },
        "MiddleInitial": {
          "type": "string",
          "x-samplevalue": "a"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney a. Contractors"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/vendorsPostReqPurchaseOrdersContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "salesTaxCodesSalesTaxAgencies": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesTaxCodesSalesTaxAgenciesAccountReference"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Georgia State Sales Tax"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "GEORGIA"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/salesTaxCodesSalesTaxAgenciesKey"
        },
        "PayeeVendorReference": {
          "$ref": "#/definitions/salesTaxCodesSalesTaxAgenciesPayeeVendorReference"
        },
        "Revision": {
          "$ref": "#/definitions/salesTaxCodesSalesTaxAgenciesRevision"
        }
      },
      "title": "SalesTaxAgencies",
      "type": "object"
    },
    "employeesObjectPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-6306"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqPartnerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "PartnerReference",
      "type": "object"
    },
    "receiptsPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToExpenseLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "jobsObject": {
      "properties": {
        "Description": {
          "type": "string",
          "x-samplevalue": "Chapple Law Offices"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "CHAPPLE"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/jobsRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d7b0706e-2cc7-4285-a0b3-9f30299cda7f"
        }
      },
      "title": "jobs",
      "type": "object",
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "jobs"
    },
    "purchaseOrdersObjectMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/purchaseOrdersObjectMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Southern Garden Wholesale"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "salesOrdersCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "6294b82e-944b-43d3-b200-c8e389fededa"
        }
      },
      "type": "object"
    },
    "VendorsPostResPaymentsContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "paymentsPatchReqMainAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "24 Bethany Drive"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 77"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Duluth"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30084"
        }
      },
      "type": "object"
    },
    "vendorsContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "71ef6421-f9c7-41b7-af81-4b7d68bcac0c"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "03b4aa2c-19a4-4abd-9a91-f639ebadb45a"
        }
      },
      "type": "object"
    },
    "vendorCreditMemosApplyToPurchasesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8f02111f-fe85-4198-9101-1119f8a99030"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "vendorsPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqAdvanceReceiptLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsPostReqAdvanceReceiptLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Test Advance Receipt"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "AdvanceReceiptLines",
      "type": "object"
    },
    "vendorsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00e3fdab-fb09-4db8-bfd0-815db9519a51"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPatchReqDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "customersPatchReqPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchResObjectPurchaseOrderLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c5b6e396-bcc9-4df6-b80b-ef97e9ee1853"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "8d6d8278-6e50-4665-b7d5-e48895fef556"
        }
      },
      "type": "object"
    },
    "quotesPostReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5be0d571-c750-49cf-b91b-dfe519583170"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "customersObjectShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "2cf97b74-f836-449e-a021-85f34d4b8a22"
        }
      },
      "type": "object"
    },
    "VendorsPostResShipmentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "journalEntriesPostResObject": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/journalEntriesGetResAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "GeneralJournalEntryLines": {
          "items": {
            "$ref": "#/definitions/journalEntriesGetResGeneralJournalEntryLines"
          },
          "type": "array"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsReversingTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PartnerReference": {
          "$ref": "#/definitions/journalEntriesGetResPartnerReference"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "ADJ0303103"
        },
        "Revision": {
          "$ref": "#/definitions/journalEntriesGetResRevision"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a1331316-ce07-4160-8507-9d7297f9305a"
        }
      },
      "title": "journalEntriesGetRes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "journal-entries"
    },
    "quotesPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9127b75c-d92e-4181-8981-c800adf9e511"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "customersContacts": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersContactsAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.email",
              "path": "Contacts[*].Email | [0]"
            }
          ],
          "x-samplevalue": "tammyaldred@update.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "Contacts[*].FirstName | [0]"
            }
          ],
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/customersContactsKey"
        },
        "LastName": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.lastName",
              "path": "Contacts[*].LastName | [0]"
            }
          ],
          "x-samplevalue": "Aldred"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2019-11-13T22:05:59"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.middleName",
              "path": "Contacts[*].MiddleInitial | [0]"
            }
          ],
          "x-samplevalue": "H"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Dr. Tammy H. Aldred, Jr"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersContactsPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string",
          "x-samplevalue": "Dr"
        },
        "Revision": {
          "$ref": "#/definitions/customersContactsRevision"
        },
        "Suffix": {
          "type": "string",
          "x-samplevalue": "Jr"
        },
        "Title": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.salutation",
              "path": "Contacts[*].Title | [0]"
            }
          ],
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "b7769461-53da-4082-8aab-ca247ae675aa"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "customersCashAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "158fff53-7495-4b63-8127-d93c4ba7c09c"
        }
      },
      "type": "object"
    },
    "vendorsObjectPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "quotesPatchReqSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "5be0d571-c750-49cf-b91b-dfe519583170"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "customerCreditMemosCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "ecc8b01d-8ab6-455f-9a08-366bf3bf0846"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "paymentsPostReqMainAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/paymentsPostReqMainAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Akerson Wholesale Nursery"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "b7f4de27-2b0a-448a-9da4-fb5b112863d5"
        }
      },
      "type": "object"
    },
    "paymentsPostReqVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "VendorsPostRes": {
      "properties": {
        "AccountNumber": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "BEL005"
        },
        "Balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 75
        },
        "CashAccountReference": {
          "$ref": "#/definitions/VendorsPostResCashAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "REPAIR"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/VendorsPostResContacts"
          },
          "type": "array"
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/VendorsPostResCustomFieldValues"
          },
          "type": "array"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "wabney@sample.sage.com"
        },
        "ExpenseAccountReference": {
          "$ref": "#/definitions/VendorsPostResExpenseAccountReference"
        },
        "Form1099Type": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "ABNEY"
        },
        "IncludePurchaseRepresentativeOnEmailedForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Key": {
          "$ref": "#/definitions/VendorsPostResKey"
        },
        "LastInvoiceAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": -195.65
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-12T00:00:00"
        },
        "LastPaymentAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "LastPaymentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MailToContact": {
          "$ref": "#/definitions/VendorsPostResMailToContact"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Abney and Son Contractors"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "PaymentsContact": {
          "$ref": "#/definitions/VendorsPostResPaymentsContact"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/VendorsPostResPhoneNumbers"
          },
          "type": "array"
        },
        "PurchaseOrdersContact": {
          "$ref": "#/definitions/VendorsPostResPurchaseOrdersContact"
        },
        "PurchaseRepresentativeReference": {
          "$ref": "#/definitions/VendorsPostResPurchaseRepresentativeReference"
        },
        "ReplaceInventoryItemIDWithPartNumber": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReplaceInventoryItemIDWithUPC": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Revision": {
          "$ref": "#/definitions/VendorsPostResRevision"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ShipmentsContact": {
          "$ref": "#/definitions/VendorsPostResShipmentsContact"
        },
        "TaxIDNumber": {
          "type": "string"
        },
        "Terms": {
          "$ref": "#/definitions/VendorsPostResTerms"
        },
        "UseEmailToDeliverForms": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPaymentDefaults": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WebSiteURL": {
          "type": "string",
          "x-alias": "webSite",
          "x-samplevalue": "www.sage50accounting.com"
        }
      },
      "x-vendor-objectname": "Vendor",
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 150
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Supplies Expense"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/paymentsPostResObjectApplyToExpenseLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customersObjectShipToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d6a77452-9b0c-4dd4-a8b3-828a05752d66"
        }
      },
      "type": "object"
    },
    "paymentsObjectApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "435ee8f2-5368-4baa-8e9e-9f4383dac53d"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchReqShipToAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "111 Main Mainstreet"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Coppell"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cf3ca6e4-1f1a-4fcb-92f1-da61247255a8"
        }
      },
      "type": "object"
    },
    "customerCreditMemosPostReqApplyToInvoiceLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "1b12e086-d33a-4450-b042-7c19ed1c2aaf"
        }
      },
      "title": "AccountReference",
      "type": "object"
    },
    "salesInvoicesObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "employeesPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-6306"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResAdvanceReceiptLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "abc"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLinesParentTransactionReference"
        },
        "Revision": {
          "$ref": "#/definitions/advanceReceiptsGetResAdvanceReceiptLinesRevision"
        }
      },
      "title": "AdvanceReceiptLines",
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "quotesPatchReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/quotesPatchReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Franklin Botanical Gardens"
        }
      },
      "title": "ShipToAddress",
      "type": "object"
    },
    "ledgerAccountsPostReq": {
      "properties": {
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 0
        },
        "Description": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "Petty Cash"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "10000-00"
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        }
      },
      "x-vendor-objectname": "ledger-accounts",
      "type": "object"
    },
    "vendorsPurchaseRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsObjectMailToContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "vendorsShipmentsContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsPatchResMailToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "companiesDefaultsJobCustomFieldDefinitions": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Label": {
          "type": "string",
          "x-samplevalue": "Second Contact"
        }
      },
      "title": "CustomFieldDefinitions",
      "type": "object"
    },
    "customersPatchReqBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "receiptsPatchReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsPostReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 220.31
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/receiptsPostReqApplyToSalesLines"
          },
          "type": "array"
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/receiptsPostReqCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/receiptsPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-03T00:00:00"
        },
        "DepositTicketID": {
          "type": "string",
          "x-samplevalue": "030307"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsPostReqDiscountAccountReference"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MainAddress": {
          "$ref": "#/definitions/receiptsPostReqMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "AMEX"
        },
        "ReceiptNumber": {
          "type": "string",
          "x-samplevalue": "2015"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "4452"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/receiptsPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 14.41
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/receiptsPostReqSalesTaxCodeReference"
        }
      },
      "title": "receiptsPostReq",
      "x-vendor-objectname": "Receipt",
      "type": "object"
    },
    "salesOrdersPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPostReqAccountReference"
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "First SOUPdated"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-samplevalue": "PO1234"
        },
        "CustomerReference": {
          "$ref": "#/definitions/salesOrdersPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-02-01T00:00:00"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-25T00:00:00"
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/salesOrdersPostReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InternalNote": {
          "type": "string"
        },
        "IsClosed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReferenceNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "10310"
        },
        "SalesOrderLines": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostReqSalesOrderLines"
          },
          "type": "array"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 28.54
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/salesOrdersPostReqSalesTaxCodeReference"
        },
        "ShipByDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-15T00:00:00"
        },
        "ShipDate": {
          "type": "string"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "x-vendor-objectname": "sales-orders",
      "type": "object"
    },
    "paymentsPostResObjectApplyToExpenseLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "c1c1e3ec-bc96-4e68-8f65-57993f13b09f"
        }
      },
      "type": "object"
    },
    "receiptsPatchRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/receiptsAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "ApplyToInvoiceLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToInvoiceLines"
          },
          "type": "array"
        },
        "ApplyToSalesLines": {
          "items": {
            "$ref": "#/definitions/receiptsApplyToSalesLines"
          },
          "type": "array"
        },
        "CreditCardAuthorizationInfo": {
          "$ref": "#/definitions/receiptsCreditCardAuthorizationInfo"
        },
        "CustomerReference": {
          "$ref": "#/definitions/receiptsCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-01-02T00:00:00"
        },
        "DepositTicketID": {
          "type": "string",
          "x-samplevalue": "010207"
        },
        "DiscountAccountReference": {
          "$ref": "#/definitions/receiptsDiscountAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/receiptsKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "MainAddress": {
          "$ref": "#/definitions/receiptsMainAddress"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "ReceiptNumber": {
          "type": "string",
          "x-samplevalue": "1000"
        },
        "ReferenceNumber": {
          "type": "string",
          "x-samplevalue": "1009"
        },
        "Revision": {
          "$ref": "#/definitions/receiptsRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/receiptsSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/receiptsSalesTaxCodeReference"
        }
      },
      "title": "receipts",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Receipt"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseOrdersPostResObjectPurchaseOrderLinesRevision"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "purchaseInvoicesApplyToOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "purchaseOrdersPostResObjectPurchaseOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "09c83aff-d74b-46dd-a15d-bc476daa267a"
        }
      },
      "type": "object"
    },
    "customersObjectBillToContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "billingAddress.phone",
              "path": "PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0657"
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResAdvanceReceiptLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "cad5af5c-394c-4ac5-be0e-cb217f7015e0"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "companiesDefaultsInventoryCustomFieldDefinitions": {
      "properties": {
        "Enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Label": {
          "type": "string",
          "x-samplevalue": "Alternate Vendor"
        }
      },
      "title": "CustomFieldDefinitions",
      "type": "object"
    },
    "companiesDefaultsReceivablesFinanceChargeRevenueAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "12d5b548-76a6-4ac0-b913-db4746b879dd"
        }
      },
      "title": "FinanceChargeRevenueAccountReference",
      "type": "object"
    },
    "vendorsObjectContactsAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line1",
              "path": "Contacts[*].Address.Address1 | [0]"
            }
          ],
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.line2",
              "path": "Contacts[*].Address.Address2 | [0]"
            }
          ],
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.city",
              "path": "Contacts[*].Address.City | [0]"
            }
          ],
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.country",
              "path": "Contacts[*].Address.Country | [0]"
            }
          ],
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.province",
              "path": "Contacts[*].Address.State | [0]"
            }
          ],
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.address.postalCode",
              "path": "Contacts[*].Address.Zip | [0]"
            }
          ],
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "proposalsSalesTaxCodeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "83a1af25-b4ab-4797-8035-43939325778e"
        }
      },
      "title": "SalesTaxCodeReference",
      "type": "object"
    },
    "paymentsPatchReqVendorReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "4f2766b1-aae6-4c0d-a973-f765262b596c"
        }
      },
      "type": "object"
    },
    "receiptsPostReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8881464f-77f8-42d5-b480-9c4136947f87"
        }
      },
      "title": "CustomerReference",
      "type": "object"
    },
    "companiesDefaultsJobRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "customersPostReqBillToContact": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/customersPostReqBillToContactAddress"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Aldred Builders, Inc."
        },
        "Email": {
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "tammyaldred@sample.sage.com"
        },
        "FirstName": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Tammy"
        },
        "Gender": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPrimaryContact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastName": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Aldred"
        },
        "MiddleInitial": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Tammy Aldred"
        },
        "NameToUseOnForms": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Notes": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "PhoneNumbers": {
          "items": {
            "$ref": "#/definitions/customersPostReqBillToContactPhoneNumbers"
          },
          "type": "array"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "x-samplevalue": "Bookkeeper"
        }
      },
      "type": "object"
    },
    "vendorsObjectContactsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "71ef6421-f9c7-41b7-af81-4b7d68bcac0c"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToProposalLinesProposalLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "62d35f15-799d-4f15-b61e-f554bbb4b80f"
        }
      },
      "type": "object"
    },
    "customersPostReqPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0654"
        }
      },
      "type": "object"
    },
    "vendorsContactsPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.phone",
              "path": "Contacts[*].PhoneNumbers[*].Number | [0]"
            }
          ],
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "vendorsPostReqPaymentsContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchReqCustomerReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "ff1f7346-d4ff-47d4-8b75-810b19f5c147"
        }
      },
      "type": "object"
    },
    "companiesDefaultsInventoryRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "Revision",
      "type": "object"
    },
    "inventoryItemsSalaryAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "596a124e-c87d-494d-be9d-25e16de7108a"
        }
      },
      "type": "object"
    },
    "paymentsApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "435ee8f2-5368-4baa-8e9e-9f4383dac53d"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqSalesRepresentativeReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "9f976775-42f9-4da5-87fc-9958fef72c52"
        }
      },
      "title": "SalesRepresentativeReference",
      "type": "object"
    },
    "quotesPostReqQuoteLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesPostReqQuoteLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 199.9
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Thistle Bird Seed Mix 6 lb. Bag"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/quotesPostReqQuoteLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/quotesPostReqQuoteLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/quotesPostReqQuoteLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 19.99
        }
      },
      "title": "QuoteLines",
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToProposalLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "quotesPatchReqFreightAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "14275f71-d332-4258-9976-be476f43e91d"
        }
      },
      "title": "FreightAccountReference",
      "type": "object"
    },
    "salesInvoicesObjectApplyToSalesLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "8d6d8278-6e50-4665-b7d5-e48895fef556"
        }
      },
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "dea3e44f-2217-414e-982e-1fdad5ac0e1f"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "quotesPostReqShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/quotesPostReqShipToAddressAddress"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Franklin Botanical Gardens"
        }
      },
      "title": "ShipToAddress",
      "type": "object"
    },
    "customerCreditMemosPostReqApplyToInvoiceLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "JobReference",
      "type": "object"
    },
    "inventoryItemsObject": {
      "properties": {
        "BuyerReference": {
          "$ref": "#/definitions/inventoryItemsBuyerReference"
        },
        "COGSAccountReference": {
          "$ref": "#/definitions/inventoryItemsCOGSAccountReference"
        },
        "Category": {
          "type": "string",
          "x-samplevalue": "ADMIN"
        },
        "Classification": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "CostingMethod": {
          "format": "int32",
          "type": "integer",
          "x-alias": "costingMethod",
          "x-samplevalue": 2
        },
        "CustomFieldValues": {
          "items": {
            "$ref": "#/definitions/inventoryItemsCustomFieldValues"
          },
          "type": "array"
        },
        "Description": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Bookkeeping/Administrative"
        },
        "DescriptionForPurchases": {
          "type": "string",
          "x-alias": "purchaseDescription"
        },
        "DescriptionForSales": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "(Internal) Bookkeeping and Administrative Duties for Front Office"
        },
        "ID": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "ADMIN-01000"
        },
        "InventoryAccountReference": {
          "$ref": "#/definitions/inventoryItemsInventoryAccountReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsInactive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsTaxable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "Location": {
          "type": "string",
          "x-alias": "locations[*].name"
        },
        "MasterItemID": {
          "type": "string",
          "x-alias": "parent.id",
          "x-samplevalue": "AVRY-10050"
        },
        "MinimumStock": {
          "format": "int32",
          "type": "integer",
          "x-alias": "safetyStockUnits",
          "x-samplevalue": 10
        },
        "Note": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "PriceLevels": {
          "items": {
            "$ref": "#/definitions/inventoryItemsPriceLevels"
          },
          "type": "array"
        },
        "ReorderQuantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "reOrderPoint",
          "x-samplevalue": 15
        },
        "Revision": {
          "$ref": "#/definitions/inventoryItemsRevision"
        },
        "SalaryAccountReference": {
          "$ref": "#/definitions/inventoryItemsSalaryAccountReference"
        },
        "SalesAccountReference": {
          "$ref": "#/definitions/inventoryItemsSalesAccountReference"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "salesTaxCode",
          "x-samplevalue": 2
        },
        "StockingUnitOfMeasure": {
          "type": "string",
          "x-alias": "inventoryStockUom",
          "x-samplevalue": "Hours"
        },
        "SubjectToCommission": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UPC": {
          "type": "string"
        },
        "VendorReference": {
          "$ref": "#/definitions/inventoryItemsVendorReference"
        },
        "Weight": {
          "format": "double",
          "type": "number",
          "x-alias": "weight",
          "x-samplevalue": 1.6
        },
        "id": {
          "type": "string",
          "x-samplevalue": "22e93413-1a84-4837-b9cf-bcbfbf5e4f81"
        }
      },
      "x-vendor-objectname": "inventory-items",
      "type": "object"
    },
    "salesOrdersPatchReqSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesOrderLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesOrderLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersPatchReqSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesInvoicesPostResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Mosley Country Club"
        }
      },
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "receiptsPostReqDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "title": "DiscountAccountReference",
      "type": "object"
    },
    "vendorsPostReqCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "salesInvoicesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "salesInvoicesPatchResObjectApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "a18f7591-1092-490a-a0c2-836f280cd770"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPurchaseOrdersContactKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d50699a0-4399-4ce1-83bc-b56e84741da4"
        }
      },
      "type": "object"
    },
    "customersPostReqShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        }
      },
      "type": "object"
    },
    "paymentsKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "d2e1aef5-a2e8-47ac-ab97-9906fe617253"
        }
      },
      "x-primary-key": [
        "Guid"
      ],
      "type": "object"
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "salesInvoicesPatchReqApplyToSalesLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "0680283f-f68a-4960-8be5-aa7a6fd1abfa"
        }
      },
      "type": "object"
    },
    "vendorsPostReqShipmentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostResObjectApplyToSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesTaxCodesSalesTaxAgenciesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "04cf597c-0984-47ea-b874-4dcb6e8a9c98"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToOrderLinesRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsDiscountAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesInvoicesPostReqAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPurchaseOrderLinesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "8b683c28-36ad-4c88-b304-6b65673b24b2"
        }
      },
      "type": "object"
    },
    "vendorsPostReqPurchaseOrdersContactPhoneNumbers": {
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "Number": {
          "type": "string",
          "x-samplevalue": "770-555-0000"
        }
      },
      "type": "object"
    },
    "salesOrdersPatchResObjectSalesOrderLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "a3371984-1912-4132-892f-59351c1003a7"
        }
      },
      "type": "object"
    },
    "VendorsPostResCustomFieldValues": {
      "properties": {
        "Key": {
          "type": "string",
          "x-samplevalue": "Office Manager"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "Michael Avery"
        }
      },
      "type": "object"
    },
    "advanceReceiptsPostReqCreditCardAuthorizationInfoAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/advanceReceiptsPostReqCreditCardAuthorizationInfoAddressAddress"
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "receiptsPostReqCreditCardAuthorizationInfo": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/receiptsPostReqCreditCardAuthorizationInfoAddress"
        },
        "AmountAuthorized": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 220.31
        },
        "AuthorizationCode": {
          "type": "string",
          "x-samplevalue": "11TEST"
        },
        "AuthorizationStatus": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "ExpirationDate": {
          "type": "string"
        },
        "LastFourDigits": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        }
      },
      "title": "CreditCardAuthorizationInfo",
      "type": "object"
    },
    "quotesPostReq": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesPostReqAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 213.89
        },
        "CustomerNote": {
          "type": "string",
          "x-samplevalue": "Sample Note"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/quotesPostReqCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-07T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.28
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/quotesPostReqFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-06T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuoteLines": {
          "items": {
            "$ref": "#/definitions/quotesPostReqQuoteLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/quotesPostReqSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.99
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/quotesPostReqSalesTaxCodeReference"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/quotesPostReqShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "quotesPostReq",
      "type": "object"
    },
    "salesOrdersPatchResObjectShipToAddress": {
      "properties": {
        "Address": {
          "$ref": "#/definitions/salesOrdersPatchResObjectShipToAddressAddress"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Test Address"
        }
      },
      "type": "object"
    },
    "salesInvoicesObjectApplyToProposalLinesInventoryItemReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "salesOrdersResObjectSalesOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 99.9
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Clay Flower Pot - 24 in."
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 10
        },
        "QuantityShipped": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/salesOrdersResObjectSalesOrderLinesRevision"
        },
        "SalesTaxType": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": 1
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 9.99
        }
      },
      "type": "object"
    },
    "companiesDefaultsReceivablesReceivablesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d071fb4c-f126-46c8-acd6-d52bce00afd0"
        }
      },
      "title": "ReceivablesAccountReference",
      "type": "object"
    },
    "advanceReceiptsGetResCreditCardAuthorizationInfoAddressAddress": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "purchaseOrdersPostReqPurchaseOrderLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqPurchaseOrderLinesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 119.5
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Catalog #W570020: Scoop Shovel"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqPurchaseOrderLinesInventoryItemReference"
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqPurchaseOrderLinesJobReference"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseOrdersPostReqPurchaseOrderLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 10
        },
        "QuantityReceived": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UnitPrice": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 11.95
        }
      },
      "type": "object"
    },
    "quotesPostRes": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/quotesAccountReference"
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 213.89
        },
        "CustomerNote": {
          "type": "string"
        },
        "CustomerPurchaseOrderNumber": {
          "type": "string"
        },
        "CustomerReference": {
          "$ref": "#/definitions/quotesCustomerReference"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-07T00:00:00"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4.28
        },
        "DiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-03-17T00:00:00"
        },
        "DropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FreightAccountReference": {
          "$ref": "#/definitions/quotesFreightAccountReference"
        },
        "FreightAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GoodThroughDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "2020-04-06T00:00:00"
        },
        "InternalNote": {
          "type": "string"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleteAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsSaveAllowed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Key": {
          "$ref": "#/definitions/quotesKey"
        },
        "LastSavedAt": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "0001-01-01T00:00:00"
        },
        "PrintCustomerNoteAfterLineItems": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuoteLines": {
          "items": {
            "$ref": "#/definitions/quotesQuoteLines"
          },
          "type": "array"
        },
        "ReferenceNumber": {
          "type": "string"
        },
        "Revision": {
          "$ref": "#/definitions/quotesRevision"
        },
        "SalesRepresentativeReference": {
          "$ref": "#/definitions/quotesSalesRepresentativeReference"
        },
        "SalesTaxAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.99
        },
        "SalesTaxCodeReference": {
          "$ref": "#/definitions/quotesSalesTaxCodeReference"
        },
        "ShipToAddress": {
          "$ref": "#/definitions/quotesShipToAddress"
        },
        "ShipVia": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "StatementNote": {
          "type": "string"
        },
        "TermsDescription": {
          "type": "string",
          "x-samplevalue": "2% 10, Net 30 Days"
        }
      },
      "title": "quotes",
      "type": "object",
      "x-primary-key": [
        "Key.Guid"
      ],
      "x-vendor-objectname": "Quote"
    },
    "customersShipToContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "412 Sever Rd"
        },
        "Address2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "City": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Norcross"
        },
        "Country": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SalesTaxCode": {
          "type": "string",
          "x-samplevalue": "GAGWINN"
        },
        "State": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "30092"
        }
      },
      "type": "object"
    },
    "quotesQuoteLinesKey": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "b167b161-1e88-42e7-b01d-febf6ba75c35"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "customerCreditMemosApplyToInvoiceLinesSalesInvoiceLineReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "17f5cede-2008-49d0-b1c2-29c9bfbec4e5"
        }
      },
      "title": "SalesInvoiceLineReference",
      "type": "object"
    },
    "inventoryItemsObjectCOGSAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-alias": "cogsAccount",
          "x-samplevalue": "94e8ca4c-875f-44df-8dc2-fa0d85ba803d"
        }
      },
      "type": "object"
    },
    "customersPatchResUsualSalesAccountReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "edec889b-ce6c-457e-84d7-241bb2418181"
        }
      },
      "type": "object"
    },
    "salesInvoicesApplyToSalesOrderLinesJobReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        }
      },
      "type": "object"
    },
    "vendorsPatchResPaymentsContactAddress": {
      "properties": {
        "Address1": {
          "type": "string",
          "x-samplevalue": "3280 Park Lane"
        },
        "Address2": {
          "type": "string",
          "x-samplevalue": "Suite 2"
        },
        "City": {
          "type": "string",
          "x-samplevalue": "Smyrna"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "x-samplevalue": "GA"
        },
        "Zip": {
          "type": "string",
          "x-samplevalue": "30080"
        }
      },
      "type": "object"
    },
    "customersPatchResBillToContactRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "receiptsApplyToSalesLinesParentTransactionReference": {
      "properties": {
        "Guid": {
          "type": "string",
          "x-samplevalue": "d9684d98-fe64-4757-8160-bff4242f7bff"
        }
      },
      "title": "ParentTransactionReference",
      "type": "object"
    },
    "purchaseInvoicesObjectApplyToPurchasesLines": {
      "properties": {
        "AccountReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesAccountReference"
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 400
        },
        "Description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Extra greenhouse"
        },
        "InventoryItemReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesInventoryItemReference"
        },
        "IsAdded": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsModified": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IsUnchanged": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "IsUsed": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "JobReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesJobReference"
        },
        "Key": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesKey"
        },
        "ParentTransactionReference": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesParentTransactionReference"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 0
        },
        "Revision": {
          "$ref": "#/definitions/purchaseInvoicesObjectApplyToPurchasesLinesRevision"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "advanceReceiptsGetResRevision": {
      "properties": {
        "RevisionNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "Revision",
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "Sage 50 US",
    "x-element-hub": "finance",
    "x-element-key": "sage50us",
    "title": "sage50us",
    "x-element-id": 21762,
    "version": "api-v2",
    "description": "Add a Sage 50 US Instance to connect your existing Sage account to the Finance Hub, allowing you to manage customers, invoices, purchase orders, etc. across multiple Finance Elements. You will need your Sage account information to add an instance."
  },
  "tags": [
    {
      "name": "Advance Receipts"
    },
    {
      "name": "Bulk"
    },
    {
      "name": "Companies"
    },
    {
      "name": "Customer Credit Memos"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Employees"
    },
    {
      "name": "Inventory Items"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Journal Entries"
    },
    {
      "name": "Ledger Accounts"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Proposals"
    },
    {
      "name": "Purchase Invoices"
    },
    {
      "name": "Purchase Orders"
    },
    {
      "name": "Quotes"
    },
    {
      "name": "Receipts"
    },
    {
      "name": "Sales Invoices"
    },
    {
      "name": "Sales Orders"
    },
    {
      "name": "Sales Tax Agencies"
    },
    {
      "name": "Sales Tax Codes"
    },
    {
      "name": "Vendor Credit Memos"
    },
    {
      "name": "Vendors"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Add a Sage 50 US Instance to connect your existing Sage 50 US account",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/catalog"
  }
}