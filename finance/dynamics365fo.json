{
  "basePath": "/elements/api-v2",
  "paths": {
    "/bulk/download": {
      "post": {
        "summary": "Create a new bulk download job (asynchronous)",
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Fetch all the bulk jobs for an instance",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Cancel an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the errors of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the status of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the results of an asynchronous bulk query.",
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ]
      }
    },
    "/bulk/{objectName}": {
      "post": {
        "operationId": "createBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of the object for which data needs to be uploaded.",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" :&lt;path for the sub resource&gt;, \"format\": &lt;json/csv&gt;, \"callback-payload\":&lt;json&gt;}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          },
          {
            "description": "The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line",
            "in": "formData",
            "name": "file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkUploadResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Upload a file of objects to be bulk uploaded to the provider.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/contacts": {
      "post": {
        "operationId": "createContact",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/contactPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Contacts"
        ],
        "summary": "Create a contact person"
      },
      "get": {
        "operationId": "getContacts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contact"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contacts"
        ],
        "summary": "Search for contact persons"
      }
    },
    "/contacts/{id}": {
      "patch": {
        "operationId": "updateContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ContactPersonId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/contact"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact person"
      },
      "get": {
        "operationId": "getContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ContactPersonId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a contact person"
      },
      "delete": {
        "operationId": "deleteContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ContactPersonId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact person"
      }
    },
    "/customer-groups": {
      "post": {
        "operationId": "createCustomerGroup",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerGroupsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customerGroupPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customer Groups"
        ],
        "summary": "Create a customer group"
      },
      "get": {
        "operationId": "getCustomerGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customerGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customer Groups"
        ],
        "summary": "Search for customer groups"
      }
    },
    "/customer-groups/{id}": {
      "patch": {
        "operationId": "updateCustomerGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerGroupPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerGroupId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/customerGroup"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Customer Groups"
        ],
        "summary": "Update a customer group"
      },
      "get": {
        "operationId": "getCustomerGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerGroup"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerGroupId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customer Groups"
        ],
        "summary": "Retrieve a customer group"
      },
      "delete": {
        "operationId": "deleteCustomerGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerGroupId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customer Groups"
        ],
        "summary": "Delete a customer group"
      }
    },
    "/customers": {
      "post": {
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customerPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Create a customer"
      },
      "get": {
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customer"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Search for customers"
      }
    },
    "/customers/{id}": {
      "patch": {
        "operationId": "updateCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerAccount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/customer"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Update a customer"
      },
      "get": {
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerAccount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve a customer"
      },
      "delete": {
        "operationId": "deleteCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The CustomerAccount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Delete a customer"
      }
    },
    "/ledger-lines": {
      "post": {
        "operationId": "createLedgerLine",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerLinesPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerLinesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Ledger Lines"
        ],
        "summary": "Create a ledger journal line"
      },
      "get": {
        "operationId": "getLedgerLines",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerLinesGetAllRespObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "JournalBatchNumber",
            "description": "The JournalBatchNumber.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Lines"
        ],
        "summary": "Search for ledger journal lines"
      }
    },
    "/ledgers": {
      "post": {
        "operationId": "createLedger",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerHeadersPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerHeadersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Ledgers"
        ],
        "summary": "Create a ledger journal header"
      },
      "get": {
        "operationId": "getLedgers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerHeadersGetAllRespObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledgers"
        ],
        "summary": "Search for ledger journal headers"
      }
    },
    "/ledgers/{id}": {
      "patch": {
        "operationId": "updateLedgerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerHeadersPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The JournalBatchNumber",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerHeadersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledgers"
        ],
        "summary": "Update a ledger journal header"
      },
      "get": {
        "operationId": "getLedgerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerHeadersGetByIdResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The JournalBatchNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledgers"
        ],
        "summary": "Retrieve a ledger journal header"
      },
      "delete": {
        "operationId": "deleteLedgerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The JournalBatchNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledgers"
        ],
        "summary": "Delete a ledger journal header"
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          },
          {
            "description": "Set fetchAll=true to call the vendor API to retrieve all the vendor object names or refresh DB schema. Defaults to false",
            "in": "query",
            "name": "fetchAll",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the available objects.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get swagger docs for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the field for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/orders": {
      "post": {
        "operationId": "createOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ordersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/orderPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Create a sales order header"
      },
      "get": {
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Search for sales order headers"
      }
    },
    "/orders/{id}": {
      "patch": {
        "operationId": "updateOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/orderPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/ordersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The order body",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Update a sales order header"
      },
      "get": {
        "operationId": "getOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve a sales order header"
      },
      "delete": {
        "operationId": "deleteOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Delete a sales order header"
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.",
        "tags": [
          "Ping"
        ]
      }
    },
    "/products": {
      "post": {
        "summary": "Create a product",
        "operationId": "createProduct",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The product body",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "get": {
        "summary": "Search for products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/productsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "patch": {
        "summary": "Update a product",
        "operationId": "updateProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Product Number",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The product body",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "get": {
        "summary": "Retrieve a product",
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Product Number",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "deleteProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Product Number",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/purchase-orders": {
      "post": {
        "operationId": "createPurchaseOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchaseOrders body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create a purchase"
      },
      "get": {
        "operationId": "getPurchaseOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseOrdersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Search for purchase"
      }
    },
    "/purchase-orders/{id}": {
      "patch": {
        "operationId": "updatePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchaseOrders body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Update a purchase"
      },
      "get": {
        "operationId": "getPurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Retrieve a purchase"
      },
      "delete": {
        "operationId": "deletePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete a purchase"
      }
    },
    "/purchase-orders/{id}/line-items": {
      "post": {
        "operationId": "createPurchaseOrderLineItem",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersLineitemsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersLineitemsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The PurchaseOrdersLines body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create a purchase orders line"
      },
      "get": {
        "operationId": "getPurchaseOrdersLineItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseOrderLineItemsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Search for purchase orders line items"
      }
    },
    "/purchase-orders/{id}/line-items/{lineItemId}": {
      "patch": {
        "operationId": "updatePurchaseOrdersLineItemByLineItemId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersLineItemsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "lineItemId",
            "description": "The LineNumber",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseOrdersLineItemsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchaseOrdersLines body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Update a purchase orders line"
      },
      "get": {
        "operationId": "getPurchaseOrdersLineItemByLineItemId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersLineItemsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "lineItemId",
            "description": "The LineNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Retrieve a purchase orders line"
      },
      "delete": {
        "operationId": "deletePurchaseOrdersLineItemByLineItemId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The PurchaseOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "lineItemId",
            "description": "The LineNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete a purchase orders line"
      }
    },
    "/quote-headers": {
      "post": {
        "operationId": "createQuoteHeader",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteHeadersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/quoteHeaderPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Quote Headers"
        ],
        "summary": "Create a sales quotation header"
      },
      "get": {
        "operationId": "getQuoteHeaders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/quoteHeader"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Quote Headers"
        ],
        "summary": "Search for sales quotation headers"
      }
    },
    "/quote-headers/{id}": {
      "patch": {
        "operationId": "updateQuoteHeaderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteHeaderPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesQuotationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/quoteHeader"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Quote Headers"
        ],
        "summary": "Update a sales quotation header"
      },
      "get": {
        "operationId": "getQuoteHeaderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteHeader"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesQuotationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Quote Headers"
        ],
        "summary": "Retrieve a sales quotation header"
      },
      "delete": {
        "operationId": "deleteQuoteHeaderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesQuotationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Quote Headers"
        ],
        "summary": "Delete a sales quotation header"
      }
    },
    "/quote-lines": {
      "post": {
        "operationId": "createQuoteLine",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteLinesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/quoteLinePostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Quote Lines"
        ],
        "summary": "Create a sales quotation line"
      },
      "get": {
        "operationId": "getQuoteLines",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/quoteLine"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Quote Lines"
        ],
        "summary": "Search for sales quotation lines"
      }
    },
    "/quote-lines/{id}": {
      "patch": {
        "operationId": "updateQuoteLineById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteLinePatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLotId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/quoteLine"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Quote Lines"
        ],
        "summary": "Update a sales quotation line"
      },
      "get": {
        "operationId": "getQuoteLineById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/quoteLine"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLotId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Quote Lines"
        ],
        "summary": "Retrieve a sales quotation line"
      },
      "delete": {
        "operationId": "deleteQuoteLineById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLotId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Quote Lines"
        ],
        "summary": "Delete a sales quotation line"
      }
    },
    "/sales-invoices": {
      "get": {
        "operationId": "getSalesInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesInvoicesHeadersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Invoices"
        ],
        "summary": "Search for sales invoices headers"
      }
    },
    "/sales-invoices/{id}": {
      "get": {
        "operationId": "getSalesInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesInvoicesHeadersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Invoices"
        ],
        "summary": "Retrieve a sales invoices header"
      }
    },
    "/sales-invoices/{id}/line-items": {
      "get": {
        "operationId": "getSalesInvoicesLineItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesInvoiceLineItemsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Invoices"
        ],
        "summary": "Describe your resource here"
      }
    },
    "/sales-invoices/{id}/line-items/{lineItemId}": {
      "get": {
        "operationId": "getSalesInvoicesLineItemByLineItemId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesInvoicesLineitemsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "lineItemId",
            "description": "The ProductName",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Invoices"
        ],
        "summary": "Retrieve a sales invoices line item"
      }
    },
    "/sales-order-confirmations": {
      "get": {
        "operationId": "getSalesOrderConfirmations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrderConfirmationsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Order Confirmations"
        ],
        "summary": "Search for sales order confirmation headers"
      }
    },
    "/sales-order-confirmations/{id}": {
      "get": {
        "operationId": "getSalesOrderConfirmationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrderConfirmationsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ConfirmationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "salesOrderNumber",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Order Confirmations"
        ],
        "summary": "Retrieve a sales order confirmation header"
      }
    },
    "/sales-order-confirmations/{id}/line-items": {
      "get": {
        "operationId": "getSalesOrderConfirmationsLineItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrderConfirmationLineItemsGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ConfirmationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "salesOrderNumber",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Order Confirmations"
        ],
        "summary": "Retrieve a sales order confirmation header line item"
      }
    },
    "/sales-order-confirmations/{id}/line-items/{lineItemId}": {
      "get": {
        "operationId": "getSalesOrderConfirmationsLineItemByLineItemId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrderConfirmationLineItemsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ConfirmationNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "lineItemId",
            "description": "The ItemNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "salesOrderNumber",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Order Confirmations"
        ],
        "summary": "Retrieve a sales order confirmation"
      }
    },
    "/sales-orders-line-items/{id}": {
      "patch": {
        "operationId": "updateSalesOrdersLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersLineitemsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLot ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesOrdersLineitemsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Orders Line Items"
        ],
        "summary": "Update a sales orders line item"
      },
      "get": {
        "operationId": "getSalesOrdersLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersLineItemsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLot ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Orders Line Items"
        ],
        "summary": "Retrieve a sales order line item"
      },
      "delete": {
        "operationId": "deleteSalesOrdersLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InventoryLot ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Orders Line Items"
        ],
        "summary": "Delete a sales orders line item"
      }
    },
    "/sales-orders/{id}/line-items": {
      "post": {
        "operationId": "createSalesOrderLineItem",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersLineitemsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesOrdersLineitemsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders Line Items"
        ],
        "summary": "Create a sales orders line item"
      },
      "get": {
        "operationId": "getSalesOrdersLineItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrderLineItemsGetByIdResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The SalesOrderNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "Then dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Orders Line Items"
        ],
        "summary": "Search for sales orders line items"
      }
    },
    "/vendor-invoices": {
      "post": {
        "operationId": "createVendorInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesHeadersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorInvoicesHeadersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Create a vendor invoices header"
      },
      "get": {
        "operationId": "getVendorInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorInvoicesHeadersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Search for vendor invoices headers"
      }
    },
    "/vendor-invoices-line-items/{id}": {
      "patch": {
        "operationId": "updateVendorInvoicesLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesLineitemsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceLineNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "HeaderReference",
            "description": "THe HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorInvoicesLineitemsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices Line Items"
        ],
        "summary": "Update a vendor invoices line item"
      },
      "get": {
        "operationId": "getVendorInvoicesLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesLineitemsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceLineNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "HeaderReference",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices Line Items"
        ],
        "summary": "Retrieve a vendor invoices line item"
      },
      "delete": {
        "operationId": "deleteVendorInvoicesLineItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The InvoiceLineNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "HeaderReference",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices Line Items"
        ],
        "summary": "Delete a vendor invoices line item"
      }
    },
    "/vendor-invoices/{id}": {
      "patch": {
        "operationId": "updateVendorInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesHeadersPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorInvoicesHeadersPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Update a vendor invoices header"
      },
      "get": {
        "operationId": "getVendorInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesHeadersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Retrieve a vendor invoices header"
      },
      "delete": {
        "operationId": "deleteVendorInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Invoices"
        ],
        "summary": "Delete a vendor invoices header"
      }
    },
    "/vendor-invoices/{id}/line-items": {
      "post": {
        "operationId": "createVendorInvoiceLineItem",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorInvoicesLineitemsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The HeaderReference",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorInvoicesLineitemsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendor Invoices Line Items"
        ],
        "summary": "Create a vendor invoices line item"
      },
      "get": {
        "operationId": "getVendorInvoicesLineItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorInvoiceLineItemsGetByIdResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The VendorAccount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataAreaId",
            "description": "The dataAreaId",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendor Invoices Line Items"
        ],
        "summary": "Search for vendor invoices line items"
      }
    },
    "/vendor-metadata/{objectName}": {
      "get": {
        "operationId": "getVendorMetadataByObjectName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorMetadataRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "objectName",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Metadata"
        ],
        "summary": "Search for vendor metadata"
      }
    },
    "/{objectName}": {
      "post": {
        "summary": "Create an {objectName}",
        "operationId": "createByObjectName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customerPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "summary": "Search for {objectName}",
        "operationId": "getByObjectName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "The expand related objects, used to request additional objects (in csv format) to be sent on the response . <b>Note</b>: this can slow down the response time considerably ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}": {
      "patch": {
        "summary": "Update an {objectName}",
        "operationId": "updateObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} Id. You can find the key(s) required in the `GET /objects/{objectName}/metadata` call, indicated by the 'primaryKey' attribute. <b> Note: `objectId` is typically a composite key</b>, i.e., to update SalesAgreementLines objectId you should enter: `LineNumber=1,SalesAgreementId='SAG-000001',dataAreaId='usmf' `",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customer"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "summary": "Retrieve an {objectName}",
        "operationId": "getObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} Id. You can find the key(s) required in the `GET /objects/{objectName}/metadata` call, indicated by the 'primaryKey' attribute. <b> Note: `objectId` is typically a composite key</b>, i.e., to retrieve SalesAgreementLines objectId you should enter: `LineNumber=1,SalesAgreementId='SAG-000001',dataAreaId='usmf' `",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "delete": {
        "summary": "Delete an {objectName}",
        "operationId": "deleteObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} Id. You can find the key(s) required in the `GET /objects/{objectName}/metadata` call, indicated by the 'primaryKey' attribute. <b> Note: `objectId` is typically a composite key</b>, i.e., to delete SalesAgreementLines objectId you should enter: `LineNumber=1,SalesAgreementId='SAG-000001',dataAreaId='usmf' `",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "vendorInvoicesHeadersGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEyMjEwNTUxMTcsNjg3MTk0OTAyOTI7MCwwOzAsMCc=\""
        },
        "AccessKey": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ApprovePostingWithMatchingDiscrepancies": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ApproverPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BankAccount": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CTeType": {
          "type": "string",
          "x-samplevalue": "Normal",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CarrierName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CashDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D10",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ChargesGroup": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "Comment": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CountyOrigDest": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CreditCorrection": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-12-09T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryFreightChargeTerms": {
          "type": "string",
          "x-samplevalue": "Prepaid",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Contoso Entertainment System USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryPackingName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryStateRegistered": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryTransportBrand": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryVehicleNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DocumentNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-08T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "EnterpriseNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ErrorInvalidDistribution": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FiscalDocumentModel": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentSeries": {
          "type": "string"
        },
        "FiscalDocumentSpecie": {
          "type": "string",
          "x-samplevalue": "NFF"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalEstablishmentId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedRate": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FreightedBy": {
          "type": "string",
          "x-samplevalue": "Carrier",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "GSTImportDeclarationNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "GSTInvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012399",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IgnoreCalculatedSalesTax": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceDescription": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceGroup": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoicePaymentReleaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceRoundOff": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceSeries": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsApproved": {
          "type": "string",
          "x-samplevalue": "Yes",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsBatch": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsElectronicInvoiceForService": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsOnHold": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsPricesIncludeSalesTax": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Log": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MethodOfPayment": {
          "type": "string",
          "x-samplevalue": "CHECK",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "NumberSequenceGroup": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentSchedule": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentSpecification": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Port": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchReceiptDate_W": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "Recalculation": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ReleaseDateComment": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SalesTaxRounding": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ServiceCodeOnDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SettleVoucher": {
          "type": "string",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Site": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "StatisticsProcedure": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TermsOfPayment": {
          "type": "string",
          "x-samplevalue": "Net30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TotalDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TransactionCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Transport": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Triangulation": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "UUID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VarianceApprovedDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VariancePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorInvoiceReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VendorInvoiceType": {
          "type": "string",
          "x-samplevalue": "Standard",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VendorName": {
          "type": "string",
          "x-samplevalue": "Acme Office Supplies",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorPaymentFinancialInterestCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VendorPaymentFineCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VendorRequestedWorkerEmail": {
          "type": "string",
          "x-samplevalue": "julia@contoso.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ],
          "x-sub-format": "email"
        },
        "Warehouse": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "title": "vendorInvoicesHeadersGetAllRes",
      "type": "object",
      "x-primary-key": [
        "HeaderReference"
      ]
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "quoteLine": {
      "properties": {
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Alamo"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LINCOLN"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Sparow Retail"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001248"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Sparow Retail"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "199 Purple Road"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "89001"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "199 Purple Road\nAlamo, NV 89001 \nUSA"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "011911"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0011"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49950
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Laser Projector"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "RequestedInventoryStatusId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-20T12:00:00Z"
        },
        "RequestedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 999
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000007"
        },
        "SalesQuotationPromisingMethod": {
          "type": "string",
          "x-samplevalue": "ATPPlusIssueMargin"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "11"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "quoteLine",
      "x-has-customfields": false,
      "x-primary-key": [
        "InventoryLotId"
      ],
      "x-vendor-objectname": "SalesQuotationLines",
      "type": "object"
    },
    "salesOrdersLineItemsGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CustomsDocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomsDocumentName": {
          "type": "string"
        },
        "CustomsDocumentNumber": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCFOPCode": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliverySalesTaxGroupCode": {
          "type": "string"
        },
        "DeliverySalesTaxItemGroupCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EInvoicePropertyNumber": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "GiftCardBuyerEmail": {
          "type": "string"
        },
        "GiftCardBuyerName": {
          "type": "string"
        },
        "GiftCardGiftMessage": {
          "type": "string"
        },
        "GiftCardNumber": {
          "type": "string"
        },
        "GiftCardRecipientEmail": {
          "type": "string"
        },
        "GiftCardRecipientName": {
          "type": "string"
        },
        "GiftCardType": {
          "type": "string",
          "x-samplevalue": "Email"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "000221"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "ItemWithholdingTaxCodeGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49500
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderLineReference": {
          "type": "string"
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesRebateProductGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ServiceOrderNumber": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WillRebateCalculationExcludeLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrdersLineItemsGetByIdRes",
      "type": "object"
    },
    "salesOrderConfirmationsGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0Nzk4ODcn\""
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-09-12T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ConfirmationDocumentReference": {
          "type": "string",
          "x-samplevalue": "000872-6",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ConfirmationNumber": {
          "type": "string",
          "x-samplevalue": "CCF-00000074",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CustomerRequisitionNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CustomersOrderReference": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "002--",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressBuildingCompliment": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Los Angeles"
        },
        "DeliveryAddressCityInKana": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LOS ANGELE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Forest Wholesales"
        },
        "DeliveryAddressDistrictName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001209"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Forest Wholesales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressPostBox": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "CA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "123 White Road",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressStreetInKana": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryAddressStreetNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "90004"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "FixedSecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "123 White Road\nLos Angeles, CA 90004 \nUSA"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-003",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsInventorySiteMandatory": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OrderTakerPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-003",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net45",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000872",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SubTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalConfirmedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalCostAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalLineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalNetVolume": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TotalNetWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TotalQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalRoundOffAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "title": "salesOrderConfirmationsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "SalesOrderNumber"
      ]
    },
    "productsPatchRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string"
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "NMFCCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "0187"
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand"
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item"
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string"
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsPatchRes",
      "x-primary-key": [
        "ProductNumber"
      ],
      "type": "object"
    },
    "orderPostReq": {
      "properties": {
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "OpenTransact"
        },
        "CustomersOrderReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "DirectDebitMandateId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "contoso.europe@vendor8.consolidatedmessenger.com"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCountyId": {
          "type": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "InvoicePaymentAttachmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEInvoiceDimensionAccountCodeSpecifiedPerLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEntryCertificateRequired": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOwnEntryCertificateIssued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesProcessingStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderResponsiblePersonnelNumber": {
          "type": "string"
        },
        "OrderTakerPersonnelNumber": {
          "type": "string"
        },
        "OrderTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsBaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net10"
        },
        "PriceCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "09"
        },
        "QuotationNumber": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "SalesOrderName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-samplevalue": "PHONE"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "SalesOrderProcessingStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesRebateCustomerGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TMACustomerGroupId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-samplevalue": "998765"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransportationBrokerId": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "dataAreaId",
        "CurrencyCode",
        "OrderingCustomerAccountNumber"
      ],
      "title": "orderPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesOrderNumber"
      ],
      "x-vendor-objectname": "SalesOrderHeaders",
      "type": "object"
    },
    "quoteHeaderPatchRes": {
      "properties": {
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "quoteHeaderPatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesQuotationNumber"
      ],
      "x-vendor-objectname": "SalesQuotationHeaders",
      "type": "object"
    },
    "salesOrdersLineitemsPatchRes": {
      "properties": {
        "InventoryLotId ": {
          "type": "string",
          "x-samplevalue": "012810"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrdersLineitemsPatchRes",
      "type": "object"
    },
    "productsPatchReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string"
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "NMFCCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand"
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item"
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string"
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsPatchReq",
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "customerPostReq": {
      "properties": {
        "AccountStatement": {
          "type": "string",
          "x-samplevalue": "Always"
        },
        "AddressBooks": {
          "type": "string"
        },
        "AddressBrazilianCNPJOrCPF": {
          "type": "string"
        },
        "AddressBrazilianIE": {
          "type": "string"
        },
        "AddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "AddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "AddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "AddressCounty": {
          "type": "string"
        },
        "AddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "AddressDistrictName": {
          "type": "string"
        },
        "AddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "AddressLocationRoles": {
          "type": "string",
          "x-samplevalue": "Business;Delivery;Invoice;Other"
        },
        "AddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "AddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "AddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "AddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "AddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "BirthCountyCode": {
          "type": "string"
        },
        "BirthPlace": {
          "type": "string"
        },
        "BrazilianCCM": {
          "type": "string"
        },
        "BrazilianCNAE": {
          "type": "string"
        },
        "BrazilianCNPJOrCPF": {
          "type": "string"
        },
        "BrazilianIE": {
          "type": "string"
        },
        "BrazilianINSSCEI": {
          "type": "string"
        },
        "BrazilianNIT": {
          "type": "string"
        },
        "CURPNumber": {
          "type": "string"
        },
        "CalculateWithholdingTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CentralBankPurposeCode": {
          "type": "string"
        },
        "CentralBankPurposeNotes": {
          "type": "string"
        },
        "ChargesGroupId": {
          "type": "string"
        },
        "CollectionsContactPersonId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesGroupId": {
          "type": "string"
        },
        "CompanyChain": {
          "type": "string"
        },
        "CompanyType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "ConsolidationDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditCardAddressVerification": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditCardAddressVerificationIsAuthorizationVoidedOnFailure": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditCardAddressVerificationLevel": {
          "type": "string",
          "x-samplevalue": "Accept"
        },
        "CreditCardCVC": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CreditLimitIsMandatory": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditRating": {
          "type": "string"
        },
        "CustomerAccount": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "90"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerRebateGroupId": {
          "type": "string"
        },
        "CustomerTMAGroupId": {
          "type": "string"
        },
        "CustomerWithholdingContributionType": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultInventoryStatusId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "DeliveryAddressCounty": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "DeliveryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "DeliveryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "DeliveryFreightZone": {
          "type": "string"
        },
        "DeliveryMode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliveryReason": {
          "type": "string"
        },
        "DeliveryTerms": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "DestinationCode": {
          "type": "string"
        },
        "DiscountPriceGroupId": {
          "type": "string",
          "x-samplevalue": "09"
        },
        "ElectronicInvoiceEAN": {
          "type": "string"
        },
        "ElectronicLocationId": {
          "type": "string",
          "x-samplevalue": "000001200"
        },
        "EmployeeResponsibleNumber": {
          "type": "string"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FederalAgencyLocationCode": {
          "type": "string"
        },
        "FederalComments": {
          "type": "string"
        },
        "FederalIndicator": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "FiscalCode": {
          "type": "string"
        },
        "ForeignCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ForeignerId": {
          "type": "string"
        },
        "FrenchSiret": {
          "type": "string"
        },
        "FulfillmentErrorTolerance": {
          "type": "string",
          "x-samplevalue": "UseCompanyPolicy"
        },
        "FullPrimaryAddress": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5\n10115 Berlin\ndeu"
        },
        "GiroType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeAccountStatement": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeCollectionletter": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeFreeTextInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeInterestNote": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeProjInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "HasSuframaDiscountPISandCOFINS": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IRS1099CIndicator": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IdentificationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string"
        },
        "InvoiceAddress": {
          "type": "string",
          "x-samplevalue": "InvoiceAccount"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "InvoiceAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "InvoiceAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "InvoiceAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "IsElectronicInvoice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromCollectionFeeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromInterestChargeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExpressBillOfLadingAccepted": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFreightAccrued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFuelSurchargeApplied": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsICMSContributor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInSuframaRegion": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIncomingFiscalDocumentGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOrderNumberReferenceUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPurchRequestUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDCaseTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDItemTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDPalletTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesTaxIncludedInPrices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTransactionPostedAsShipment": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsWithholdingTaxCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemCustomerGroupId": {
          "type": "string"
        },
        "KnownAs": {
          "type": "string"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCode": {
          "type": "string"
        },
        "LineOfBusinessId": {
          "type": "string",
          "x-samplevalue": "2100"
        },
        "MultiLineDiscountCode": {
          "type": "string"
        },
        "NAFCode": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "NameAlias": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "NationalRegistryNumber": {
          "type": "string"
        },
        "NatureOfAssessee": {
          "type": "string",
          "x-samplevalue": "Company"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "OnHoldStatus": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "OrderEntryDeadline": {
          "type": "string"
        },
        "OrganizationABCCode": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrganizationNumber": {
          "type": "string"
        },
        "OrganizationNumberOfEmployees": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrganizationPhoneticName": {
          "type": "string"
        },
        "PANNumber": {
          "type": "string"
        },
        "PANReferenceNumber": {
          "type": "string"
        },
        "PackingDutyLicense": {
          "type": "string"
        },
        "PackingMaterialFeeLicenseNumber": {
          "type": "string"
        },
        "PanStatus": {
          "type": "string",
          "x-samplevalue": "NotAvailable"
        },
        "PartyCountry": {
          "type": "string"
        },
        "PartyNumber": {
          "type": "string",
          "x-samplevalue": "000000838"
        },
        "PartyState": {
          "type": "string"
        },
        "PartyType": {
          "type": "string",
          "x-samplevalue": "Organization"
        },
        "PaymentBankAccount": {
          "type": "string"
        },
        "PaymentCashDiscount": {
          "type": "string"
        },
        "PaymentDay": {
          "type": "string"
        },
        "PaymentFactoringAccount": {
          "type": "string"
        },
        "PaymentIdType": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string",
          "x-samplevalue": "Net10"
        },
        "PaymentTermsBaseDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PaymentUseCashDiscount": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "PersonAnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonAnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonAnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonChildrenNames": {
          "type": "string"
        },
        "PersonGender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "PersonHobbies": {
          "type": "string"
        },
        "PersonInitials": {
          "type": "string"
        },
        "PersonMaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonPhoneticFirstName": {
          "type": "string"
        },
        "PersonPhoneticLastName": {
          "type": "string"
        },
        "PersonPhoneticMiddleName": {
          "type": "string"
        },
        "PersonProfessionalSuffix": {
          "type": "string"
        },
        "PersonProfessionalTitle": {
          "type": "string"
        },
        "PreferentialCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmail": {
          "type": "string",
          "x-samplevalue": "contoso.europe@vendor8.consolidatedmessenger.com"
        },
        "PrimaryContactEmailDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Email"
        },
        "PrimaryContactEmailIsIM": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmailPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactFacebook": {
          "type": "string"
        },
        "PrimaryContactFacebookDescription": {
          "type": "string"
        },
        "PrimaryContactFacebookPurpose": {
          "type": "string"
        },
        "PrimaryContactFax": {
          "type": "string"
        },
        "PrimaryContactFaxDescription": {
          "type": "string"
        },
        "PrimaryContactFaxExtension": {
          "type": "string"
        },
        "PrimaryContactFaxPurpose": {
          "type": "string"
        },
        "PrimaryContactLinkedIn": {
          "type": "string"
        },
        "PrimaryContactLinkedInDescription": {
          "type": "string"
        },
        "PrimaryContactLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryContactPhone": {
          "type": "string",
          "x-samplevalue": "01234 56789"
        },
        "PrimaryContactPhoneDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Phone"
        },
        "PrimaryContactPhoneExtension": {
          "type": "string"
        },
        "PrimaryContactPhoneIsMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactPhonePurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactTelex": {
          "type": "string",
          "x-samplevalue": "01234 56789"
        },
        "PrimaryContactTelexDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Telex"
        },
        "PrimaryContactTelexPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactTwitter": {
          "type": "string"
        },
        "PrimaryContactTwitterDescription": {
          "type": "string"
        },
        "PrimaryContactTwitterPurpose": {
          "type": "string"
        },
        "PrimaryContactURL": {
          "type": "string"
        },
        "PrimaryContactURLDescription": {
          "type": "string"
        },
        "PrimaryContactURLPurpose": {
          "type": "string"
        },
        "RFCNumber": {
          "type": "string"
        },
        "ReceiptCalendar": {
          "type": "string",
          "x-samplevalue": "Production"
        },
        "ReceiptEmail": {
          "type": "string"
        },
        "ReceiptOption": {
          "type": "string",
          "x-samplevalue": "RetailEx3"
        },
        "ReliefGroupId": {
          "type": "string"
        },
        "ResidenceForeignCountryRegionId": {
          "type": "string"
        },
        "SalesAccountNumber": {
          "type": "string"
        },
        "SalesCurrencyCode": {
          "type": "string",
          "x-samplevalue": "EUR"
        },
        "SalesDistrict": {
          "type": "string"
        },
        "SalesMemo": {
          "type": "string"
        },
        "SalesOrderPoolId": {
          "type": "string"
        },
        "SalesReturnTaxGroup": {
          "type": "string"
        },
        "SalesSegmentId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "SalesSubsegmentId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SiteId": {
          "type": "string"
        },
        "StateInscription": {
          "type": "string"
        },
        "StatisticsGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "SuframaNumber": {
          "type": "string"
        },
        "SupplementaryItemGroupId": {
          "type": "string"
        },
        "TCSGroup": {
          "type": "string"
        },
        "TDSGroup": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-samplevalue": "998765"
        },
        "TaxRegistrationId": {
          "type": "string"
        },
        "TotalDiscountCode": {
          "type": "string"
        },
        "TransactionPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "VendorAccount": {
          "type": "string"
        },
        "WarehouseFulfillmentRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WarehouseFulfillmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "WarehouseId": {
          "type": "string"
        },
        "WarehouseIsASNGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WarehouseIsEntireShipmentFilled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "WriteoffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "Name",
        "CustomerAccount",
        "CustomerGroupId",
        "SalesCurrencyCode"
      ],
      "title": "customerPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerAccount"
      ],
      "x-vendor-objectname": "Customers",
      "type": "object"
    },
    "ledgerHeadersPostResp": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#LedgerJournalHeaders/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk1MTE1MjIn\""
        },
        "AccountingCurrency": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Testing new"
        },
        "IsPosted": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "000036"
        },
        "JournalName": {
          "type": "string",
          "x-samplevalue": "GenJrn"
        },
        "JournalTotalCredit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "JournalTotalDebit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PostingLayer": {
          "type": "string",
          "x-samplevalue": "Current"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "ledgerHeadersPostResp",
      "x-primary-key": [
        "JournalBatchNumber"
      ],
      "type": "object"
    },
    "salesOrdersLineitemsPatchReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CustomsDocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomsDocumentName": {
          "type": "string"
        },
        "CustomsDocumentNumber": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCFOPCode": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliverySalesTaxGroupCode": {
          "type": "string"
        },
        "DeliverySalesTaxItemGroupCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EInvoicePropertyNumber": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "GiftCardBuyerEmail": {
          "type": "string"
        },
        "GiftCardBuyerName": {
          "type": "string"
        },
        "GiftCardGiftMessage": {
          "type": "string"
        },
        "GiftCardNumber": {
          "type": "string"
        },
        "GiftCardRecipientEmail": {
          "type": "string"
        },
        "GiftCardRecipientName": {
          "type": "string"
        },
        "GiftCardType": {
          "type": "string",
          "x-samplevalue": "Email"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "000221"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "ItemWithholdingTaxCodeGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49500
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderLineReference": {
          "type": "string"
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesRebateProductGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ServiceOrderNumber": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WillRebateCalculationExcludeLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrdersLineitemsPatchReq",
      "type": "object"
    },
    "ledgerHeadersPostReq": {
      "properties": {
        "Description": {
          "type": "string",
          "x-samplevalue": "General Journal"
        },
        "JournalName": {
          "type": "string",
          "x-samplevalue": "GenJrn"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "uspi"
        }
      },
      "required": [
        "JournalName"
      ],
      "title": "ledgerHeadersPostReq",
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "salesInvoicesHeadersGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NTQ2NzswLDA7MCwyMjU2NTQyNzUyOCc=\""
        },
        "ContactPersonId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CustomersOrderReference": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "EXW",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Bluefield",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressState": {
          "type": "string",
          "x-samplevalue": "WV",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "456 Green Road Fairfield",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "InvoiceAddressStreetNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "24701",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-025",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-07-15T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceHeaderTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "InvoiceNumber": {
          "type": "string",
          "x-samplevalue": "CIV-000200",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000201",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SalesOrderResponsiblePersonnelNumber": {
          "type": "string"
        },
        "TotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TotalDiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 407.55,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalDiscountCustomerGroupCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 40755,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "TotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "title": "salesInvoicesHeadersGetAllRes",
      "type": "object",
      "x-primary-key": [
        "InvoiceNumber"
      ]
    },
    "purchaseOrdersLineItemsGetById": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderLinesV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2MjY4OTE7MCwyMjU2NTQyNjk4OTswLDA7MCwwOzAsMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "BarCodeSetupId": {
          "type": "string"
        },
        "Barcode": {
          "type": "string"
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CatchWeightUnitSymbol": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomerReference": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "DIOTOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Galvin"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "ASOTIN"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001098"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98544"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedAssetGroupId": {
          "type": "string"
        },
        "FixedAssetNumber": {
          "type": "string"
        },
        "FixedAssetTransactionType": {
          "type": "string",
          "x-samplevalue": "Acquisition"
        },
        "FixedAssetValueModelId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1\nGalvin, WA 98544 \nUSA"
        },
        "GSTHSTTaxType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsNewFixedAsset": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPartialDeliveryPrevented": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsProjectPayWhenPaid": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099GTradeOrBusinessIncome": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099SPropertyOrServices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0003"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "StandardSpeaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OriginCountryRegionId": {
          "type": "string"
        },
        "OriginStateId": {
          "type": "string"
        },
        "ProcurementProductCategoryName": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProjectActivityNumber": {
          "type": "string"
        },
        "ProjectCategoryId": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string"
        },
        "ProjectLinePropertyId": {
          "type": "string"
        },
        "ProjectSalesCurrencyCode": {
          "type": "string"
        },
        "ProjectSalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ProjectSalesUnitSymbol": {
          "type": "string"
        },
        "ProjectTaxGroupCode": {
          "type": "string"
        },
        "ProjectTaxItemGroupCode": {
          "type": "string"
        },
        "ProjectWorkerPersonnelNumber": {
          "type": "string"
        },
        "PurchaseOrderLineCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Backorder"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000132"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "PurchasePriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "PurchaseUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ReceivingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ReceivingWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-07-31T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "RetailProductVariantNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099BoxId": {
          "type": "string"
        },
        "Tax1099GStateTaxWithheldAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GTaxYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GVendorStateId": {
          "type": "string"
        },
        "Tax1099GVendorStateTaxId": {
          "type": "string"
        },
        "Tax1099SAddressOrLegalDescription": {
          "type": "string"
        },
        "Tax1099SBuyerPartOfRealEstateTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099SClosingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099StateId": {
          "type": "string"
        },
        "UnitWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VendorInvoiceMatchingPolicy": {
          "type": "string",
          "x-samplevalue": "ThreeWayMatch"
        },
        "WillProductReceivingCrossDockProducts": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "purchaseOrdersLineItemsGetById",
      "x-primary-key": [
        "PurchaseOrderNumber",
        "LineNumber"
      ],
      "type": "object"
    },
    "order": {
      "properties": {
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "OpenTransact"
        },
        "CustomersOrderReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "DirectDebitMandateId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "contoso.europe@vendor8.consolidatedmessenger.com"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCountyId": {
          "type": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "InvoicePaymentAttachmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEInvoiceDimensionAccountCodeSpecifiedPerLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEntryCertificateRequired": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOwnEntryCertificateIssued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesProcessingStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderResponsiblePersonnelNumber": {
          "type": "string"
        },
        "OrderTakerPersonnelNumber": {
          "type": "string"
        },
        "OrderTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsBaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net10"
        },
        "PriceCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "09"
        },
        "QuotationNumber": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "SalesOrderName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-samplevalue": "PHONE"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "SalesOrderProcessingStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesRebateCustomerGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TMACustomerGroupId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-samplevalue": "998765"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransportationBrokerId": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "order",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesOrderNumber"
      ],
      "x-vendor-objectname": "SalesOrderHeaders",
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "productsPostReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string"
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "NMFCCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "0187",
          "x-required": true
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand"
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item",
          "x-required": true
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string"
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsPostReq",
      "type": "object",
      "required": [
        "ProductNumber",
        "ProductType"
      ]
    },
    "customerGroupsPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0ODY2MjEn\""
        },
        "ClearingPeriodPaymentTermName": {
          "type": "string"
        },
        "CustomerAccountNumberSequence": {
          "type": "string"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "425"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsSalesTaxIncludedInPrice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PaymentTermId": {
          "type": "string"
        },
        "TaxGroupId": {
          "type": "string"
        },
        "WriteOffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "customerGroupsPostRes",
      "x-primary-key": [
        "CustomerGroupId"
      ],
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "purchaseOrdersLineItemsPatchRes": {
      "properties": {
        "LineNumber": {
          "type": "string",
          "x-samplevalue": "5631"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000231"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "purchaseOrdersLineItemsPatchRes",
      "type": "object"
    },
    "productsPostRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string"
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "NMFCCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "0187",
          "x-required": true
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand"
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item",
          "x-required": true
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string"
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsPostRes",
      "x-primary-key": [
        "ProductNumber"
      ],
      "type": "object",
      "required": [
        "ProductNumber",
        "ProductType"
      ]
    },
    "purchaseOrdersLineItemsPatchReq": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderLinesV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDIyNTY1NDI0MzAyOzAsMDswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "BarCodeSetupId": {
          "type": "string"
        },
        "Barcode": {
          "type": "string"
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CatchWeightUnitSymbol": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomerReference": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "DIOTOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedAssetGroupId": {
          "type": "string"
        },
        "FixedAssetNumber": {
          "type": "string"
        },
        "FixedAssetTransactionType": {
          "type": "string",
          "x-samplevalue": "Acquisition"
        },
        "FixedAssetValueModelId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA"
        },
        "GSTHSTTaxType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsNewFixedAsset": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPartialDeliveryPrevented": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsProjectPayWhenPaid": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099GTradeOrBusinessIncome": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099SPropertyOrServices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "S0014"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5269
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Hardware: App Server"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OriginCountryRegionId": {
          "type": "string"
        },
        "OriginStateId": {
          "type": "string"
        },
        "ProcurementProductCategoryName": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProjectActivityNumber": {
          "type": "string"
        },
        "ProjectCategoryId": {
          "type": "string",
          "x-samplevalue": "ProjItem"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "ProjectLinePropertyId": {
          "type": "string",
          "x-samplevalue": "Billable"
        },
        "ProjectSalesCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ProjectSalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6199
        },
        "ProjectSalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ProjectTaxGroupCode": {
          "type": "string"
        },
        "ProjectTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "HW"
        },
        "ProjectWorkerPersonnelNumber": {
          "type": "string"
        },
        "PurchaseOrderLineCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchasePrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5269
        },
        "PurchasePriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "PurchaseUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ReceivingSiteId": {
          "type": "string",
          "x-samplevalue": "MainOffice"
        },
        "ReceivingWarehouseId": {
          "type": "string",
          "x-samplevalue": "MainOffice"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "RetailProductVariantNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "HW"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099BoxId": {
          "type": "string"
        },
        "Tax1099GStateTaxWithheldAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GTaxYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GVendorStateId": {
          "type": "string"
        },
        "Tax1099GVendorStateTaxId": {
          "type": "string"
        },
        "Tax1099SAddressOrLegalDescription": {
          "type": "string"
        },
        "Tax1099SBuyerPartOfRealEstateTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099SClosingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099StateId": {
          "type": "string"
        },
        "UnitWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VendorInvoiceMatchingPolicy": {
          "type": "string",
          "x-samplevalue": "ThreeWayMatch"
        },
        "WillProductReceivingCrossDockProducts": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrdersLineItemsPatchReq",
      "type": "object"
    },
    "salesOrdersLineitemsPostReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CustomsDocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomsDocumentName": {
          "type": "string"
        },
        "CustomsDocumentNumber": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCFOPCode": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliverySalesTaxGroupCode": {
          "type": "string"
        },
        "DeliverySalesTaxItemGroupCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EInvoicePropertyNumber": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "GiftCardBuyerEmail": {
          "type": "string"
        },
        "GiftCardBuyerName": {
          "type": "string"
        },
        "GiftCardGiftMessage": {
          "type": "string"
        },
        "GiftCardNumber": {
          "type": "string"
        },
        "GiftCardRecipientEmail": {
          "type": "string"
        },
        "GiftCardRecipientName": {
          "type": "string"
        },
        "GiftCardType": {
          "type": "string",
          "x-samplevalue": "Email"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "000221"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "ItemWithholdingTaxCodeGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49500
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderLineReference": {
          "type": "string"
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesRebateProductGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ServiceOrderNumber": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WillRebateCalculationExcludeLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "ItemNumber"
      ],
      "title": "salesOrdersLineitemsPostReq",
      "type": "object"
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "salesOrderConfirmationLineItemsGetAllObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3Nic=\""
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-11-14T12:00:00Z"
        },
        "ConfirmationDocumentReference": {
          "type": "string",
          "x-samplevalue": "000668-1"
        },
        "ConfirmationNumber": {
          "type": "string",
          "x-samplevalue": "CCF-000001"
        },
        "ConfirmedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ConfirmedInventoryQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 175
        },
        "ConfirmedInventoryStatusId": {
          "type": "string"
        },
        "ConfirmedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 175
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-11-20T12:00:00Z"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryTermsCode": {
          "type": "string"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 57750
        },
        "LineAmountSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "SalesOrderLineInventoryLotId": {
          "type": "string",
          "x-samplevalue": "006081"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000668"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesTaxPrintCode": {
          "type": "string"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "TotalLineSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrderConfirmationLineItemsGetAll",
      "type": "object",
      "x-primary-key": [
        "ItemNumber"
      ]
    },
    "salesOrdersLineitemsPostRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CustomsDocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomsDocumentName": {
          "type": "string"
        },
        "CustomsDocumentNumber": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCFOPCode": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliverySalesTaxGroupCode": {
          "type": "string"
        },
        "DeliverySalesTaxItemGroupCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EInvoicePropertyNumber": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "GiftCardBuyerEmail": {
          "type": "string"
        },
        "GiftCardBuyerName": {
          "type": "string"
        },
        "GiftCardGiftMessage": {
          "type": "string"
        },
        "GiftCardNumber": {
          "type": "string"
        },
        "GiftCardRecipientEmail": {
          "type": "string"
        },
        "GiftCardRecipientName": {
          "type": "string"
        },
        "GiftCardType": {
          "type": "string",
          "x-samplevalue": "Email"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "000221"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "ItemWithholdingTaxCodeGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49500
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderLineReference": {
          "type": "string"
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesRebateProductGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ServiceOrderNumber": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WillRebateCalculationExcludeLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrdersLineitemsPostRes",
      "x-primary-key": [
        "InventoryLotId"
      ],
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "ledgerLinesPostReq": {
      "properties": {
        "AccountDisplayValue": {
          "type": "string",
          "x-samplevalue": "DE\\-001"
        },
        "AccountType": {
          "type": "string",
          "x-samplevalue": "Cust"
        },
        "CashDiscount": {
          "type": "string"
        },
        "CashDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChineseVoucher": {
          "type": "string"
        },
        "ChineseVoucherType": {
          "type": "string"
        },
        "Company": {
          "type": "string",
          "x-samplevalue": "usmf"
        },
        "CreditAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 328130
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DebitAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Document": {
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-26T12:00:00Z"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-25T12:00:00Z"
        },
        "ExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "ExchRateSecond": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Invoice": {
          "type": "string"
        },
        "IsWithholdingCalculationEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemSalesTaxGroup": {
          "type": "string"
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00629"
        },
        "OffsetAccountDisplayValue": {
          "type": "string",
          "x-samplevalue": "USMF OPER"
        },
        "OffsetAccountType": {
          "type": "string",
          "x-samplevalue": "Bank"
        },
        "OffsetCompany": {
          "type": "string",
          "x-samplevalue": "usmf"
        },
        "OffsetDefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "OffsetText": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "PaymentReference": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReportingCurrencyExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReportingCurrencyExchRateSecondary": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReverseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ReverseEntry": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "TransDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-26T12:00:00Z"
        },
        "Voucher": {
          "type": "string",
          "x-samplevalue": "ARPM000001"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "JournalBatchNumber",
        "CurrencyCode"
      ],
      "title": "ledgerLinesPostReq",
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "purchaseOrdersLineitemsPostReq": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderLinesV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2MjY4OTE7MCwyMjU2NTQyNjk4OTswLDA7MCwwOzAsMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "BarCodeSetupId": {
          "type": "string"
        },
        "Barcode": {
          "type": "string"
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CatchWeightUnitSymbol": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomerReference": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "DIOTOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Galvin"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "ASOTIN"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001098"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98544"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedAssetGroupId": {
          "type": "string"
        },
        "FixedAssetNumber": {
          "type": "string"
        },
        "FixedAssetTransactionType": {
          "type": "string",
          "x-samplevalue": "Acquisition"
        },
        "FixedAssetValueModelId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1\nGalvin, WA 98544 \nUSA"
        },
        "GSTHSTTaxType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsNewFixedAsset": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPartialDeliveryPrevented": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsProjectPayWhenPaid": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099GTradeOrBusinessIncome": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099SPropertyOrServices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0003",
          "x-required": true
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "StandardSpeaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-required": true
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OriginCountryRegionId": {
          "type": "string"
        },
        "OriginStateId": {
          "type": "string"
        },
        "ProcurementProductCategoryName": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProjectActivityNumber": {
          "type": "string"
        },
        "ProjectCategoryId": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string"
        },
        "ProjectLinePropertyId": {
          "type": "string"
        },
        "ProjectSalesCurrencyCode": {
          "type": "string"
        },
        "ProjectSalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ProjectSalesUnitSymbol": {
          "type": "string"
        },
        "ProjectTaxGroupCode": {
          "type": "string"
        },
        "ProjectTaxItemGroupCode": {
          "type": "string"
        },
        "ProjectWorkerPersonnelNumber": {
          "type": "string"
        },
        "PurchaseOrderLineCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Backorder"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "PurchasePriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "PurchaseUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ReceivingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ReceivingWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-07-31T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "RetailProductVariantNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099BoxId": {
          "type": "string"
        },
        "Tax1099GStateTaxWithheldAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GTaxYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GVendorStateId": {
          "type": "string"
        },
        "Tax1099GVendorStateTaxId": {
          "type": "string"
        },
        "Tax1099SAddressOrLegalDescription": {
          "type": "string"
        },
        "Tax1099SBuyerPartOfRealEstateTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099SClosingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099StateId": {
          "type": "string"
        },
        "UnitWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VendorInvoiceMatchingPolicy": {
          "type": "string",
          "x-samplevalue": "ThreeWayMatch"
        },
        "WillProductReceivingCrossDockProducts": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "purchaseOrdersLineitemsPostReq",
      "type": "object",
      "required": [
        "ItemNumber",
        "LineNumber"
      ]
    },
    "purchaseOrdersLineitemsPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderLinesV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2MjY4OTE7MCwyMjU2NTQyNjk4OTswLDA7MCwwOzAsMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "BarCodeSetupId": {
          "type": "string"
        },
        "Barcode": {
          "type": "string"
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CatchWeightUnitSymbol": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomerReference": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "DIOTOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Galvin"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "ASOTIN"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001098"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98544"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedAssetGroupId": {
          "type": "string"
        },
        "FixedAssetNumber": {
          "type": "string"
        },
        "FixedAssetTransactionType": {
          "type": "string",
          "x-samplevalue": "Acquisition"
        },
        "FixedAssetValueModelId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "213 South Street, Gate 1\nGalvin, WA 98544 \nUSA"
        },
        "GSTHSTTaxType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsNewFixedAsset": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPartialDeliveryPrevented": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsProjectPayWhenPaid": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099GTradeOrBusinessIncome": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099SPropertyOrServices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0003"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "StandardSpeaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OriginCountryRegionId": {
          "type": "string"
        },
        "OriginStateId": {
          "type": "string"
        },
        "ProcurementProductCategoryName": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProjectActivityNumber": {
          "type": "string"
        },
        "ProjectCategoryId": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string"
        },
        "ProjectLinePropertyId": {
          "type": "string"
        },
        "ProjectSalesCurrencyCode": {
          "type": "string"
        },
        "ProjectSalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ProjectSalesUnitSymbol": {
          "type": "string"
        },
        "ProjectTaxGroupCode": {
          "type": "string"
        },
        "ProjectTaxItemGroupCode": {
          "type": "string"
        },
        "ProjectWorkerPersonnelNumber": {
          "type": "string"
        },
        "PurchaseOrderLineCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Backorder"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000132"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 79.99
        },
        "PurchasePriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "PurchaseUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ReceivingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ReceivingWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-07-31T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "RetailProductVariantNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099BoxId": {
          "type": "string"
        },
        "Tax1099GStateTaxWithheldAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GTaxYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GVendorStateId": {
          "type": "string"
        },
        "Tax1099GVendorStateTaxId": {
          "type": "string"
        },
        "Tax1099SAddressOrLegalDescription": {
          "type": "string"
        },
        "Tax1099SBuyerPartOfRealEstateTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099SClosingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099StateId": {
          "type": "string"
        },
        "UnitWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VendorInvoiceMatchingPolicy": {
          "type": "string",
          "x-samplevalue": "ThreeWayMatch"
        },
        "WillProductReceivingCrossDockProducts": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "purchaseOrdersLineitemsPostRes",
      "x-primary-key": [
        "PurchaseOrderNumber",
        "LineNumber"
      ],
      "type": "object"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "vendorInvoicesLineitemsPostRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2NzU4NDM7MSw2ODcxOTQ4OTgxMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateId": {
          "type": "string"
        },
        "AdjustedUnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CWDeliveryRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWRemainingQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWUpdate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChangeQuantityManually": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ChargesOnPurchases": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CloseForReceipt": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Commodity": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DataAreaCompany": {
          "type": "string"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryState": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DimensionNumber": {
          "type": "string",
          "x-samplevalue": "000021"
        },
        "DiotOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "Discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012335"
        },
        "InventNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventorySiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "InventoryWarehouseId": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemName": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "C0002"
        },
        "ItemSalesTax": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard\nMeet the Arc™ Keyboard—with beautiful curves and a compact design, it’s at home wherever you are.  Two color options to match your personal style."
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "MainAccountDisplayValue": {
          "type": "string"
        },
        "MultilineDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NetAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "Ordering": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrigCountryRegionId": {
          "type": "string"
        },
        "OriginalDeliverRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PDSCalculationId": {
          "type": "string"
        },
        "PartyID": {
          "type": "string"
        },
        "Percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Port": {
          "type": "string"
        },
        "PriceUnit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ProcurementCategoryHierarchyName": {
          "type": "string",
          "x-samplevalue": "Procurement - Office Supplies"
        },
        "ProcurementCategoryName": {
          "type": "string",
          "x-samplevalue": "Computers"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "PurchLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PurchaseOrder": {
          "type": "string"
        },
        "ReceiveNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReleaseAllRetainedAmount": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "RemainAfter": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainAfterInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBefore": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBeforeInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainageAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "NJ"
        },
        "StateOfOrigin": {
          "type": "string"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099Box": {
          "type": "string"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TaxServiceCode": {
          "type": "string"
        },
        "TaxWithholdGroup": {
          "type": "string"
        },
        "TaxWithholdItemGroupName": {
          "type": "string"
        },
        "TotalRetainedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Unit": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceLineReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "WithholdingTaxGroup": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesLineitemsPostRes",
      "x-primary-key": [
        "InvoiceLineNumber"
      ],
      "type": "object"
    },
    "ledgerLinesPostResp": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#LedgerJournalLines/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk1ODM4MjE7MCwwJw==\""
        },
        "AccountDisplayValue": {
          "type": "string"
        },
        "AccountType": {
          "type": "string",
          "x-samplevalue": "Ledger"
        },
        "CashDiscount": {
          "type": "string"
        },
        "CashDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChineseVoucher": {
          "type": "string"
        },
        "ChineseVoucherType": {
          "type": "string"
        },
        "Company": {
          "type": "string",
          "x-samplevalue": "USMF"
        },
        "CreditAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DebitAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "DiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Document": {
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "ExchRateSecond": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Invoice": {
          "type": "string"
        },
        "IsWithholdingCalculationEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemSalesTaxGroup": {
          "type": "string"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00629"
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "OffsetAccountDisplayValue": {
          "type": "string"
        },
        "OffsetAccountType": {
          "type": "string",
          "x-samplevalue": "Ledger"
        },
        "OffsetCompany": {
          "type": "string",
          "x-samplevalue": "USMF"
        },
        "OffsetDefaultDimensionDisplayValue": {
          "type": "string"
        },
        "OffsetText": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentReference": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReportingCurrencyExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReportingCurrencyExchRateSecondary": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReverseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ReverseEntry": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SalesTaxCode": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "TransDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-26T12:00:00Z"
        },
        "Voucher": {
          "type": "string",
          "x-samplevalue": "GNJL000829"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "ledgerLinesPostResp",
      "x-primary-key": [
        "LineNumber"
      ],
      "type": "object"
    },
    "orderPatchRes": {
      "properties": {
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "orderPatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesOrderNumber"
      ],
      "x-vendor-objectname": "SalesOrderHeaders",
      "type": "object"
    },
    "vendorInvoicesLineitemsPostReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2NzU4NDM7MSw2ODcxOTQ4OTgxMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateId": {
          "type": "string"
        },
        "AdjustedUnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CWDeliveryRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWRemainingQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWUpdate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChangeQuantityManually": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ChargesOnPurchases": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CloseForReceipt": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Commodity": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DataAreaCompany": {
          "type": "string"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryState": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DimensionNumber": {
          "type": "string",
          "x-samplevalue": "000021"
        },
        "DiotOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "Discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventorySiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "InventoryWarehouseId": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemName": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "C0002",
          "x-required": true
        },
        "ItemSalesTax": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard\nMeet the Arc™ Keyboard—with beautiful curves and a compact design, it’s at home wherever you are.  Two color options to match your personal style."
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "MainAccountDisplayValue": {
          "type": "string"
        },
        "MultilineDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NetAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "Ordering": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrigCountryRegionId": {
          "type": "string"
        },
        "OriginalDeliverRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PDSCalculationId": {
          "type": "string"
        },
        "PartyID": {
          "type": "string"
        },
        "Percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Port": {
          "type": "string"
        },
        "PriceUnit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ProcurementCategoryHierarchyName": {
          "type": "string",
          "x-samplevalue": "Procurement - Office Supplies"
        },
        "ProcurementCategoryName": {
          "type": "string",
          "x-samplevalue": "Computers"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "PurchLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PurchaseOrder": {
          "type": "string"
        },
        "ReceiveNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReleaseAllRetainedAmount": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "RemainAfter": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainAfterInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBefore": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBeforeInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainageAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "NJ"
        },
        "StateOfOrigin": {
          "type": "string"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099Box": {
          "type": "string"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TaxServiceCode": {
          "type": "string"
        },
        "TaxWithholdGroup": {
          "type": "string"
        },
        "TaxWithholdItemGroupName": {
          "type": "string"
        },
        "TotalRetainedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Unit": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceLineReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "WithholdingTaxGroup": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesLineitemsPostReq",
      "type": "object",
      "required": [
        "ItemNumber"
      ]
    },
    "vendorMetadataRes": {
      "properties": {},
      "title": "vendorMetadataRes",
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "vendorInvoicesHeadersPatchReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEyMjEwNTUxMTcsNjg3MTk0OTAyOTI7MCwwOzAsMCc=\""
        },
        "AccessKey": {
          "type": "string"
        },
        "ApprovePostingWithMatchingDiscrepancies": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ApproverPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "BankAccount": {
          "type": "string"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CTeType": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "CarrierName": {
          "type": "string"
        },
        "CashDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D10"
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChargesGroup": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "CreditCorrection": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-12-09T12:00:00Z"
        },
        "DeliveryFreightChargeTerms": {
          "type": "string",
          "x-samplevalue": "Prepaid"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Contoso Entertainment System USA"
        },
        "DeliveryPackingName": {
          "type": "string"
        },
        "DeliveryStateRegistered": {
          "type": "string"
        },
        "DeliveryTransportBrand": {
          "type": "string"
        },
        "DeliveryVehicleNumber": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "DocumentNumber": {
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-08T12:00:00Z"
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ErrorInvalidDistribution": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "FiscalDocumentModel": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentSeries": {
          "type": "string"
        },
        "FiscalDocumentSpecie": {
          "type": "string",
          "x-samplevalue": "NFF"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalEstablishmentId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedRate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FreightedBy": {
          "type": "string",
          "x-samplevalue": "Carrier"
        },
        "GSTImportDeclarationNumber": {
          "type": "string"
        },
        "GSTInvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012399"
        },
        "IgnoreCalculatedSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "InvoiceDescription": {
          "type": "string"
        },
        "InvoiceGroup": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "InvoicePaymentReleaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceRoundOff": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceSeries": {
          "type": "string"
        },
        "IsApproved": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsBatch": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsElectronicInvoiceForService": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOnHold": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPricesIncludeSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Log": {
          "type": "string"
        },
        "MethodOfPayment": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "PaymentGroupCode": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "PurchReceiptDate_W": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PurchaseOrderNumber": {
          "type": "string"
        },
        "Recalculation": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ReleaseDateComment": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "SalesTaxRounding": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ServiceCodeOnDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SettleVoucher": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Site": {
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TermsOfPayment": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TotalDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Triangulation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UUID": {
          "type": "string"
        },
        "VarianceApprovedDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "VariancePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "VendorInvoiceType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "VendorName": {
          "type": "string",
          "x-samplevalue": "Acme Office Supplies"
        },
        "VendorPaymentFinancialInterestCode": {
          "type": "string"
        },
        "VendorPaymentFineCode": {
          "type": "string"
        },
        "VendorRequestedWorkerEmail": {
          "type": "string",
          "x-samplevalue": "julia@contoso.com",
          "x-sub-format": "email"
        },
        "Warehouse": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesHeadersPatchReq",
      "type": "object"
    },
    "purchaseOrderLineItemsGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDIyNTY1NDI0MzAyOzAsMDswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "BarCodeSetupId": {
          "type": "string"
        },
        "Barcode": {
          "type": "string"
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CatchWeightUnitSymbol": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomerReference": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "DIOTOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedAssetGroupId": {
          "type": "string"
        },
        "FixedAssetNumber": {
          "type": "string"
        },
        "FixedAssetTransactionType": {
          "type": "string",
          "x-samplevalue": "Acquisition"
        },
        "FixedAssetValueModelId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA"
        },
        "GSTHSTTaxType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsNewFixedAsset": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPartialDeliveryPrevented": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsProjectPayWhenPaid": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099GTradeOrBusinessIncome": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTax1099SPropertyOrServices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "S0014"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5269
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Hardware: App Server"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OriginCountryRegionId": {
          "type": "string"
        },
        "OriginStateId": {
          "type": "string"
        },
        "ProcurementProductCategoryName": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProjectActivityNumber": {
          "type": "string"
        },
        "ProjectCategoryId": {
          "type": "string",
          "x-samplevalue": "ProjItem"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "ProjectLinePropertyId": {
          "type": "string",
          "x-samplevalue": "Billable"
        },
        "ProjectSalesCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ProjectSalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6199
        },
        "ProjectSalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ProjectTaxGroupCode": {
          "type": "string"
        },
        "ProjectTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "HW"
        },
        "ProjectWorkerPersonnelNumber": {
          "type": "string"
        },
        "PurchaseOrderLineCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchasePrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5269
        },
        "PurchasePriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "PurchaseUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ReceivingSiteId": {
          "type": "string",
          "x-samplevalue": "MainOffice"
        },
        "ReceivingWarehouseId": {
          "type": "string",
          "x-samplevalue": "MainOffice"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "RetailProductVariantNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "HW"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099BoxId": {
          "type": "string"
        },
        "Tax1099GStateTaxWithheldAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GTaxYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099GVendorStateId": {
          "type": "string"
        },
        "Tax1099GVendorStateTaxId": {
          "type": "string"
        },
        "Tax1099SAddressOrLegalDescription": {
          "type": "string"
        },
        "Tax1099SBuyerPartOfRealEstateTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099SClosingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099StateId": {
          "type": "string"
        },
        "Tax1099Type": {
          "type": "string",
          "x-samplevalue": "F1099MISC"
        },
        "UnitWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VendorInvoiceMatchingPolicy": {
          "type": "string",
          "x-samplevalue": "ThreeWayMatch"
        },
        "WillProductReceivingCrossDockProducts": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrderLineItemsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "PurchaseOrderNumber",
        "LineNumber"
      ]
    },
    "customersPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#Customers/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0OTA1NDk7MCwwOzAsMDswLDA7MSw2ODcxOTUxMzUxNjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AccountStatement": {
          "type": "string",
          "x-samplevalue": "Always"
        },
        "AddressBooks": {
          "type": "string"
        },
        "AddressBrazilianCNPJOrCPF": {
          "type": "string"
        },
        "AddressBrazilianIE": {
          "type": "string"
        },
        "AddressCity": {
          "type": "string"
        },
        "AddressCountryRegionISOCode": {
          "type": "string"
        },
        "AddressCountryRegionId": {
          "type": "string"
        },
        "AddressCounty": {
          "type": "string"
        },
        "AddressDescription": {
          "type": "string"
        },
        "AddressDistrictName": {
          "type": "string"
        },
        "AddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressLocationId": {
          "type": "string"
        },
        "AddressLocationRoles": {
          "type": "string"
        },
        "AddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressState": {
          "type": "string"
        },
        "AddressStreet": {
          "type": "string"
        },
        "AddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "AddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "AddressZipCode": {
          "type": "string"
        },
        "BirthCountyCode": {
          "type": "string"
        },
        "BirthPlace": {
          "type": "string"
        },
        "BrazilianCCM": {
          "type": "string"
        },
        "BrazilianCNAE": {
          "type": "string"
        },
        "BrazilianCNPJOrCPF": {
          "type": "string"
        },
        "BrazilianIE": {
          "type": "string"
        },
        "BrazilianINSSCEI": {
          "type": "string"
        },
        "BrazilianNIT": {
          "type": "string"
        },
        "CURPNumber": {
          "type": "string"
        },
        "CalculateWithholdingTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CentralBankPurposeCode": {
          "type": "string"
        },
        "CentralBankPurposeNotes": {
          "type": "string"
        },
        "ChargesGroupId": {
          "type": "string"
        },
        "CollectionsContactPersonId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesGroupId": {
          "type": "string"
        },
        "CompanyChain": {
          "type": "string"
        },
        "CompanyType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "ConsolidationDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditCardAddressVerification": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditCardAddressVerificationIsAuthorizationVoidedOnFailure": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditCardAddressVerificationLevel": {
          "type": "string",
          "x-samplevalue": "Accept"
        },
        "CreditCardCVC": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CreditLimitIsMandatory": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditRating": {
          "type": "string"
        },
        "CustomerAccount": {
          "type": "string",
          "x-samplevalue": "23467"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "425"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerRebateGroupId": {
          "type": "string"
        },
        "CustomerTMAGroupId": {
          "type": "string"
        },
        "CustomerWithholdingContributionType": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "DefaultInventoryStatusId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCounty": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressState": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "DeliveryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryFreightZone": {
          "type": "string"
        },
        "DeliveryMode": {
          "type": "string"
        },
        "DeliveryReason": {
          "type": "string"
        },
        "DeliveryTerms": {
          "type": "string"
        },
        "DestinationCode": {
          "type": "string"
        },
        "DiscountPriceGroupId": {
          "type": "string"
        },
        "ElectronicInvoiceEAN": {
          "type": "string"
        },
        "ElectronicLocationId": {
          "type": "string"
        },
        "EmployeeResponsibleNumber": {
          "type": "string"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FederalAgencyLocationCode": {
          "type": "string"
        },
        "FederalComments": {
          "type": "string"
        },
        "FederalIndicator": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "FiscalCode": {
          "type": "string"
        },
        "ForeignCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ForeignerId": {
          "type": "string"
        },
        "FrenchSiret": {
          "type": "string"
        },
        "FulfillmentErrorTolerance": {
          "type": "string",
          "x-samplevalue": "UseCompanyPolicy"
        },
        "FullPrimaryAddress": {
          "type": "string"
        },
        "GiroType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeAccountStatement": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeCollectionletter": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeFreeTextInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeInterestNote": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeProjInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "HasSuframaDiscountPISandCOFINS": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IRS1099CIndicator": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IdentificationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string"
        },
        "InvoiceAddress": {
          "type": "string",
          "x-samplevalue": "InvoiceAccount"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionISOCode": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressDescription": {
          "type": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLocationId": {
          "type": "string"
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressState": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "IsElectronicInvoice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromCollectionFeeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromInterestChargeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExpressBillOfLadingAccepted": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFreightAccrued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFuelSurchargeApplied": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsICMSContributor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInSuframaRegion": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIncomingFiscalDocumentGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOrderNumberReferenceUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPurchRequestUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDCaseTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDItemTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDPalletTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesTaxIncludedInPrices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTransactionPostedAsShipment": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsWithholdingTaxCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemCustomerGroupId": {
          "type": "string"
        },
        "KnownAs": {
          "type": "string"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCode": {
          "type": "string"
        },
        "LineOfBusinessId": {
          "type": "string"
        },
        "MultiLineDiscountCode": {
          "type": "string"
        },
        "NAFCode": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "NameAlias": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "NationalRegistryNumber": {
          "type": "string"
        },
        "NatureOfAssessee": {
          "type": "string",
          "x-samplevalue": "Company"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "OnHoldStatus": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "OrderEntryDeadline": {
          "type": "string"
        },
        "OrganizationABCCode": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrganizationNumber": {
          "type": "string"
        },
        "OrganizationNumberOfEmployees": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrganizationPhoneticName": {
          "type": "string"
        },
        "PANNumber": {
          "type": "string"
        },
        "PANReferenceNumber": {
          "type": "string"
        },
        "PackingDutyLicense": {
          "type": "string"
        },
        "PackingMaterialFeeLicenseNumber": {
          "type": "string"
        },
        "PanStatus": {
          "type": "string",
          "x-samplevalue": "NotAvailable"
        },
        "PartyCountry": {
          "type": "string"
        },
        "PartyNumber": {
          "type": "string",
          "x-samplevalue": "000002968"
        },
        "PartyState": {
          "type": "string"
        },
        "PartyType": {
          "type": "string",
          "x-samplevalue": "Organization"
        },
        "PaymentBankAccount": {
          "type": "string"
        },
        "PaymentCashDiscount": {
          "type": "string"
        },
        "PaymentDay": {
          "type": "string"
        },
        "PaymentFactoringAccount": {
          "type": "string"
        },
        "PaymentIdType": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsBaseDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PaymentUseCashDiscount": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "PersonAnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonAnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonAnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonChildrenNames": {
          "type": "string"
        },
        "PersonGender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "PersonHobbies": {
          "type": "string"
        },
        "PersonInitials": {
          "type": "string"
        },
        "PersonMaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonPhoneticFirstName": {
          "type": "string"
        },
        "PersonPhoneticLastName": {
          "type": "string"
        },
        "PersonPhoneticMiddleName": {
          "type": "string"
        },
        "PersonProfessionalSuffix": {
          "type": "string"
        },
        "PersonProfessionalTitle": {
          "type": "string"
        },
        "PreferentialCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmail": {
          "type": "string"
        },
        "PrimaryContactEmailDescription": {
          "type": "string"
        },
        "PrimaryContactEmailIsIM": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmailPurpose": {
          "type": "string"
        },
        "PrimaryContactFacebook": {
          "type": "string"
        },
        "PrimaryContactFacebookDescription": {
          "type": "string"
        },
        "PrimaryContactFacebookPurpose": {
          "type": "string"
        },
        "PrimaryContactFax": {
          "type": "string"
        },
        "PrimaryContactFaxDescription": {
          "type": "string"
        },
        "PrimaryContactFaxExtension": {
          "type": "string"
        },
        "PrimaryContactFaxPurpose": {
          "type": "string"
        },
        "PrimaryContactLinkedIn": {
          "type": "string"
        },
        "PrimaryContactLinkedInDescription": {
          "type": "string"
        },
        "PrimaryContactLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryContactPhone": {
          "type": "string"
        },
        "PrimaryContactPhoneDescription": {
          "type": "string"
        },
        "PrimaryContactPhoneExtension": {
          "type": "string"
        },
        "PrimaryContactPhoneIsMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactPhonePurpose": {
          "type": "string"
        },
        "PrimaryContactTelex": {
          "type": "string"
        },
        "PrimaryContactTelexDescription": {
          "type": "string"
        },
        "PrimaryContactTelexPurpose": {
          "type": "string"
        },
        "PrimaryContactTwitter": {
          "type": "string"
        },
        "PrimaryContactTwitterDescription": {
          "type": "string"
        },
        "PrimaryContactTwitterPurpose": {
          "type": "string"
        },
        "PrimaryContactURL": {
          "type": "string"
        },
        "PrimaryContactURLDescription": {
          "type": "string"
        },
        "PrimaryContactURLPurpose": {
          "type": "string"
        },
        "RFCNumber": {
          "type": "string"
        },
        "ReceiptCalendar": {
          "type": "string"
        },
        "ReceiptEmail": {
          "type": "string"
        },
        "ReceiptOption": {
          "type": "string",
          "x-samplevalue": "RetailEx3"
        },
        "ReliefGroupId": {
          "type": "string"
        },
        "ResidenceForeignCountryRegionId": {
          "type": "string"
        },
        "SalesAccountNumber": {
          "type": "string"
        },
        "SalesCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "SalesDistrict": {
          "type": "string"
        },
        "SalesMemo": {
          "type": "string"
        },
        "SalesOrderPoolId": {
          "type": "string"
        },
        "SalesReturnTaxGroup": {
          "type": "string"
        },
        "SalesSegmentId": {
          "type": "string"
        },
        "SalesSubsegmentId": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "SiteId": {
          "type": "string"
        },
        "StateInscription": {
          "type": "string"
        },
        "StatisticsGroupId": {
          "type": "string"
        },
        "SuframaNumber": {
          "type": "string"
        },
        "SupplementaryItemGroupId": {
          "type": "string"
        },
        "TCSGroup": {
          "type": "string"
        },
        "TDSGroup": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TaxRegistrationId": {
          "type": "string"
        },
        "TotalDiscountCode": {
          "type": "string"
        },
        "TransactionPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "VendorAccount": {
          "type": "string"
        },
        "WarehouseFulfillmentRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WarehouseFulfillmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "WarehouseId": {
          "type": "string"
        },
        "WarehouseIsASNGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WarehouseIsEntireShipmentFilled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "WriteoffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "customersPostRes",
      "x-primary-key": [
        "CustomerAccount"
      ],
      "type": "object"
    },
    "vendorInvoicesHeadersPatchRes": {
      "properties": {
        " dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012182"
        }
      },
      "title": "vendorInvoicesHeadersPatchRes",
      "x-primary-key": [
        "HeaderReference"
      ],
      "type": "object"
    },
    "salesOrderConfirmationsGetById": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0NzgzODIn\""
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D30"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-07-24T12:00:00Z"
        },
        "ConfirmationDocumentReference": {
          "type": "string",
          "x-samplevalue": "000860-1"
        },
        "ConfirmationNumber": {
          "type": "string",
          "x-samplevalue": "CCF-00000064"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersOrderReference": {
          "type": "string"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "002--"
        },
        "DeliveryAddressBuildingCompliment": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Los Angeles"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LOS ANGELE"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Forest Wholesales"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001209"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Forest Wholesales"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "123 White Road"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "90004"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "FixedSecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "123 White Road\nLos Angeles, CA 90004 \nUSA"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-003"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInventorySiteMandatory": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "OrderTakerPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-003"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net45"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000860"
        },
        "SubTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalConfirmedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalCostAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalLineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalNetVolume": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalNetWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "TotalRoundOffAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrderConfirmationsGetById",
      "x-primary-key": [
        "SalesOrderNumber"
      ],
      "type": "object"
    },
    "contactPostReq": {
      "properties": {
        "AddressBookNames": {
          "type": "string"
        },
        "AlternateComplimentaryClosingPhrase": {
          "type": "string"
        },
        "AlternateSalutationPhrase": {
          "type": "string"
        },
        "AnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "AnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AssistantName": {
          "type": "string"
        },
        "AssistantPhoneNumber": {
          "type": "string"
        },
        "AssociatedPartyNumber": {
          "type": "string",
          "x-samplevalue": "000000864"
        },
        "AvailableFromTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AvailableToTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BillingInformation": {
          "type": "string"
        },
        "BirthDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BirthMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BirthYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChildrenNames": {
          "type": "string"
        },
        "ContactActivitySensitivityLevel": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "ContactInformationLanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "ContactPersonId": {
          "type": "string",
          "x-samplevalue": "000001"
        },
        "ContactPersonName": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "ContactPersonPartyNumber": {
          "type": "string",
          "x-samplevalue": "000001572"
        },
        "ContactPersonPartyType": {
          "type": "string",
          "x-samplevalue": "Person"
        },
        "ContactPersonResponsiblePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000034"
        },
        "DecisionMakingRoleCode": {
          "type": "string"
        },
        "DisplayNameSequencePatternName": {
          "type": "string",
          "x-samplevalue": "FirstMiddleLast"
        },
        "ElectronicLocationId": {
          "type": "string",
          "x-samplevalue": "000002514"
        },
        "EmploymentComputerNetworkName": {
          "type": "string"
        },
        "EmploymentDepartment": {
          "type": "string"
        },
        "EmploymentJobFunctionName": {
          "type": "string"
        },
        "EmploymentJobTitle": {
          "type": "string"
        },
        "EmploymentOfficeLocation": {
          "type": "string"
        },
        "EmploymentProfession": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Tom"
        },
        "FormattedPrimaryAddress": {
          "type": "string",
          "x-samplevalue": "Dunover Building\nSuite 110\nFargo, ND 58104 \nUSA"
        },
        "Gender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "GovernmentIdentificationNumber": {
          "type": "string"
        },
        "HasRequestedInternetAccess": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Hobbies": {
          "type": "string"
        },
        "IdentityCardNumber": {
          "type": "string"
        },
        "Initials": {
          "type": "string"
        },
        "IsContactPersonExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDefaultContactPerson": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsImported": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInactive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryEmailAddressIMEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryPhoneNumberMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsReceivingDirectMail": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsVIP": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsVendorPortalAccessAllowed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "KnownAsName": {
          "type": "string"
        },
        "LastEditDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-06-06T18:38:19Z"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Ersfeld"
        },
        "LoyaltyLevelPhrase": {
          "type": "string"
        },
        "ManagerContactPersonId": {
          "type": "string"
        },
        "MaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "MicrosoftOutlookCategories": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "MileageDistance": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "OrganizationIdentificationNumber": {
          "type": "string"
        },
        "PersonalCharacterTypeCode": {
          "type": "string"
        },
        "PhoneticFirstName": {
          "type": "string"
        },
        "PhoneticLastName": {
          "type": "string"
        },
        "PhoneticMiddleName": {
          "type": "string"
        },
        "PrimaryAddressBuildingCompliment": {
          "type": "string"
        },
        "PrimaryAddressCity": {
          "type": "string",
          "x-samplevalue": "Fargo"
        },
        "PrimaryAddressCityInKana": {
          "type": "string"
        },
        "PrimaryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "PrimaryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "PrimaryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "CASS"
        },
        "PrimaryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "PrimaryAddressDistrictName": {
          "type": "string"
        },
        "PrimaryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000002513"
        },
        "PrimaryAddressLocationRoles": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressPostBox": {
          "type": "string"
        },
        "PrimaryAddressStateId": {
          "type": "string",
          "x-samplevalue": "ND"
        },
        "PrimaryAddressStreet": {
          "type": "string",
          "x-samplevalue": "Dunover Building\nSuite 110"
        },
        "PrimaryAddressStreetInKana": {
          "type": "string"
        },
        "PrimaryAddressStreetNumber": {
          "type": "string"
        },
        "PrimaryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-03-28T19:29:32Z"
        },
        "PrimaryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "PrimaryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "58104"
        },
        "PrimaryComplimentaryClosingPhrase": {
          "type": "string"
        },
        "PrimaryEmailAddress": {
          "type": "string",
          "x-samplevalue": "Tom@SparrowRetail.com",
          "x-sub-format": "email"
        },
        "PrimaryEmailAddressDescription": {
          "type": "string"
        },
        "PrimaryEmailAddressPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryFacebook": {
          "type": "string"
        },
        "PrimaryFacebookDescription": {
          "type": "string"
        },
        "PrimaryFacebookPurpose": {
          "type": "string"
        },
        "PrimaryFaxNumber": {
          "type": "string"
        },
        "PrimaryFaxNumberDescription": {
          "type": "string"
        },
        "PrimaryFaxNumberExtension": {
          "type": "string"
        },
        "PrimaryFaxNumberPurpose": {
          "type": "string"
        },
        "PrimaryLinkedIn": {
          "type": "string"
        },
        "PrimaryLinkedInDescription": {
          "type": "string"
        },
        "PrimaryLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryPhoneNumber": {
          "type": "string",
          "x-samplevalue": "701-555-1212"
        },
        "PrimaryPhoneNumberDescription": {
          "type": "string"
        },
        "PrimaryPhoneNumberExtension": {
          "type": "string"
        },
        "PrimaryPhoneNumberPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimarySalutationPhrase": {
          "type": "string"
        },
        "PrimaryTelex": {
          "type": "string"
        },
        "PrimaryTelexDescription": {
          "type": "string"
        },
        "PrimaryTelexPurpose": {
          "type": "string"
        },
        "PrimaryTwitter": {
          "type": "string"
        },
        "PrimaryTwitterDescription": {
          "type": "string"
        },
        "PrimaryTwitterPurpose": {
          "type": "string"
        },
        "PrimaryURL": {
          "type": "string"
        },
        "PrimaryURLDescription": {
          "type": "string"
        },
        "PrimaryURLPurpose": {
          "type": "string"
        },
        "ProfessionalSuffix": {
          "type": "string"
        },
        "ProfessionalTitle": {
          "type": "string"
        },
        "SearchName": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "SpouseName": {
          "type": "string"
        },
        "UserRole": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "AssociatedPartyNumber",
        "FirstName"
      ],
      "title": "contactPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "ContactPersonId"
      ],
      "x-vendor-objectname": "ContactPersons",
      "type": "object"
    },
    "vendorInvoicesLineitemsGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2NzU4NDM7MSw2ODcxOTQ4OTgxMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateId": {
          "type": "string"
        },
        "AdjustedUnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CWDeliveryRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWRemainingQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWUpdate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChangeQuantityManually": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ChargesOnPurchases": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CloseForReceipt": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Commodity": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DataAreaCompany": {
          "type": "string"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryState": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DimensionNumber": {
          "type": "string",
          "x-samplevalue": "000021"
        },
        "DiotOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "Discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012335"
        },
        "InventNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventorySiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "InventoryWarehouseId": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemName": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "C0002"
        },
        "ItemSalesTax": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard\nMeet the Arc™ Keyboard—with beautiful curves and a compact design, it’s at home wherever you are.  Two color options to match your personal style."
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "MainAccountDisplayValue": {
          "type": "string"
        },
        "MultilineDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NetAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "Ordering": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrigCountryRegionId": {
          "type": "string"
        },
        "OriginalDeliverRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PDSCalculationId": {
          "type": "string"
        },
        "PartyID": {
          "type": "string"
        },
        "Percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Port": {
          "type": "string"
        },
        "PriceUnit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ProcurementCategoryHierarchyName": {
          "type": "string",
          "x-samplevalue": "Procurement - Office Supplies"
        },
        "ProcurementCategoryName": {
          "type": "string",
          "x-samplevalue": "Computers"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "PurchLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PurchaseOrder": {
          "type": "string"
        },
        "ReceiveNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReleaseAllRetainedAmount": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "RemainAfter": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainAfterInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBefore": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBeforeInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainageAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "NJ"
        },
        "StateOfOrigin": {
          "type": "string"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099Box": {
          "type": "string"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TaxServiceCode": {
          "type": "string"
        },
        "TaxWithholdGroup": {
          "type": "string"
        },
        "TaxWithholdItemGroupName": {
          "type": "string"
        },
        "TotalRetainedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Unit": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceLineReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "WithholdingTaxGroup": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesLineitemsGetByIdRes",
      "x-primary-key": [
        "InvoiceLineNumber"
      ],
      "type": "object"
    },
    "purchaseOrdersPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderHeadersV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjE2ODA7MCwwOzAsMjI1NjU0MjQzMDI7MCwwOzAsMCc=\""
        },
        "AccountingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AttentionInformation": {
          "type": "string"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BuyerGroupId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChargeVendorGroupId": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmingPurchaseOrderCode": {
          "type": "string"
        },
        "ConfirmingPurchaseOrderCodeLanguageId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DefaultReceivingSiteId": {
          "type": "string"
        },
        "DefaultReceivingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryModeId": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "type": "string",
          "x-samplevalue": "Confirmed"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExpectedCrossDockingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreAvailableSalesDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "GSTSelfBilledInvoiceApprovalNumber": {
          "type": "string"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressState": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "InvoiceVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "IsChangeManagementActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveredDirectly": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeVendor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountVendorGroupCode": {
          "type": "string"
        },
        "MultilineDiscountVendorGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "OrdererPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000355"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "PriceVendorGroupCode": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "PurchaseOrderHeaderCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderName": {
          "type": "string",
          "x-samplevalue": "Hardware Components"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchaseOrderPoolId": {
          "type": "string"
        },
        "PurchaseOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "ReasonCode": {
          "type": "string"
        },
        "ReasonComment": {
          "type": "string"
        },
        "ReplenishmentServiceCategoryId": {
          "type": "string"
        },
        "ReplenishmentWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountVendorGroupCode": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "VendorInvoiceDeclarationId": {
          "type": "string"
        },
        "VendorOrderReference": {
          "type": "string"
        },
        "VendorPaymentMethodName": {
          "type": "string"
        },
        "VendorPaymentMethodSpecificationName": {
          "type": "string"
        },
        "VendorPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "VendorTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ZakatContractNumber": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrdersPostRes",
      "x-primary-key": [
        "PurchaseOrderNumber"
      ],
      "type": "object"
    },
    "quoteLinesPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#SalesQuotationLines/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0ODU4ODk7MCwwOzEsNjg3MTk0ODQ2MDQn\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "012842"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Auto accessories"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "RequestedInventoryStatusId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "RequestedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Auto accessories"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000036"
        },
        "SalesQuotationPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "SalesTaxItemGroupCode": {
          "type": "string"
        },
        "SalesUnitSymbol": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string"
        },
        "ShippingWarehouseId": {
          "type": "string"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "quoteLinesPostRes",
      "x-primary-key": [
        "InventoryLotId"
      ],
      "type": "object"
    },
    "quoteLinePostReq": {
      "description": "For SalesQuotationLines, Item or category must be specified. which mean either SalesProductCategoryName or  (ItemNumber and ShippingSiteId) are required",
      "properties": {
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Alamo"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LINCOLN"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Sparow Retail"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001248"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Sparow Retail"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "199 Purple Road"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "89001"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "199 Purple Road\nAlamo, NV 89001 \nUSA"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "011911"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0011"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49950
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Laser Projector"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "RequestedInventoryStatusId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-20T12:00:00Z"
        },
        "RequestedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 999
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000007"
        },
        "SalesQuotationPromisingMethod": {
          "type": "string",
          "x-samplevalue": "ATPPlusIssueMargin"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "11"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "SalesQuotationNumber",
        "ItemNumber",
        "ShippingSiteId"
      ],
      "title": "quoteLinePostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "InventoryLotId"
      ],
      "x-vendor-objectname": "SalesQuotationLines",
      "type": "object"
    },
    "purchaseOrdersPostReq": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderHeadersV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjE2ODA7MCwwOzAsMjI1NjU0MjQzMDI7MCwwOzAsMCc=\""
        },
        "AccountingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AttentionInformation": {
          "type": "string"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BuyerGroupId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChargeVendorGroupId": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmingPurchaseOrderCode": {
          "type": "string"
        },
        "ConfirmingPurchaseOrderCodeLanguageId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DefaultReceivingSiteId": {
          "type": "string"
        },
        "DefaultReceivingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryModeId": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "type": "string",
          "x-samplevalue": "Confirmed"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExpectedCrossDockingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreAvailableSalesDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "GSTSelfBilledInvoiceApprovalNumber": {
          "type": "string"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressState": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "InvoiceVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "IsChangeManagementActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveredDirectly": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeVendor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountVendorGroupCode": {
          "type": "string"
        },
        "MultilineDiscountVendorGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014",
          "x-required": true
        },
        "OrdererPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000355"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "PriceVendorGroupCode": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "PurchaseOrderHeaderCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderName": {
          "type": "string",
          "x-samplevalue": "Hardware Components"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchaseOrderPoolId": {
          "type": "string"
        },
        "PurchaseOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "ReasonCode": {
          "type": "string"
        },
        "ReasonComment": {
          "type": "string"
        },
        "ReplenishmentServiceCategoryId": {
          "type": "string"
        },
        "ReplenishmentWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountVendorGroupCode": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "VendorInvoiceDeclarationId": {
          "type": "string"
        },
        "VendorOrderReference": {
          "type": "string"
        },
        "VendorPaymentMethodName": {
          "type": "string"
        },
        "VendorPaymentMethodSpecificationName": {
          "type": "string"
        },
        "VendorPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "VendorTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ZakatContractNumber": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrdersPostReq",
      "type": "object",
      "required": [
        "OrderVendorAccountNumber"
      ]
    },
    "ledgerLinesGetAllRespObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NjgyNjswLDAn\""
        },
        "AccountDisplayValue": {
          "type": "string",
          "x-samplevalue": "150100-069--"
        },
        "AccountType": {
          "type": "string",
          "x-samplevalue": "Ledger"
        },
        "CashDiscount": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CashDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ChineseVoucher": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ChineseVoucherType": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Company": {
          "type": "string",
          "x-samplevalue": "uspi"
        },
        "CreditAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DebitAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3090830.29
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "DiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Document": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ExchRateSecond": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Invoice": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsWithholdingCalculationEnabled": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ItemSalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "MAT"
        },
        "ItemWithholdingTaxGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OffsetAccountDisplayValue": {
          "type": "string",
          "x-samplevalue": "600520-069--"
        },
        "OffsetAccountType": {
          "type": "string",
          "x-samplevalue": "Ledger"
        },
        "OffsetCompany": {
          "type": "string",
          "x-samplevalue": "uspi"
        },
        "OffsetDefaultDimensionDisplayValue": {
          "type": "string"
        },
        "OffsetText": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentReference": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PostingProfile": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReportingCurrencyExchRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReportingCurrencyExchRateSecondary": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReverseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReverseEntry": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SalesTaxCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "Text": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TransDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-12-26T12:00:00Z"
        },
        "Voucher": {
          "type": "string",
          "x-samplevalue": "GJN-000000001"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "uspi"
        }
      },
      "title": "ledgerLinesGetAllResp",
      "type": "object",
      "x-primary-key": [
        "LineNumber"
      ]
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "salesOrderConfirmationLineItemsGetById": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDc3NSc=\""
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "ConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-11-14T12:00:00Z"
        },
        "ConfirmationDocumentReference": {
          "type": "string",
          "x-samplevalue": "000691-1"
        },
        "ConfirmationNumber": {
          "type": "string",
          "x-samplevalue": "CCF-000024"
        },
        "ConfirmedCatchWeightQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ConfirmedInventoryQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        },
        "ConfirmedInventoryStatusId": {
          "type": "string"
        },
        "ConfirmedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-11-20T12:00:00Z"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryTermsCode": {
          "type": "string"
        },
        "DiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-023"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "T0002"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 67500
        },
        "LineAmountSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Projector Television"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-023"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "SalesOrderLineInventoryLotId": {
          "type": "string",
          "x-samplevalue": "006368"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000691"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3750
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Television"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "PA"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesTaxPrintCode": {
          "type": "string"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "2"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "21"
        },
        "TotalLineSalesTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4050
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrderConfirmationLineItemsGetById",
      "x-primary-key": [
        "ItemNumber"
      ],
      "type": "object"
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "contactPatchRes": {
      "properties": {
        "ContactPersonId": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "contactPatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "ContactPersonId"
      ],
      "x-vendor-objectname": "ContactPersons",
      "type": "object"
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "vendorInvoicesHeadersGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEyMjEwNTUxMTcsNjg3MTk0OTAyOTI7MCwwOzAsMCc=\""
        },
        "AccessKey": {
          "type": "string"
        },
        "ApprovePostingWithMatchingDiscrepancies": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ApproverPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "BankAccount": {
          "type": "string"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CTeType": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "CarrierName": {
          "type": "string"
        },
        "CashDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D10"
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChargesGroup": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "CreditCorrection": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-12-09T12:00:00Z"
        },
        "DeliveryFreightChargeTerms": {
          "type": "string",
          "x-samplevalue": "Prepaid"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Contoso Entertainment System USA"
        },
        "DeliveryPackingName": {
          "type": "string"
        },
        "DeliveryStateRegistered": {
          "type": "string"
        },
        "DeliveryTransportBrand": {
          "type": "string"
        },
        "DeliveryVehicleNumber": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "DocumentNumber": {
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-08T12:00:00Z"
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ErrorInvalidDistribution": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "FiscalDocumentModel": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentSeries": {
          "type": "string"
        },
        "FiscalDocumentSpecie": {
          "type": "string",
          "x-samplevalue": "NFF"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalEstablishmentId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedRate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FreightedBy": {
          "type": "string",
          "x-samplevalue": "Carrier"
        },
        "GSTImportDeclarationNumber": {
          "type": "string"
        },
        "GSTInvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012399"
        },
        "IgnoreCalculatedSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "InvoiceDescription": {
          "type": "string"
        },
        "InvoiceGroup": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "InvoicePaymentReleaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceRoundOff": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceSeries": {
          "type": "string"
        },
        "IsApproved": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsBatch": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsElectronicInvoiceForService": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOnHold": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPricesIncludeSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Log": {
          "type": "string"
        },
        "MethodOfPayment": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "PaymentGroupCode": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "PurchReceiptDate_W": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PurchaseOrderNumber": {
          "type": "string"
        },
        "Recalculation": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ReleaseDateComment": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "SalesTaxRounding": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ServiceCodeOnDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SettleVoucher": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Site": {
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TermsOfPayment": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TotalDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Triangulation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UUID": {
          "type": "string"
        },
        "VarianceApprovedDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "VariancePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "VendorInvoiceType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "VendorName": {
          "type": "string",
          "x-samplevalue": "Acme Office Supplies"
        },
        "VendorPaymentFinancialInterestCode": {
          "type": "string"
        },
        "VendorPaymentFineCode": {
          "type": "string"
        },
        "VendorRequestedWorkerEmail": {
          "type": "string",
          "x-samplevalue": "julia@contoso.com",
          "x-sub-format": "email"
        },
        "Warehouse": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesHeadersGetByIdRes",
      "x-primary-key": [
        "HeaderReference"
      ],
      "type": "object"
    },
    "customerGroupPostReq": {
      "properties": {
        "ClearingPeriodPaymentTermName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "CustomerAccountNumberSequence": {
          "type": "string"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Wholesales customers"
        },
        "IsSalesTaxIncludedInPrice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PaymentTermId": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TaxGroupId": {
          "type": "string"
        },
        "WriteOffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "CustomerGroupId"
      ],
      "title": "customerGroupPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerGroupId"
      ],
      "x-vendor-objectname": "CustomerGroups",
      "type": "object"
    },
    "quoteHeadersPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#SalesQuotationHeaders/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0ODQzNTI7MCwwJw==\""
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CustomersReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "GeneratedSalesOrderNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCountyId": {
          "type": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "23467"
        },
        "IsCustomerFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesQuotationTemplateActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OpportunityId": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string"
        },
        "PriceCustomerGroupCode": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "QuotationDocumentConclusionName": {
          "type": "string"
        },
        "QuotationDocumentIntroductionName": {
          "type": "string"
        },
        "QuotationDocumentTitleName": {
          "type": "string"
        },
        "QuotationFollowUpActivity": {
          "type": "string"
        },
        "QuotationReasonCode": {
          "type": "string"
        },
        "QuotationResponsiblePersonnelNumber": {
          "type": "string"
        },
        "QuotationTakerPersonnelNumber": {
          "type": "string"
        },
        "QuotationTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReceiptDateRequested": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "23467"
        },
        "SalesOrderOriginCode": {
          "type": "string"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesQuotationConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "SalesQuotationExpiryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "SalesQuotationFollowUpDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "SalesQuotationName": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000036"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesQuotationTemplateGroupId": {
          "type": "string"
        },
        "SalesQuotationTemplateName": {
          "type": "string"
        },
        "SalesQuotationTypeId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceAgreementId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TeleMarketingCallListId": {
          "type": "string"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "URL": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "quoteHeadersPostRes",
      "x-primary-key": [
        "SalesQuotationNumber"
      ],
      "type": "object"
    },
    "salesInvoicesHeadersGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NTQ2NzswLDA7MCwyMjU2NTQyNzUyOCc=\""
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomersOrderReference": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "30"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "EXW"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Bluefield"
        },
        "InvoiceAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "InvoiceAddressState": {
          "type": "string",
          "x-samplevalue": "WV"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "456 Green Road Fairfield"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "24701"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-025"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-07-15T12:00:00Z"
        },
        "InvoiceHeaderTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceNumber": {
          "type": "string",
          "x-samplevalue": "CIV-000200"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000201"
        },
        "SalesOrderOriginCode": {
          "type": "string"
        },
        "SalesOrderResponsiblePersonnelNumber": {
          "type": "string"
        },
        "TotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountAmount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 407.55
        },
        "TotalDiscountCustomerGroupCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalInvoiceAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 40755
        },
        "TotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesInvoicesHeadersGetByIdRes",
      "x-primary-key": [
        "InvoiceNumber"
      ],
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "BulkUploadResponse": {
      "description": "BulkLoad response of bulk download.",
      "properties": {
        "id": {
          "description": "Id of the bulk job",
          "type": "string"
        },
        "instanceId": {
          "description": "Instance Id of the bulk job",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ledgerHeadersPatchReq": {
      "properties": {
        "Description": {
          "type": "string",
          "x-samplevalue": "Test Journal pp"
        }
      },
      "title": "ledgerHeadersPatchReq",
      "type": "object"
    },
    "customerPatchRes": {
      "properties": {
        "CustomerAccount": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "customerPatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerAccount"
      ],
      "x-vendor-objectname": "Customers",
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "quoteHeader": {
      "properties": {
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "1%D07"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "OpenTransact"
        },
        "CustomersReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Sparow Retail update"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000003642"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Sparrow Retail"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "FormattedInvoiceAddress": {
          "type": "string",
          "x-samplevalue": "199 Purple Road\nAlamo, NV 89001 \nUSA"
        },
        "GeneratedSalesOrderNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Alamo"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "InvoiceAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LINCOLN"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "199 Purple Road"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "89001"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "IsCustomerFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesQuotationTemplateActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OpportunityId": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net45"
        },
        "PriceCustomerGroupCode": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "QuotationDocumentConclusionName": {
          "type": "string"
        },
        "QuotationDocumentIntroductionName": {
          "type": "string"
        },
        "QuotationDocumentTitleName": {
          "type": "string"
        },
        "QuotationFollowUpActivity": {
          "type": "string",
          "x-samplevalue": "00132"
        },
        "QuotationReasonCode": {
          "type": "string"
        },
        "QuotationResponsiblePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "QuotationTakerPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "QuotationTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReceiptDateRequested": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-samplevalue": "PHONE"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "03"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "ATPPlusIssueMargin"
        },
        "SalesQuotationConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "SalesQuotationExpiryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-22T12:00:00Z"
        },
        "SalesQuotationFollowUpDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-22T12:00:00Z"
        },
        "SalesQuotationName": {
          "type": "string",
          "x-samplevalue": "Sparrow Retail"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000007"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesQuotationTemplateGroupId": {
          "type": "string"
        },
        "SalesQuotationTemplateName": {
          "type": "string"
        },
        "SalesQuotationTypeId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceAgreementId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TeleMarketingCallListId": {
          "type": "string"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "URL": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "quoteHeader",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesQuotationNumber"
      ],
      "x-vendor-objectname": "SalesQuotationHeaders",
      "type": "object"
    },
    "vendorInvoicesLineitemsPatchRes": {
      "properties": {
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "000395"
        },
        "InvoiceLineNumber": {
          "type": "string",
          "x-samplevalue": "2"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "vendorInvoicesLineitemsPatchRes",
      "type": "object"
    },
    "salesInvoicesLineitemsGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDc3NTswLDU2MzcxNDQ1OTk7MCw1NjM3MTQ0NTk5OzAsMjI1NjU0MjM1NTM7MSw1NjM3MTQ0Njg0OzAsMjI1NjU0MjE0NjQ7MCwyMjU2NTQyMTQ2NDswLDIyNTY1NDIxNzk5OzAsMDswLDAn\""
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "InvoiceNumber": {
          "type": "string",
          "x-samplevalue": "CIV-000024"
        },
        "InvoicedQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 15
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 56250
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "LineTotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3375
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Projector Television"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "ProjectorTelevision"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "T0002"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3750
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesInvoicesLineitemsGetByIdRes",
      "x-primary-key": [
        "ProductName"
      ],
      "type": "object"
    },
    "vendorInvoicesLineitemsPatchReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2NzU4NDM7MSw2ODcxOTQ4OTgxMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateId": {
          "type": "string"
        },
        "AdjustedUnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CWDeliveryRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWRemainingQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWUpdate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChangeQuantityManually": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ChargesOnPurchases": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CloseForReceipt": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Commodity": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DataAreaCompany": {
          "type": "string"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryState": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DimensionNumber": {
          "type": "string",
          "x-samplevalue": "000021"
        },
        "DiotOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "Discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012335"
        },
        "InventNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventorySiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "InventoryWarehouseId": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemName": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "C0002"
        },
        "ItemSalesTax": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard\nMeet the Arc™ Keyboard—with beautiful curves and a compact design, it’s at home wherever you are.  Two color options to match your personal style."
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "MainAccountDisplayValue": {
          "type": "string"
        },
        "MultilineDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NetAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "Ordering": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrigCountryRegionId": {
          "type": "string"
        },
        "OriginalDeliverRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PDSCalculationId": {
          "type": "string"
        },
        "PartyID": {
          "type": "string"
        },
        "Percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Port": {
          "type": "string"
        },
        "PriceUnit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ProcurementCategoryHierarchyName": {
          "type": "string",
          "x-samplevalue": "Procurement - Office Supplies"
        },
        "ProcurementCategoryName": {
          "type": "string",
          "x-samplevalue": "Computers"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "PurchLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PurchaseOrder": {
          "type": "string"
        },
        "ReceiveNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReleaseAllRetainedAmount": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "RemainAfter": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainAfterInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBefore": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBeforeInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainageAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "NJ"
        },
        "StateOfOrigin": {
          "type": "string"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099Box": {
          "type": "string"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TaxServiceCode": {
          "type": "string"
        },
        "TaxWithholdGroup": {
          "type": "string"
        },
        "TaxWithholdItemGroupName": {
          "type": "string"
        },
        "TotalRetainedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Unit": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceLineReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "WithholdingTaxGroup": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesLineitemsPatchReq",
      "type": "object"
    },
    "ledgerHeadersPatchResp": {
      "properties": {
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "uspi"
        }
      },
      "title": "ledgerHeadersPatchResp",
      "x-primary-key": [
        "JournalBatchNumber"
      ],
      "type": "object"
    },
    "contact": {
      "properties": {
        "AddressBookNames": {
          "type": "string"
        },
        "AlternateComplimentaryClosingPhrase": {
          "type": "string"
        },
        "AlternateSalutationPhrase": {
          "type": "string"
        },
        "AnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "AnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AssistantName": {
          "type": "string"
        },
        "AssistantPhoneNumber": {
          "type": "string"
        },
        "AssociatedPartyNumber": {
          "type": "string",
          "x-samplevalue": "000000864"
        },
        "AvailableFromTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AvailableToTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BillingInformation": {
          "type": "string"
        },
        "BirthDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BirthMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BirthYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChildrenNames": {
          "type": "string"
        },
        "ContactActivitySensitivityLevel": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "ContactInformationLanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "ContactPersonId": {
          "type": "string",
          "x-samplevalue": "000001"
        },
        "ContactPersonName": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "ContactPersonPartyNumber": {
          "type": "string",
          "x-samplevalue": "000001572"
        },
        "ContactPersonPartyType": {
          "type": "string",
          "x-samplevalue": "Person"
        },
        "ContactPersonResponsiblePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000034"
        },
        "DecisionMakingRoleCode": {
          "type": "string"
        },
        "DisplayNameSequencePatternName": {
          "type": "string",
          "x-samplevalue": "FirstMiddleLast"
        },
        "ElectronicLocationId": {
          "type": "string",
          "x-samplevalue": "000002514"
        },
        "EmploymentComputerNetworkName": {
          "type": "string"
        },
        "EmploymentDepartment": {
          "type": "string"
        },
        "EmploymentJobFunctionName": {
          "type": "string"
        },
        "EmploymentJobTitle": {
          "type": "string"
        },
        "EmploymentOfficeLocation": {
          "type": "string"
        },
        "EmploymentProfession": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "Tom"
        },
        "FormattedPrimaryAddress": {
          "type": "string",
          "x-samplevalue": "Dunover Building\nSuite 110\nFargo, ND 58104 \nUSA"
        },
        "Gender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "GovernmentIdentificationNumber": {
          "type": "string"
        },
        "HasRequestedInternetAccess": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Hobbies": {
          "type": "string"
        },
        "IdentityCardNumber": {
          "type": "string"
        },
        "Initials": {
          "type": "string"
        },
        "IsContactPersonExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDefaultContactPerson": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsImported": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInactive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryEmailAddressIMEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryPhoneNumberMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsReceivingDirectMail": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsVIP": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsVendorPortalAccessAllowed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "KnownAsName": {
          "type": "string"
        },
        "LastEditDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-06-06T18:38:19Z"
        },
        "LastName": {
          "type": "string",
          "x-samplevalue": "Ersfeld"
        },
        "LoyaltyLevelPhrase": {
          "type": "string"
        },
        "ManagerContactPersonId": {
          "type": "string"
        },
        "MaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "MicrosoftOutlookCategories": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "MileageDistance": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "OrganizationIdentificationNumber": {
          "type": "string"
        },
        "PersonalCharacterTypeCode": {
          "type": "string"
        },
        "PhoneticFirstName": {
          "type": "string"
        },
        "PhoneticLastName": {
          "type": "string"
        },
        "PhoneticMiddleName": {
          "type": "string"
        },
        "PrimaryAddressBuildingCompliment": {
          "type": "string"
        },
        "PrimaryAddressCity": {
          "type": "string",
          "x-samplevalue": "Fargo"
        },
        "PrimaryAddressCityInKana": {
          "type": "string"
        },
        "PrimaryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "PrimaryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "PrimaryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "CASS"
        },
        "PrimaryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "PrimaryAddressDistrictName": {
          "type": "string"
        },
        "PrimaryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000002513"
        },
        "PrimaryAddressLocationRoles": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressPostBox": {
          "type": "string"
        },
        "PrimaryAddressStateId": {
          "type": "string",
          "x-samplevalue": "ND"
        },
        "PrimaryAddressStreet": {
          "type": "string",
          "x-samplevalue": "Dunover Building\nSuite 110"
        },
        "PrimaryAddressStreetInKana": {
          "type": "string"
        },
        "PrimaryAddressStreetNumber": {
          "type": "string"
        },
        "PrimaryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-03-28T19:29:32Z"
        },
        "PrimaryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "PrimaryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "58104"
        },
        "PrimaryComplimentaryClosingPhrase": {
          "type": "string"
        },
        "PrimaryEmailAddress": {
          "type": "string",
          "x-samplevalue": "Tom@SparrowRetail.com",
          "x-sub-format": "email"
        },
        "PrimaryEmailAddressDescription": {
          "type": "string"
        },
        "PrimaryEmailAddressPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryFacebook": {
          "type": "string"
        },
        "PrimaryFacebookDescription": {
          "type": "string"
        },
        "PrimaryFacebookPurpose": {
          "type": "string"
        },
        "PrimaryFaxNumber": {
          "type": "string"
        },
        "PrimaryFaxNumberDescription": {
          "type": "string"
        },
        "PrimaryFaxNumberExtension": {
          "type": "string"
        },
        "PrimaryFaxNumberPurpose": {
          "type": "string"
        },
        "PrimaryLinkedIn": {
          "type": "string"
        },
        "PrimaryLinkedInDescription": {
          "type": "string"
        },
        "PrimaryLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryPhoneNumber": {
          "type": "string",
          "x-samplevalue": "701-555-1212"
        },
        "PrimaryPhoneNumberDescription": {
          "type": "string"
        },
        "PrimaryPhoneNumberExtension": {
          "type": "string"
        },
        "PrimaryPhoneNumberPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimarySalutationPhrase": {
          "type": "string"
        },
        "PrimaryTelex": {
          "type": "string"
        },
        "PrimaryTelexDescription": {
          "type": "string"
        },
        "PrimaryTelexPurpose": {
          "type": "string"
        },
        "PrimaryTwitter": {
          "type": "string"
        },
        "PrimaryTwitterDescription": {
          "type": "string"
        },
        "PrimaryTwitterPurpose": {
          "type": "string"
        },
        "PrimaryURL": {
          "type": "string"
        },
        "PrimaryURLDescription": {
          "type": "string"
        },
        "PrimaryURLPurpose": {
          "type": "string"
        },
        "ProfessionalSuffix": {
          "type": "string"
        },
        "ProfessionalTitle": {
          "type": "string"
        },
        "SearchName": {
          "type": "string",
          "x-samplevalue": "Tom Ersfeld"
        },
        "SpouseName": {
          "type": "string"
        },
        "UserRole": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "contact",
      "x-has-customfields": false,
      "x-primary-key": [
        "ContactPersonId"
      ],
      "x-vendor-objectname": "ContactPersons",
      "type": "object"
    },
    "purchaseOrdersGetById": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderHeadersV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjE2ODA7MCwwOzAsMjI1NjU0MjQzMDI7MCwwOzAsMCc=\""
        },
        "AccountingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AttentionInformation": {
          "type": "string"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BuyerGroupId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChargeVendorGroupId": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmingPurchaseOrderCode": {
          "type": "string"
        },
        "ConfirmingPurchaseOrderCodeLanguageId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DefaultReceivingSiteId": {
          "type": "string"
        },
        "DefaultReceivingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryModeId": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "type": "string",
          "x-samplevalue": "Confirmed"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExpectedCrossDockingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreAvailableSalesDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "GSTSelfBilledInvoiceApprovalNumber": {
          "type": "string"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressState": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "InvoiceVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "IsChangeManagementActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveredDirectly": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeVendor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountVendorGroupCode": {
          "type": "string"
        },
        "MultilineDiscountVendorGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "OrdererPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000355"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "PriceVendorGroupCode": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "PurchaseOrderHeaderCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderName": {
          "type": "string",
          "x-samplevalue": "Hardware Components"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchaseOrderPoolId": {
          "type": "string"
        },
        "PurchaseOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "ReasonCode": {
          "type": "string"
        },
        "ReasonComment": {
          "type": "string"
        },
        "ReplenishmentServiceCategoryId": {
          "type": "string"
        },
        "ReplenishmentWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountVendorGroupCode": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "VendorInvoiceDeclarationId": {
          "type": "string"
        },
        "VendorOrderReference": {
          "type": "string"
        },
        "VendorPaymentMethodName": {
          "type": "string"
        },
        "VendorPaymentMethodSpecificationName": {
          "type": "string"
        },
        "VendorPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "VendorTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ZakatContractNumber": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrdersGetById",
      "x-primary-key": [
        "PurchaseOrderNumber"
      ],
      "type": "object"
    },
    "ledgerHeadersGetAllRespObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjUwNDQn\""
        },
        "AccountingCurrency": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "General Journal",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "IsPosted": {
          "type": "string",
          "x-samplevalue": "Yes",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "JournalName": {
          "type": "string",
          "x-samplevalue": "GenJrn",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "JournalTotalCredit": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3090830.29,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "JournalTotalDebit": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3090830.29,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PostingLayer": {
          "type": "string",
          "x-samplevalue": "Current",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE"
          ]
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "uspi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "ledgerHeadersGetAllResp",
      "type": "object",
      "x-primary-key": [
        "JournalBatchNumber"
      ]
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "productsGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "NMFCCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "0187",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "ProductNumber"
      ]
    },
    "productsGetByIdRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjIxMTcn\""
        },
        "HarmonizedSystemCode": {
          "type": "string"
        },
        "IsCatchWeightProduct": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "NMFCCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "Reflective Wrist Band"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "0187"
        },
        "ProductSearchName": {
          "type": "string",
          "x-samplevalue": "ReflectiveWristBand"
        },
        "ProductType": {
          "type": "string",
          "x-samplevalue": "Item"
        },
        "RetailProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Safety"
        },
        "STCCCode": {
          "type": "string"
        },
        "StorageDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "SiteWH"
        },
        "TrackingDimensionGroupName": {
          "type": "string",
          "x-samplevalue": "None"
        }
      },
      "title": "productsGetByIdRes",
      "x-primary-key": [
        "ProductNumber"
      ],
      "type": "object"
    },
    "customerGroup": {
      "properties": {
        "ClearingPeriodPaymentTermName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "CustomerAccountNumberSequence": {
          "type": "string"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Wholesales customers"
        },
        "IsSalesTaxIncludedInPrice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PaymentTermId": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TaxGroupId": {
          "type": "string"
        },
        "WriteOffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "customerGroup",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerGroupId"
      ],
      "x-vendor-objectname": "CustomerGroups",
      "type": "object"
    },
    "quoteLinePatchRes": {
      "properties": {
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "quoteLinePatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "InventoryLotId"
      ],
      "x-vendor-objectname": "SalesQuotationLines",
      "type": "object"
    },
    "vendorInvoiceLineItemsGetByIdResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk2NzU4NDM7MSw2ODcxOTQ4OTgxMDswLDA7MCwwOzAsMCc=\""
        },
        "AccountingDistributionTemplateId": {
          "type": "string"
        },
        "AdjustedUnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BudgetReservationDocumentNumber": {
          "type": "string"
        },
        "BudgetReservationLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CFOPCode": {
          "type": "string"
        },
        "CWDeliveryRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWRemainingQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CWUpdate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChangeQuantityManually": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ChargesOnPurchases": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CloseForReceipt": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Commodity": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DataAreaCompany": {
          "type": "string"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Site 1"
        },
        "DeliveryState": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DimensionNumber": {
          "type": "string",
          "x-samplevalue": "000021"
        },
        "DiotOperationType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "Discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DiscountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012335"
        },
        "InventNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InventorySiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "InventoryWarehouseId": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemName": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "C0002"
        },
        "ItemSalesTax": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Microsoft Arc™ Keyboard\nMeet the Arc™ Keyboard—with beautiful curves and a compact design, it’s at home wherever you are.  Two color options to match your personal style."
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "MainAccountDisplayValue": {
          "type": "string"
        },
        "MultilineDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NetAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "Ordering": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrigCountryRegionId": {
          "type": "string"
        },
        "OriginalDeliverRemainder": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PDSCalculationId": {
          "type": "string"
        },
        "PartyID": {
          "type": "string"
        },
        "Percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Port": {
          "type": "string"
        },
        "PriceUnit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ProcurementCategoryHierarchyName": {
          "type": "string",
          "x-samplevalue": "Procurement - Office Supplies"
        },
        "ProcurementCategoryName": {
          "type": "string",
          "x-samplevalue": "Computers"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "PurchLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PurchaseOrder": {
          "type": "string"
        },
        "ReceiveNow": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReleaseAllRetainedAmount": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "RemainAfter": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainAfterInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBefore": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RemainBeforeInvent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RetainageAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "NJ"
        },
        "StateOfOrigin": {
          "type": "string"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "Tax1099Amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Tax1099Box": {
          "type": "string"
        },
        "Tax1099StateAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TaxServiceCode": {
          "type": "string"
        },
        "TaxWithholdGroup": {
          "type": "string"
        },
        "TaxWithholdItemGroupName": {
          "type": "string"
        },
        "TotalRetainedAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Unit": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "UnitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceLineReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "WithholdingTaxGroup": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoiceLineItemsGetByIdRes",
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseOrdersPatchRes": {
      "properties": {
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "purchaseOrdersPatchRes",
      "x-primary-key": [
        "PurchaseOrderNumber"
      ],
      "type": "object"
    },
    "customerGroupPatchRes": {
      "properties": {
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "customerGroupPatchRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerGroupId"
      ],
      "x-vendor-objectname": "CustomerGroups",
      "type": "object"
    },
    "purchaseOrdersPatchReq": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#PurchaseOrderHeadersV2/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjE2ODA7MCwwOzAsMjI1NjU0MjQzMDI7MCwwOzAsMCc=\""
        },
        "AccountingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AttentionInformation": {
          "type": "string"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BuyerGroupId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChargeVendorGroupId": {
          "type": "string"
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmingPurchaseOrderCode": {
          "type": "string"
        },
        "ConfirmingPurchaseOrderCodeLanguageId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023"
        },
        "DefaultReceivingSiteId": {
          "type": "string"
        },
        "DefaultReceivingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCityInKana": {
          "type": "string"
        },
        "DeliveryModeId": {
          "type": "string"
        },
        "DeliveryStreetInKana": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "type": "string",
          "x-samplevalue": "Confirmed"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExpectedCrossDockingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreAvailableSalesDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "GSTSelfBilledInvoiceApprovalNumber": {
          "type": "string"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressState": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "InvoiceVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "IsChangeManagementActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveredDirectly": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeVendor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountVendorGroupCode": {
          "type": "string"
        },
        "MultilineDiscountVendorGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014"
        },
        "OrdererPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000355"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "PriceVendorGroupCode": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001"
        },
        "PurchaseOrderHeaderCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "PurchaseOrderName": {
          "type": "string",
          "x-samplevalue": "Hardware Components"
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002"
        },
        "PurchaseOrderPoolId": {
          "type": "string"
        },
        "PurchaseOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string"
        },
        "ReasonCode": {
          "type": "string"
        },
        "ReasonComment": {
          "type": "string"
        },
        "ReplenishmentServiceCategoryId": {
          "type": "string"
        },
        "ReplenishmentWarehouseId": {
          "type": "string"
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z"
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountVendorGroupCode": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "VendorInvoiceDeclarationId": {
          "type": "string"
        },
        "VendorOrderReference": {
          "type": "string"
        },
        "VendorPaymentMethodName": {
          "type": "string"
        },
        "VendorPaymentMethodSpecificationName": {
          "type": "string"
        },
        "VendorPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "VendorTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ZakatContractNumber": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi"
        }
      },
      "title": "purchaseOrdersPatchReq",
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "salesOrderLineItemsGetByIdResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDU3NjswLDA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "AllowedOverdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AllowedUnderdeliveryPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BOMId": {
          "type": "string"
        },
        "CFOPCode": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomersLineNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CustomsDocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "CustomsDocumentName": {
          "type": "string"
        },
        "CustomsDocumentNumber": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCityInKana": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetInKana": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryCFOPCode": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliverySalesTaxGroupCode": {
          "type": "string"
        },
        "DeliverySalesTaxItemGroupCode": {
          "type": "string"
        },
        "DeliveryTermsId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EInvoicePropertyNumber": {
          "type": "string"
        },
        "ExternalItemNumber": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FixedPriceCharges": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "GiftCardBuyerEmail": {
          "type": "string"
        },
        "GiftCardBuyerName": {
          "type": "string"
        },
        "GiftCardGiftMessage": {
          "type": "string"
        },
        "GiftCardNumber": {
          "type": "string"
        },
        "GiftCardRecipientEmail": {
          "type": "string"
        },
        "GiftCardRecipientName": {
          "type": "string"
        },
        "GiftCardType": {
          "type": "string",
          "x-samplevalue": "Email"
        },
        "IntrastatCommodityCode": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatSpecialMovementCode": {
          "type": "string"
        },
        "IntrastatStatisticValue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryLotId": {
          "type": "string",
          "x-samplevalue": "000221"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIntrastatTriangularDeal": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsLineStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemBatchNumber": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string",
          "x-samplevalue": "D0001"
        },
        "ItemWithholdingTaxCodeGroupCode": {
          "type": "string"
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 49500
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LineDescription": {
          "type": "string",
          "x-samplevalue": "Mid-Range Speaker"
        },
        "LineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MainAccountIdDisplayValue": {
          "type": "string"
        },
        "MultilineDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "MultilineDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NGPCode": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderLineReference": {
          "type": "string"
        },
        "OrderedInventoryStatusId": {
          "type": "string"
        },
        "OrderedSalesQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 150
        },
        "PackingUnitSymbol": {
          "type": "string"
        },
        "ProductColorId": {
          "type": "string"
        },
        "ProductConfigurationId": {
          "type": "string"
        },
        "ProductSizeId": {
          "type": "string"
        },
        "ProductStyleId": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-20T12:00:00Z"
        },
        "RouteId": {
          "type": "string"
        },
        "SalesOrderLineStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 330
        },
        "SalesPriceQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SalesProductCategoryName": {
          "type": "string",
          "x-samplevalue": "Speakers"
        },
        "SalesRebateProductGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SalesTaxItemGroupCode": {
          "type": "string",
          "x-samplevalue": "AU/VI"
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ServiceOrderNumber": {
          "type": "string"
        },
        "ShippingSiteId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "ShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "13"
        },
        "SkipCreateAutoCharges": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "SuframaDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WillRebateCalculationExcludeLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesOrderLineItemsGetByIdRes",
      "type": "object"
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "quoteHeaderPostReq": {
      "properties": {
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "1%D07"
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "OpenTransact"
        },
        "CustomersReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Sparow Retail update"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000003642"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Sparrow Retail"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "FormattedInvoiceAddress": {
          "type": "string",
          "x-samplevalue": "199 Purple Road\nAlamo, NV 89001 \nUSA"
        },
        "GeneratedSalesOrderNumber": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Alamo"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "InvoiceAddressCountyId": {
          "type": "string",
          "x-samplevalue": "LINCOLN"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "199 Purple Road"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "89001"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "IsCustomerFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesQuotationTemplateActive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OpportunityId": {
          "type": "string"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net45"
        },
        "PriceCustomerGroupCode": {
          "type": "string"
        },
        "ProspectId": {
          "type": "string"
        },
        "QuotationDocumentConclusionName": {
          "type": "string"
        },
        "QuotationDocumentIntroductionName": {
          "type": "string"
        },
        "QuotationDocumentTitleName": {
          "type": "string"
        },
        "QuotationFollowUpActivity": {
          "type": "string",
          "x-samplevalue": "00132"
        },
        "QuotationReasonCode": {
          "type": "string"
        },
        "QuotationResponsiblePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "QuotationTakerPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000002"
        },
        "QuotationTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QuotationTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ReceiptDateRequested": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-18T12:00:00Z"
        },
        "RequestingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "US-008"
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-samplevalue": "PHONE"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "03"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "ATPPlusIssueMargin"
        },
        "SalesQuotationConfirmationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "SalesQuotationExpiryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-22T12:00:00Z"
        },
        "SalesQuotationFollowUpDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-22T12:00:00Z"
        },
        "SalesQuotationName": {
          "type": "string",
          "x-samplevalue": "Sparrow Retail"
        },
        "SalesQuotationNumber": {
          "type": "string",
          "x-samplevalue": "000007"
        },
        "SalesQuotationStatus": {
          "type": "string",
          "x-samplevalue": "Created"
        },
        "SalesQuotationTemplateGroupId": {
          "type": "string"
        },
        "SalesQuotationTemplateName": {
          "type": "string"
        },
        "SalesQuotationTypeId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "NV"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceAgreementId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TeleMarketingCallListId": {
          "type": "string"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "URL": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "required": [
        "CurrencyCode",
        "LanguageId",
        "RequestingCustomerAccountNumber"
      ],
      "title": "quoteHeaderPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "SalesQuotationNumber"
      ],
      "x-vendor-objectname": "SalesQuotationHeaders",
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "vendorInvoicesHeadersPostRes": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEyMjEwNTUxMTcsNjg3MTk0OTAyOTI7MCwwOzAsMCc=\""
        },
        "AccessKey": {
          "type": "string"
        },
        "ApprovePostingWithMatchingDiscrepancies": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ApproverPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "BankAccount": {
          "type": "string"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CTeType": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "CarrierName": {
          "type": "string"
        },
        "CashDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D10"
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChargesGroup": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "CreditCorrection": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-12-09T12:00:00Z"
        },
        "DeliveryFreightChargeTerms": {
          "type": "string",
          "x-samplevalue": "Prepaid"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Contoso Entertainment System USA"
        },
        "DeliveryPackingName": {
          "type": "string"
        },
        "DeliveryStateRegistered": {
          "type": "string"
        },
        "DeliveryTransportBrand": {
          "type": "string"
        },
        "DeliveryVehicleNumber": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "DocumentNumber": {
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-08T12:00:00Z"
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ErrorInvalidDistribution": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "FiscalDocumentModel": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentSeries": {
          "type": "string"
        },
        "FiscalDocumentSpecie": {
          "type": "string",
          "x-samplevalue": "NFF"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalEstablishmentId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedRate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FreightedBy": {
          "type": "string",
          "x-samplevalue": "Carrier"
        },
        "GSTImportDeclarationNumber": {
          "type": "string"
        },
        "GSTInvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012399"
        },
        "IgnoreCalculatedSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "InvoiceDescription": {
          "type": "string"
        },
        "InvoiceGroup": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "InvoicePaymentReleaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceRoundOff": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceSeries": {
          "type": "string"
        },
        "IsApproved": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsBatch": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsElectronicInvoiceForService": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOnHold": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPricesIncludeSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Log": {
          "type": "string"
        },
        "MethodOfPayment": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "PaymentGroupCode": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "PurchReceiptDate_W": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PurchaseOrderNumber": {
          "type": "string"
        },
        "Recalculation": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ReleaseDateComment": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "SalesTaxRounding": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ServiceCodeOnDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SettleVoucher": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Site": {
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TermsOfPayment": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TotalDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Triangulation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UUID": {
          "type": "string"
        },
        "VarianceApprovedDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "VariancePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "VendorInvoiceType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "VendorName": {
          "type": "string",
          "x-samplevalue": "Acme Office Supplies"
        },
        "VendorPaymentFinancialInterestCode": {
          "type": "string"
        },
        "VendorPaymentFineCode": {
          "type": "string"
        },
        "VendorRequestedWorkerEmail": {
          "type": "string",
          "x-samplevalue": "julia@contoso.com",
          "x-sub-format": "email"
        },
        "Warehouse": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesHeadersPostRes",
      "x-primary-key": [
        "HeaderReference"
      ],
      "type": "object"
    },
    "purchaseOrdersGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjE2ODA7MCwwOzAsMjI1NjU0MjQzMDI7MCwwOzAsMCc=\""
        },
        "AccountingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AccountingDistributionTemplateName": {
          "type": "string"
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AttentionInformation": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BankDocumentType": {
          "type": "string",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BuyerGroupId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CashDiscountCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CashDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ChargeVendorGroupId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ConfirmedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ConfirmingPurchaseOrderCode": {
          "type": "string"
        },
        "ConfirmingPurchaseOrderCodeLanguageId": {
          "type": "string"
        },
        "ContactPersonId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "004--023",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DefaultReceivingSiteId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DefaultReceivingWarehouseId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Redmond",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "US",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressDistrictName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000000037",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "Contoso Consulting USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressPostBox": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "WA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressStreetNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "98052",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryBuildingCompliment": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryCityInKana": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryModeId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DeliveryStreetInKana": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "DeliveryTermsId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DocumentApprovalStatus": {
          "type": "string",
          "x-samplevalue": "Confirmed",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "Email": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ExpectedCrossDockingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ExpectedStoreAvailableSalesDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ExpectedStoreReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "FormattedDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "454 1st Street\nSuite 99\nRedmond, WA 98052 \nUSA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "FormattedInvoiceAddress": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "GSTSelfBilledInvoiceApprovalNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ImportDeclarationNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IntrastatPortId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IntrastatTransactionCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IntrastatTransportModeCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressCounty": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressState": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressStreetNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "InvoiceVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsChangeManagementActive": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsDeliveredDirectly": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "IsOneTimeVendor": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LineDiscountVendorGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MultilineDiscountVendorGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "NumberSequenceGroupId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OrderVendorAccountNumber": {
          "type": "string",
          "x-samplevalue": "US_SI_000014",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OrdererPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000355",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PaymentScheduleName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "Net30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PriceVendorGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ProjectId": {
          "type": "string",
          "x-samplevalue": "00000001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchaseOrderHeaderCreationMethod": {
          "type": "string",
          "x-samplevalue": "Purchase",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "PurchaseOrderName": {
          "type": "string",
          "x-samplevalue": "Hardware Components",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchaseOrderNumber": {
          "type": "string",
          "x-samplevalue": "00000002",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchaseOrderPoolId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchaseOrderStatus": {
          "type": "string",
          "x-samplevalue": "Invoiced",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PurchaseRebateVendorGroupId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReasonCode": {
          "type": "string"
        },
        "ReasonComment": {
          "type": "string"
        },
        "ReplenishmentServiceCategoryId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ReplenishmentWarehouseId": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RequestedDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-01-01T12:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RequesterPersonnelNumber": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "TotalDiscountVendorGroupCode": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorInvoiceDeclarationId": {
          "type": "string"
        },
        "VendorOrderReference": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "VendorPaymentMethodName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorPaymentMethodSpecificationName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "VendorTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "ZakatContractNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "ussi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "title": "purchaseOrdersGetAllRes",
      "type": "object",
      "x-primary-key": [
        "PurchaseOrderNumber"
      ]
    },
    "contactsPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#ContactPersons/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk0ODUwMDI7MSw2ODcxOTUxMzUxNzswLDAn\""
        },
        "AddressBookNames": {
          "type": "string"
        },
        "AlternateComplimentaryClosingPhrase": {
          "type": "string"
        },
        "AlternateSalutationPhrase": {
          "type": "string"
        },
        "AnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "AnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AssistantName": {
          "type": "string"
        },
        "AssistantPhoneNumber": {
          "type": "string"
        },
        "AssociatedPartyNumber": {
          "type": "string",
          "x-samplevalue": "000002968"
        },
        "AvailableFromTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AvailableToTime": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BillingInformation": {
          "type": "string"
        },
        "BirthDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BirthMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "BirthYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ChildrenNames": {
          "type": "string"
        },
        "ContactActivitySensitivityLevel": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "ContactInformationLanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "ContactPersonId": {
          "type": "string",
          "x-samplevalue": "DAT-000354"
        },
        "ContactPersonName": {
          "type": "string",
          "x-samplevalue": "svdv svdsav"
        },
        "ContactPersonPartyNumber": {
          "type": "string",
          "x-samplevalue": "000002969"
        },
        "ContactPersonPartyType": {
          "type": "string",
          "x-samplevalue": "Person"
        },
        "ContactPersonResponsiblePersonnelNumber": {
          "type": "string"
        },
        "DecisionMakingRoleCode": {
          "type": "string"
        },
        "DisplayNameSequencePatternName": {
          "type": "string",
          "x-samplevalue": "FirstMiddleLast"
        },
        "ElectronicLocationId": {
          "type": "string"
        },
        "EmploymentComputerNetworkName": {
          "type": "string"
        },
        "EmploymentDepartment": {
          "type": "string"
        },
        "EmploymentJobFunctionName": {
          "type": "string"
        },
        "EmploymentJobTitle": {
          "type": "string"
        },
        "EmploymentOfficeLocation": {
          "type": "string"
        },
        "EmploymentProfession": {
          "type": "string"
        },
        "FirstName": {
          "type": "string",
          "x-samplevalue": "svdv svdsav"
        },
        "FormattedPrimaryAddress": {
          "type": "string"
        },
        "Gender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "GovernmentIdentificationNumber": {
          "type": "string"
        },
        "HasRequestedInternetAccess": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Hobbies": {
          "type": "string"
        },
        "IdentityCardNumber": {
          "type": "string"
        },
        "Initials": {
          "type": "string"
        },
        "IsContactPersonExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDefaultContactPerson": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsImported": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInactive": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryEmailAddressIMEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPrimaryPhoneNumberMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsReceivingDirectMail": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsVIP": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsVendorPortalAccessAllowed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "KnownAsName": {
          "type": "string"
        },
        "LastEditDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:26:59Z"
        },
        "LastName": {
          "type": "string"
        },
        "LoyaltyLevelPhrase": {
          "type": "string"
        },
        "ManagerContactPersonId": {
          "type": "string"
        },
        "MaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "MicrosoftOutlookCategories": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "MileageDistance": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "OrganizationIdentificationNumber": {
          "type": "string"
        },
        "PersonalCharacterTypeCode": {
          "type": "string"
        },
        "PhoneticFirstName": {
          "type": "string"
        },
        "PhoneticLastName": {
          "type": "string"
        },
        "PhoneticMiddleName": {
          "type": "string"
        },
        "PrimaryAddressBuildingCompliment": {
          "type": "string"
        },
        "PrimaryAddressCity": {
          "type": "string"
        },
        "PrimaryAddressCityInKana": {
          "type": "string"
        },
        "PrimaryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "PrimaryAddressCountryRegionId": {
          "type": "string"
        },
        "PrimaryAddressCountyId": {
          "type": "string"
        },
        "PrimaryAddressDescription": {
          "type": "string"
        },
        "PrimaryAddressDistrictName": {
          "type": "string"
        },
        "PrimaryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressLocationId": {
          "type": "string"
        },
        "PrimaryAddressLocationRoles": {
          "type": "string"
        },
        "PrimaryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PrimaryAddressPostBox": {
          "type": "string"
        },
        "PrimaryAddressStateId": {
          "type": "string"
        },
        "PrimaryAddressStreet": {
          "type": "string"
        },
        "PrimaryAddressStreetInKana": {
          "type": "string"
        },
        "PrimaryAddressStreetNumber": {
          "type": "string"
        },
        "PrimaryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "PrimaryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "PrimaryAddressZipCode": {
          "type": "string"
        },
        "PrimaryComplimentaryClosingPhrase": {
          "type": "string"
        },
        "PrimaryEmailAddress": {
          "type": "string"
        },
        "PrimaryEmailAddressDescription": {
          "type": "string"
        },
        "PrimaryEmailAddressPurpose": {
          "type": "string"
        },
        "PrimaryFacebook": {
          "type": "string"
        },
        "PrimaryFacebookDescription": {
          "type": "string"
        },
        "PrimaryFacebookPurpose": {
          "type": "string"
        },
        "PrimaryFaxNumber": {
          "type": "string"
        },
        "PrimaryFaxNumberDescription": {
          "type": "string"
        },
        "PrimaryFaxNumberExtension": {
          "type": "string"
        },
        "PrimaryFaxNumberPurpose": {
          "type": "string"
        },
        "PrimaryLinkedIn": {
          "type": "string"
        },
        "PrimaryLinkedInDescription": {
          "type": "string"
        },
        "PrimaryLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryPhoneNumber": {
          "type": "string"
        },
        "PrimaryPhoneNumberDescription": {
          "type": "string"
        },
        "PrimaryPhoneNumberExtension": {
          "type": "string"
        },
        "PrimaryPhoneNumberPurpose": {
          "type": "string"
        },
        "PrimarySalutationPhrase": {
          "type": "string"
        },
        "PrimaryTelex": {
          "type": "string"
        },
        "PrimaryTelexDescription": {
          "type": "string"
        },
        "PrimaryTelexPurpose": {
          "type": "string"
        },
        "PrimaryTwitter": {
          "type": "string"
        },
        "PrimaryTwitterDescription": {
          "type": "string"
        },
        "PrimaryTwitterPurpose": {
          "type": "string"
        },
        "PrimaryURL": {
          "type": "string"
        },
        "PrimaryURLDescription": {
          "type": "string"
        },
        "PrimaryURLPurpose": {
          "type": "string"
        },
        "ProfessionalSuffix": {
          "type": "string"
        },
        "ProfessionalTitle": {
          "type": "string"
        },
        "SearchName": {
          "type": "string",
          "x-samplevalue": "svdv svdsav"
        },
        "SpouseName": {
          "type": "string"
        },
        "UserRole": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "dat"
        }
      },
      "title": "contactsPostRes",
      "x-primary-key": [
        "ContactPersonId"
      ],
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "vendorInvoicesHeadersPostReq": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEyMjEwNTUxMTcsNjg3MTk0OTAyOTI7MCwwOzAsMCc=\""
        },
        "AccessKey": {
          "type": "string"
        },
        "ApprovePostingWithMatchingDiscrepancies": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ApproverPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "BankAccount": {
          "type": "string"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CTeType": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "CarrierName": {
          "type": "string"
        },
        "CashDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "0.5%D10"
        },
        "CashDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ChargesGroup": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "CountyOrigDest": {
          "type": "string"
        },
        "CreditCorrection": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "Currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-12-09T12:00:00Z"
        },
        "DeliveryFreightChargeTerms": {
          "type": "string",
          "x-samplevalue": "Prepaid"
        },
        "DeliveryName": {
          "type": "string",
          "x-samplevalue": "Contoso Entertainment System USA"
        },
        "DeliveryPackingName": {
          "type": "string"
        },
        "DeliveryStateRegistered": {
          "type": "string"
        },
        "DeliveryTransportBrand": {
          "type": "string"
        },
        "DeliveryVehicleNumber": {
          "type": "string"
        },
        "DimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.5
        },
        "DocumentNumber": {
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-08T12:00:00Z"
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ErrorInvalidDistribution": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "FiscalDocumentModel": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentSeries": {
          "type": "string"
        },
        "FiscalDocumentSpecie": {
          "type": "string",
          "x-samplevalue": "NFF"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalEstablishmentId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedRate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FreightedBy": {
          "type": "string",
          "x-samplevalue": "Carrier"
        },
        "GSTImportDeclarationNumber": {
          "type": "string"
        },
        "GSTInvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "HeaderReference": {
          "type": "string",
          "x-samplevalue": "012399"
        },
        "IgnoreCalculatedSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ImportDeclarationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string",
          "x-samplevalue": "1001",
          "x-required": true
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "InvoiceDescription": {
          "type": "string"
        },
        "InvoiceGroup": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string",
          "x-required": true
        },
        "InvoicePaymentReleaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "InvoiceRoundOff": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceSeries": {
          "type": "string"
        },
        "IsApproved": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "IsBatch": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsElectronicInvoiceForService": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOnHold": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPricesIncludeSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Log": {
          "type": "string"
        },
        "MethodOfPayment": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "PaymentGroupCode": {
          "type": "string"
        },
        "PaymentId": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "PostingProfile": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "PurchReceiptDate_W": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PurchaseOrderNumber": {
          "type": "string"
        },
        "Recalculation": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ReleaseDateComment": {
          "type": "string"
        },
        "SalesTaxGroup": {
          "type": "string"
        },
        "SalesTaxRounding": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SecondaryExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ServiceCodeOnDeliveryAddress": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "SettleVoucher": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "Site": {
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "StatisticsProcedure": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TermsOfPayment": {
          "type": "string",
          "x-samplevalue": "Net30"
        },
        "TotalDiscount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransactionCode": {
          "type": "string"
        },
        "Transport": {
          "type": "string"
        },
        "Triangulation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UUID": {
          "type": "string"
        },
        "VarianceApprovedDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T00:00:00Z"
        },
        "VariancePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "000020"
        },
        "VendorAccount": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "VendorInvoiceReviewStatus": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "VendorInvoiceType": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "VendorName": {
          "type": "string",
          "x-samplevalue": "Acme Office Supplies"
        },
        "VendorPaymentFinancialInterestCode": {
          "type": "string"
        },
        "VendorPaymentFineCode": {
          "type": "string"
        },
        "VendorRequestedWorkerEmail": {
          "type": "string",
          "x-samplevalue": "julia@contoso.com",
          "x-sub-format": "email"
        },
        "Warehouse": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "vendorInvoicesHeadersPostReq",
      "type": "object",
      "required": [
        "InvoiceAccount",
        "InvoiceNumber"
      ]
    },
    "ledgerHeadersGetByIdResp": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#LedgerJournalHeaders/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsMjI1NjU0MjUwNDQn\""
        },
        "AccountingCurrency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "General Journal"
        },
        "IsPosted": {
          "type": "string",
          "x-samplevalue": "Yes"
        },
        "JournalBatchNumber": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "JournalName": {
          "type": "string",
          "x-samplevalue": "GenJrn"
        },
        "JournalTotalCredit": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3090830.29
        },
        "JournalTotalDebit": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3090830.29
        },
        "PostingLayer": {
          "type": "string",
          "x-samplevalue": "Current"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "uspi"
        }
      },
      "title": "ledgerHeadersGetByIdResp",
      "x-primary-key": [
        "JournalBatchNumber"
      ],
      "type": "object"
    },
    "salesInvoiceLineItemsGetAllResObject": {
      "properties": {
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzAsNTYzNzE0NDc3NTswLDU2MzcxNDQ1OTk7MCw1NjM3MTQ0NTk5OzAsMjI1NjU0MjM1NTM7MSw1NjM3MTQ0Njg0OzAsMjI1NjU0MjE0NjQ7MCwyMjU2NTQyMTQ2NDswLDIyNTY1NDIxNzk5OzAsMDswLDAn\""
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-15T12:00:00Z"
        },
        "InvoiceNumber": {
          "type": "string",
          "x-samplevalue": "CIV-000024"
        },
        "InvoicedQuantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 15
        },
        "LineAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 56250
        },
        "LineCreationSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "LineTotalChargeAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LineTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3375
        },
        "ProductDescription": {
          "type": "string",
          "x-samplevalue": "Projector Television"
        },
        "ProductName": {
          "type": "string",
          "x-samplevalue": "ProjectorTelevision"
        },
        "ProductNumber": {
          "type": "string",
          "x-samplevalue": "T0002"
        },
        "SalesPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3750
        },
        "SalesUnitSymbol": {
          "type": "string",
          "x-samplevalue": "ea"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "salesInvoiceLineItemsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "ProductName"
      ]
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ordersPostRes": {
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-samplevalue": "https://cefinandopfeeeadf61dba3cdeaos.cloudax.dynamics.com/data/$metadata#SalesOrderHeaders/$entity"
        },
        "@odata.etag": {
          "type": "string",
          "x-samplevalue": "W/\"JzEsNjg3MTk1MTMwNTA7MCwwOzAsMDswLDA7MCwwJw==\""
        },
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BankConstantSymbol": {
          "type": "string"
        },
        "BankSpecificSymbol": {
          "type": "string"
        },
        "CFPSCode": {
          "type": "string"
        },
        "CampaignId": {
          "type": "string"
        },
        "CashDiscountCode": {
          "type": "string"
        },
        "ChargeCustomerGroupId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditNoteReasonCode": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "GEN"
        },
        "CustomerRequisitionNumber": {
          "type": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CustomersOrderReference": {
          "type": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string"
        },
        "DefaultShippingSiteId": {
          "type": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "DeliveryAddressPostBox": {
          "type": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string"
        },
        "DeliveryModeCode": {
          "type": "string"
        },
        "DeliveryReasonCode": {
          "type": "string"
        },
        "DeliveryTermsCode": {
          "type": "string"
        },
        "DirectDebitMandateId": {
          "type": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "IncludeNot"
        },
        "Email": {
          "type": "string"
        },
        "ExportReason": {
          "type": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string"
        },
        "FormattedInvoiceAddress": {
          "type": "string"
        },
        "IntrastatPortId": {
          "type": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceAddressCity": {
          "type": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string"
        },
        "InvoiceAddressCountyId": {
          "type": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string"
        },
        "InvoiceBuildingCompliment": {
          "type": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "23467"
        },
        "InvoicePaymentAttachmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEInvoiceDimensionAccountCodeSpecifiedPerLine": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsEntryCertificateRequired": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOwnEntryCertificateIssued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesProcessingStopped": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string"
        },
        "OrderResponsiblePersonnelNumber": {
          "type": "string"
        },
        "OrderTakerPersonnelNumber": {
          "type": "string"
        },
        "OrderTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "23467"
        },
        "PaymentScheduleName": {
          "type": "string"
        },
        "PaymentTermsBaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1900-01-01T12:00:00Z"
        },
        "PaymentTermsName": {
          "type": "string"
        },
        "PriceCustomerGroupCode": {
          "type": "string"
        },
        "QuotationNumber": {
          "type": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-01-29T12:00:00Z"
        },
        "SalesOrderName": {
          "type": "string",
          "x-samplevalue": "vskdjbfv vsavbk"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "000961"
        },
        "SalesOrderOriginCode": {
          "type": "string"
        },
        "SalesOrderPoolId": {
          "type": "string"
        },
        "SalesOrderProcessingStatus": {
          "type": "string",
          "x-samplevalue": "Active"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesOrderStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "SalesRebateCustomerGroupId": {
          "type": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string"
        },
        "SalesUnitId": {
          "type": "string"
        },
        "ServiceFiscalInformationCode": {
          "type": "string"
        },
        "ShippingCarrierId": {
          "type": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string"
        },
        "TMACustomerGroupId": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransportationBrokerId": {
          "type": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "00000000-0000-0000-0000-000000000000"
        },
        "TransportationModeId": {
          "type": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string"
        },
        "TransportationTemplateId": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "ordersPostRes",
      "x-primary-key": [
        "SalesOrderNumber"
      ],
      "type": "object"
    },
    "customer": {
      "properties": {
        "AccountStatement": {
          "type": "string",
          "x-samplevalue": "Always"
        },
        "AddressBooks": {
          "type": "string"
        },
        "AddressBrazilianCNPJOrCPF": {
          "type": "string"
        },
        "AddressBrazilianIE": {
          "type": "string"
        },
        "AddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "AddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "AddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "AddressCounty": {
          "type": "string"
        },
        "AddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "AddressDistrictName": {
          "type": "string"
        },
        "AddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "AddressLocationRoles": {
          "type": "string",
          "x-samplevalue": "Business;Delivery;Invoice;Other"
        },
        "AddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "AddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "AddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "AddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "AddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "AddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "BirthCountyCode": {
          "type": "string"
        },
        "BirthPlace": {
          "type": "string"
        },
        "BrazilianCCM": {
          "type": "string"
        },
        "BrazilianCNAE": {
          "type": "string"
        },
        "BrazilianCNPJOrCPF": {
          "type": "string"
        },
        "BrazilianIE": {
          "type": "string"
        },
        "BrazilianINSSCEI": {
          "type": "string"
        },
        "BrazilianNIT": {
          "type": "string"
        },
        "CURPNumber": {
          "type": "string"
        },
        "CalculateWithholdingTax": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CentralBankPurposeCode": {
          "type": "string"
        },
        "CentralBankPurposeNotes": {
          "type": "string"
        },
        "ChargesGroupId": {
          "type": "string"
        },
        "CollectionsContactPersonId": {
          "type": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string"
        },
        "CommissionSalesGroupId": {
          "type": "string"
        },
        "CompanyChain": {
          "type": "string"
        },
        "CompanyType": {
          "type": "string",
          "x-samplevalue": "Blank"
        },
        "ConsolidationDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ContactPersonId": {
          "type": "string"
        },
        "CreditCardAddressVerification": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditCardAddressVerificationIsAuthorizationVoidedOnFailure": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditCardAddressVerificationLevel": {
          "type": "string",
          "x-samplevalue": "Accept"
        },
        "CreditCardCVC": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CreditLimitIsMandatory": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "CreditRating": {
          "type": "string"
        },
        "CustomerAccount": {
          "type": "string",
          "x-samplevalue": "DE-001"
        },
        "CustomerGroupId": {
          "type": "string",
          "x-samplevalue": "90"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string"
        },
        "CustomerRebateGroupId": {
          "type": "string"
        },
        "CustomerTMAGroupId": {
          "type": "string"
        },
        "CustomerWithholdingContributionType": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "DefaultDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "001--"
        },
        "DefaultInventoryStatusId": {
          "type": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "DeliveryAddressCounty": {
          "type": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "DeliveryAddressDistrictName": {
          "type": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "DeliveryAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "DeliveryAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "DeliveryFreightZone": {
          "type": "string"
        },
        "DeliveryMode": {
          "type": "string",
          "x-samplevalue": "40"
        },
        "DeliveryReason": {
          "type": "string"
        },
        "DeliveryTerms": {
          "type": "string",
          "x-samplevalue": "FOB"
        },
        "DestinationCode": {
          "type": "string"
        },
        "DiscountPriceGroupId": {
          "type": "string",
          "x-samplevalue": "09"
        },
        "ElectronicInvoiceEAN": {
          "type": "string"
        },
        "ElectronicLocationId": {
          "type": "string",
          "x-samplevalue": "000001200"
        },
        "EmployeeResponsibleNumber": {
          "type": "string"
        },
        "EnterpriseNumber": {
          "type": "string"
        },
        "ExportSale": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "FederalAgencyLocationCode": {
          "type": "string"
        },
        "FederalComments": {
          "type": "string"
        },
        "FederalIndicator": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "FiscalCode": {
          "type": "string"
        },
        "ForeignCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ForeignerId": {
          "type": "string"
        },
        "FrenchSiret": {
          "type": "string"
        },
        "FulfillmentErrorTolerance": {
          "type": "string",
          "x-samplevalue": "UseCompanyPolicy"
        },
        "FullPrimaryAddress": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5\n10115 Berlin\ndeu"
        },
        "GiroType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeAccountStatement": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeCollectionletter": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeFreeTextInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeInterestNote": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "GiroTypeProjInvoice": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "HasSuframaDiscountPISandCOFINS": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IRS1099CIndicator": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IdentificationNumber": {
          "type": "string"
        },
        "InvoiceAccount": {
          "type": "string"
        },
        "InvoiceAddress": {
          "type": "string",
          "x-samplevalue": "InvoiceAccount"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "Berlin"
        },
        "InvoiceAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "DE"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "DEU"
        },
        "InvoiceAddressCounty": {
          "type": "string"
        },
        "InvoiceAddressDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "InvoiceAddressDistrictName": {
          "type": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLocationId": {
          "type": "string",
          "x-samplevalue": "000001199"
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressState": {
          "type": "string",
          "x-samplevalue": "BE"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "Bahnhofstrasse 5"
        },
        "InvoiceAddressValidFrom": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-08-11T18:30:40Z"
        },
        "InvoiceAddressValidTo": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2154-12-31T23:59:59Z"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "10115"
        },
        "IsElectronicInvoice": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromCollectionFeeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExcludedFromInterestChargeCalculation": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExpressBillOfLadingAccepted": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsExternallyMaintained": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFreightAccrued": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsFuelSurchargeApplied": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsICMSContributor": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsInSuframaRegion": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsIncomingFiscalDocumentGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsOrderNumberReferenceUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsPurchRequestUsed": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDCaseTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDItemTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsRFIDPalletTaggingEnabled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsSalesTaxIncludedInPrices": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsTransactionPostedAsShipment": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "IsWithholdingTaxCalculated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "ItemCustomerGroupId": {
          "type": "string"
        },
        "KnownAs": {
          "type": "string"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "en-us"
        },
        "LineDiscountCode": {
          "type": "string"
        },
        "LineOfBusinessId": {
          "type": "string",
          "x-samplevalue": "2100"
        },
        "MultiLineDiscountCode": {
          "type": "string"
        },
        "NAFCode": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "NameAlias": {
          "type": "string",
          "x-samplevalue": "Contoso Europe"
        },
        "NationalRegistryNumber": {
          "type": "string"
        },
        "NatureOfAssessee": {
          "type": "string",
          "x-samplevalue": "Company"
        },
        "NumberSequenceGroup": {
          "type": "string"
        },
        "OnHoldStatus": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "OrderEntryDeadline": {
          "type": "string"
        },
        "OrganizationABCCode": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "OrganizationNumber": {
          "type": "string"
        },
        "OrganizationNumberOfEmployees": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrganizationPhoneticName": {
          "type": "string"
        },
        "PANNumber": {
          "type": "string"
        },
        "PANReferenceNumber": {
          "type": "string"
        },
        "PackingDutyLicense": {
          "type": "string"
        },
        "PackingMaterialFeeLicenseNumber": {
          "type": "string"
        },
        "PanStatus": {
          "type": "string",
          "x-samplevalue": "NotAvailable"
        },
        "PartyCountry": {
          "type": "string"
        },
        "PartyNumber": {
          "type": "string",
          "x-samplevalue": "000000838"
        },
        "PartyState": {
          "type": "string"
        },
        "PartyType": {
          "type": "string",
          "x-samplevalue": "Organization"
        },
        "PaymentBankAccount": {
          "type": "string"
        },
        "PaymentCashDiscount": {
          "type": "string"
        },
        "PaymentDay": {
          "type": "string"
        },
        "PaymentFactoringAccount": {
          "type": "string"
        },
        "PaymentIdType": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentSchedule": {
          "type": "string"
        },
        "PaymentSpecification": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string",
          "x-samplevalue": "Net10"
        },
        "PaymentTermsBaseDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PaymentUseCashDiscount": {
          "type": "string",
          "x-samplevalue": "Normal"
        },
        "PersonAnniversaryDay": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonAnniversaryMonth": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonAnniversaryYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PersonChildrenNames": {
          "type": "string"
        },
        "PersonGender": {
          "type": "string",
          "x-samplevalue": "Unknown"
        },
        "PersonHobbies": {
          "type": "string"
        },
        "PersonInitials": {
          "type": "string"
        },
        "PersonMaritalStatus": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "PersonPhoneticFirstName": {
          "type": "string"
        },
        "PersonPhoneticLastName": {
          "type": "string"
        },
        "PersonPhoneticMiddleName": {
          "type": "string"
        },
        "PersonProfessionalSuffix": {
          "type": "string"
        },
        "PersonProfessionalTitle": {
          "type": "string"
        },
        "PreferentialCustomer": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmail": {
          "type": "string",
          "x-samplevalue": "contoso.europe@vendor8.consolidatedmessenger.com"
        },
        "PrimaryContactEmailDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Email"
        },
        "PrimaryContactEmailIsIM": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactEmailPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactFacebook": {
          "type": "string"
        },
        "PrimaryContactFacebookDescription": {
          "type": "string"
        },
        "PrimaryContactFacebookPurpose": {
          "type": "string"
        },
        "PrimaryContactFax": {
          "type": "string"
        },
        "PrimaryContactFaxDescription": {
          "type": "string"
        },
        "PrimaryContactFaxExtension": {
          "type": "string"
        },
        "PrimaryContactFaxPurpose": {
          "type": "string"
        },
        "PrimaryContactLinkedIn": {
          "type": "string"
        },
        "PrimaryContactLinkedInDescription": {
          "type": "string"
        },
        "PrimaryContactLinkedInPurpose": {
          "type": "string"
        },
        "PrimaryContactPhone": {
          "type": "string",
          "x-samplevalue": "01234 56789"
        },
        "PrimaryContactPhoneDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Phone"
        },
        "PrimaryContactPhoneExtension": {
          "type": "string"
        },
        "PrimaryContactPhoneIsMobile": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PrimaryContactPhonePurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactTelex": {
          "type": "string",
          "x-samplevalue": "01234 56789"
        },
        "PrimaryContactTelexDescription": {
          "type": "string",
          "x-samplevalue": "Contoso Europe Telex"
        },
        "PrimaryContactTelexPurpose": {
          "type": "string",
          "x-samplevalue": "Business"
        },
        "PrimaryContactTwitter": {
          "type": "string"
        },
        "PrimaryContactTwitterDescription": {
          "type": "string"
        },
        "PrimaryContactTwitterPurpose": {
          "type": "string"
        },
        "PrimaryContactURL": {
          "type": "string"
        },
        "PrimaryContactURLDescription": {
          "type": "string"
        },
        "PrimaryContactURLPurpose": {
          "type": "string"
        },
        "RFCNumber": {
          "type": "string"
        },
        "ReceiptCalendar": {
          "type": "string",
          "x-samplevalue": "Production"
        },
        "ReceiptEmail": {
          "type": "string"
        },
        "ReceiptOption": {
          "type": "string",
          "x-samplevalue": "RetailEx3"
        },
        "ReliefGroupId": {
          "type": "string"
        },
        "ResidenceForeignCountryRegionId": {
          "type": "string"
        },
        "SalesAccountNumber": {
          "type": "string"
        },
        "SalesCurrencyCode": {
          "type": "string",
          "x-samplevalue": "EUR"
        },
        "SalesDistrict": {
          "type": "string"
        },
        "SalesMemo": {
          "type": "string"
        },
        "SalesOrderPoolId": {
          "type": "string"
        },
        "SalesReturnTaxGroup": {
          "type": "string"
        },
        "SalesSegmentId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "SalesSubsegmentId": {
          "type": "string",
          "x-samplevalue": "10"
        },
        "SalesTaxGroup": {
          "type": "string",
          "x-samplevalue": "EXMPT FOR"
        },
        "SiteId": {
          "type": "string"
        },
        "StateInscription": {
          "type": "string"
        },
        "StatisticsGroupId": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "SuframaNumber": {
          "type": "string"
        },
        "SupplementaryItemGroupId": {
          "type": "string"
        },
        "TCSGroup": {
          "type": "string"
        },
        "TDSGroup": {
          "type": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-samplevalue": "998765"
        },
        "TaxRegistrationId": {
          "type": "string"
        },
        "TotalDiscountCode": {
          "type": "string"
        },
        "TransactionPresenceType": {
          "type": "string",
          "x-samplevalue": "DoesNotApply"
        },
        "VendorAccount": {
          "type": "string"
        },
        "WarehouseFulfillmentRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WarehouseFulfillmentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "WarehouseId": {
          "type": "string"
        },
        "WarehouseIsASNGenerated": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WarehouseIsEntireShipmentFilled": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "WithholdingTaxGroupCode": {
          "type": "string"
        },
        "WriteoffReason": {
          "type": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "usmf"
        }
      },
      "title": "customer",
      "x-has-customfields": false,
      "x-primary-key": [
        "CustomerAccount"
      ],
      "x-vendor-objectname": "Customers",
      "type": "object"
    },
    "ordersPatchReq": {
      "properties": {
        "ArePricesIncludingSalesTax": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AreTotalsCalculated": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BankConstantSymbol": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BankSpecificSymbol": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CFPSCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CampaignId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CashDiscountCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ChargeCustomerGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CommissionCustomerGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CommissionSalesRepresentativeGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ConfirmedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "ConfirmedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "ContactPersonId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CreditNoteReasonCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CurrencyCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerPaymentFinancialInterestCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerPaymentFineCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerPaymentMethodName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerPaymentMethodSpecificationName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerPostingProfileId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerRequisitionNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomerTransactionSettlementType": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CustomersOrderReference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DefaultLedgerDimensionDisplayValue": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DefaultShippingSiteId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DefaultShippingWarehouseId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressCity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressCountryRegionISOCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressCountyId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressDescription": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressDistrictName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressDunsNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressLocationId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DeliveryAddressName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressPostBox": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressStateId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressStreet": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressStreetNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryAddressZipCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryBuildingCompliment": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryModeCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryReasonCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DeliveryTermsCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DirectDebitMandateId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EInvoiceDimensionAccountCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EUSalesListCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ExportReason": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FiscalDocumentOperationTypeId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FiscalDocumentTypeId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FiscalOperationPresenceType": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FixedDueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "FixedExchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "FormattedDelveryAddress": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FormattedInvoiceAddress": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IntrastatPortId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IntrastatStatisticsProcedureCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IntrastatTransactionCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IntrastatTransportModeCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InventoryReservationMethod": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressCity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressCountryRegionId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressCountyId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressDistrictName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressLatitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressLongitude": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "InvoiceAddressPostBox": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressStateId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressStreet": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressStreetNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceAddressZipCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceBuildingCompliment": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoicePaymentAttachmentType": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "InvoiceType": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsConsolidatedInvoiceTarget": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsDeliveryAddressOrderSpecific": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsDeliveryAddressPrivate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsEInvoiceDimensionAccountCodeSpecifiedPerLine": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsEntryCertificateRequired": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsExportSale": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsFinalUser": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsInvoiceAddressPrivate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsOneTimeCustomer": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsOwnEntryCertificateIssued": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsSalesProcessingStopped": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "IsServiceDeliveryAddressBased": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LanguageId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LineDiscountCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MultilineDiscountCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "NumberSequenceGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "OrderResponsiblePersonnelNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "OrderTakerPersonnelNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "OrderTotalAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalChargesAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderTotalTaxAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OrderingCustomerAccountNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PaymentScheduleName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PaymentTermsBaseDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "PaymentTermsName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PriceCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "QuotationNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RequestedReceiptDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "RequestedShippingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-01-21T06:48:00.944Z"
        },
        "SalesOrderName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderOriginCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderPoolId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderProcessingStatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderPromisingMethod": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesOrderStatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesRebateCustomerGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesTaxGroupCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SalesUnitId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ServiceFiscalInformationCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ShippingCarrierId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ShippingCarrierServiceGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ShippingCarrierServiceId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TMACustomerGroupId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TaxExemptNumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TotalDiscountAmount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TotalDiscountCustomerGroupCode": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TotalDiscountPercentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TransportationBrokerId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TransportationDocumentLineId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TransportationModeId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TransportationRoutePlanId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TransportationTemplateId": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WillAutomaticInventoryReservationConsiderBatchAttributes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "dataAreaId": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "ordersPatchReq",
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "Microsoft Dynamics 365 Finance and Operations",
    "x-element-hub": "finance",
    "x-element-key": "dynamics365fo",
    "title": "dynamics365fo",
    "x-element-id": 15343,
    "version": "api-v2",
    "description": "Microsoft Dynamics 365 Finance and Operations"
  },
  "tags": [
    {
      "name": "Bulk"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Customer Groups"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Ledger Lines"
    },
    {
      "name": "Ledgers"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Products"
    },
    {
      "name": "Purchase Orders"
    },
    {
      "name": "Quote Headers"
    },
    {
      "name": "Quote Lines"
    },
    {
      "name": "Sales Invoices"
    },
    {
      "name": "Sales Order Confirmations"
    },
    {
      "name": "Sales Orders"
    },
    {
      "name": "Sales Orders Line Items"
    },
    {
      "name": "Vendor Invoices"
    },
    {
      "name": "Vendor Invoices Line Items"
    },
    {
      "name": "Vendor Metadata"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Enterprise resource planning system for medium to large organizations",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/dynamics365fo"
  }
}