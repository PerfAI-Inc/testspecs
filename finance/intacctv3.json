{
  "basePath": "/elements/api-v2",
  "paths": {
    "/account-balances": {
      "get": {
        "summary": "Search for account balances",
        "operationId": "getAccountBalances",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountsBalanceListGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, PERIOD = 'Month Ended June 2016', PERIOD = 'Month Ended May 2017' AND NOT (TOTDEBIT = 0 AND TOTCREDIT = 0 AND TOTADJDEBIT = 0 AND TOTADJCREDIT = 0 AND FORBAL = 0 AND ENDBAL = 0)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Account Balances"
        ]
      }
    },
    "/account-groups": {
      "post": {
        "summary": "Create an account group",
        "operationId": "createAccountGroup",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/accountGroupsResP"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createAccountGroup"
            },
            "in": "body",
            "name": "body",
            "description": "The account-group object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Groups"
        ]
      },
      "get": {
        "summary": "Search for account groups",
        "operationId": "getAccountGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/21/2018 07:35:34'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/account-groups/{id}": {
      "patch": {
        "summary": "Update an account group",
        "operationId": "updateAccountGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/accountGroupsResU"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateAccountGroup"
            },
            "in": "body",
            "name": "body",
            "description": "The account-group object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Groups"
        ]
      },
      "get": {
        "summary": "Retrieve an account group",
        "operationId": "getAccountGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/accountGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Groups"
        ]
      },
      "delete": {
        "summary": "Delete an account group",
        "operationId": "deleteAccountGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/account-titles": {
      "get": {
        "summary": "Search for account titles",
        "operationId": "getAccountTitles",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountTitlesGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/21/2018 07:35:34'`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Titles"
        ]
      }
    },
    "/account-titles/{id}": {
      "get": {
        "summary": "Retrieve an account title",
        "operationId": "getAccountTitleById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/accountTitlesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Account Titles"
        ]
      }
    },
    "/ach-bank-configurations": {
      "get": {
        "summary": "Search for ACH bank configurations",
        "operationId": "getAchBankConfigurations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/achBankConfigurationsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/21/2018 07:35:34'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "ACH Bank Configurations"
        ]
      }
    },
    "/ach-bank-configurations/{id}": {
      "get": {
        "summary": "Retrieve an ACH bank configuration",
        "operationId": "getAchBankConfigurationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/achBankConfigurationsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "ACH Bank Configurations"
        ]
      }
    },
    "/allocations": {
      "post": {
        "summary": "Create an allocation",
        "operationId": "createAllocation",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/allocationsReqP"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createAllocationsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The allocation object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Allocations"
        ]
      },
      "get": {
        "summary": "Search for transaction allocations",
        "operationId": "getAllocations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/allocationsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/14/2018 06:25:04'`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Allocations"
        ]
      }
    },
    "/allocations/{id}": {
      "patch": {
        "summary": "Update an allocation",
        "operationId": "updateAllocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/patchAllocationsResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateAllocations"
            },
            "in": "body",
            "name": "body",
            "description": "The allocation object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Allocations"
        ]
      },
      "get": {
        "summary": "Retrieve an allocation",
        "operationId": "getAllocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/getAllocationsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Allocations"
        ]
      },
      "delete": {
        "summary": "Delete an allocation",
        "operationId": "deleteAllocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Allocations"
        ]
      }
    },
    "/ap-account-labels": {
      "post": {
        "summary": "Create an  (Accounts Payable)  account label",
        "operationId": "createApAccountLabel",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PostapAccountLabelsP"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createApAccountLabel"
            },
            "in": "body",
            "name": "body",
            "description": "The ap-account-label object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Account Labels"
        ]
      },
      "get": {
        "summary": "Search for  (Accounts Payable)  account labels",
        "operationId": "getApAccountLabels",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/apAccountLabelsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 7`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Account Labels"
        ]
      }
    },
    "/ap-account-labels/{id}": {
      "patch": {
        "summary": "Update an  (Accounts Payable)  account label",
        "operationId": "updateApAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/patchapAccountLabels"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateApAccountLabel"
            },
            "in": "body",
            "name": "body",
            "description": "The ap-account-label object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Account Labels"
        ]
      },
      "get": {
        "summary": "Retrieve an  (Accounts Payable)  account label",
        "operationId": "getApAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/apGetAccountLabelsRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Account Labels"
        ]
      },
      "delete": {
        "summary": "Delete an  (Accounts Payable)  account label",
        "operationId": "deleteApAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Account Labels"
        ]
      }
    },
    "/ap-adjustments": {
      "get": {
        "summary": "Search for AP(Account Payable) adjustments",
        "operationId": "getApAdjustments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebitMemoListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> CREATED_AT >'04/19/1990 12:00:00'</i>. Note: Vendor API documentation says it's Required field but it works even we don't provide filter query",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Adjustments"
        ]
      }
    },
    "/ap-adjustments/{id}": {
      "get": {
        "summary": "Retrieve a AP(Account Payable) adjustments",
        "operationId": "getApAdjustmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/DebitMemoById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Adjustments"
        ]
      },
      "delete": {
        "summary": "Delete a AP(Account Payable) adjustments",
        "operationId": "deleteApAdjustmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Adjustments"
        ]
      }
    },
    "/ap-bills": {
      "post": {
        "summary": "Create a bill",
        "operationId": "createApBill",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/apBillsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/apBillsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The bill object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Bills"
        ]
      },
      "get": {
        "summary": "Search for bills",
        "operationId": "getApBills",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/apBillsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED>'04/19/1990 12:00:00'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Bills"
        ]
      }
    },
    "/ap-bills/{id}": {
      "patch": {
        "summary": "Update a bill",
        "operationId": "updateApBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/apBillsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/apBillsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The bills object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Bills"
        ]
      },
      "get": {
        "summary": "Retrieve a bill",
        "operationId": "getApBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/apBillsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Bills"
        ]
      },
      "delete": {
        "summary": "Delete a bill",
        "operationId": "deleteApBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Bills"
        ]
      }
    },
    "/ap-terms": {
      "get": {
        "summary": "Search for (Accounts Payable) terms",
        "operationId": "getApTerms",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/apTermsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/08/2018 07:50:15'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Terms"
        ]
      }
    },
    "/ap-terms/{id}": {
      "get": {
        "summary": "Retrieve an (Accounts Payable) term",
        "operationId": "getApTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/apTermsByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Payable Terms"
        ]
      }
    },
    "/ar-account-labels": {
      "post": {
        "summary": "Create an (Accounts Receivable) account label",
        "operationId": "createArAccountLabel",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/postARAccountLabelsRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createArAccountLabel"
            },
            "in": "body",
            "name": "body",
            "description": "The ar-account-label object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Account Labels"
        ]
      },
      "get": {
        "summary": "Search for (Accounts Receivable) account labels",
        "operationId": "getArAccountLabels",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/arAccountLabelsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comm separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 17`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Account Labels"
        ]
      }
    },
    "/ar-account-labels/{id}": {
      "patch": {
        "summary": "Update an (Accounts Receivable) account label",
        "operationId": "updateArAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/patchARAccountLabel"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateArAccountLabel"
            },
            "in": "body",
            "name": "body",
            "description": "The ar-account-label object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Account Labels"
        ]
      },
      "get": {
        "summary": "Retrieve an (Accounts Receivable) account label",
        "operationId": "getArAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/arAccountLabelsRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Account Labels"
        ]
      },
      "delete": {
        "summary": "Delete an (Accounts Receivable) account label",
        "operationId": "deleteArAccountLabelById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Account Labels"
        ]
      }
    },
    "/ar-adjustments": {
      "get": {
        "summary": "Search for AR (Accounts Receivable) adjustments",
        "operationId": "getArAdjustments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/creditMemosAdvancedGETALLObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separator fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> DOCNUMBER=20621 </i>.\\n With complex queries: <i>(DOCNUMBER=20621 and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Adjustments"
        ]
      }
    },
    "/ar-adjustments-legacy": {
      "post": {
        "operationId": "createArAdjustmentsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/arAdjustmentsPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/arAdjustmentsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ar-adjustments object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Adjustments Legacy"
        ],
        "summary": "Create an AR (Accounts Receivable) adjustment"
      }
    },
    "/ar-adjustments-legacy/{id}": {
      "patch": {
        "operationId": "updateArAdjustmentsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/arAdjustmentsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ar-adjustments ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/arAdjustmentsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ar-adjustments object body. To update a line item, add 'linenum' to the 'lineitem' object.",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Adjustments Legacy"
        ],
        "summary": "Update an AR (Accounts Receivable) adjustment"
      }
    },
    "/ar-adjustments/{id}": {
      "get": {
        "summary": "Retrieve a AR (Accounts Receivable) adjustments",
        "operationId": "getArAdjustmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/creditMemosGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Adjustments"
        ]
      },
      "delete": {
        "summary": "Delete a AR (Accounts Receivable) adjustments",
        "operationId": "deleteArAdjustmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Adjustments"
        ]
      }
    },
    "/ar-terms": {
      "get": {
        "summary": "Search for AR (Accounts Receivable) terms",
        "operationId": "getArTerms",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/arTermsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Terms"
        ]
      }
    },
    "/ar-terms/{id}": {
      "get": {
        "summary": "Retrieve a AR (Accounts Receivable) term ",
        "operationId": "getArTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/artermsByIdResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Accounts Receivable Terms"
        ]
      }
    },
    "/audit-logs": {
      "get": {
        "summary": "Search for audit logs",
        "operationId": "getAuditLogs",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/auditLogsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> vendorid='V102'</i>. Note: Vendor API documentation says it's Required field but it works even we don't provide filter query",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/audit-logs/{id}": {
      "get": {
        "summary": "Retrieve an audit log",
        "operationId": "getAuditLogById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/auditLogsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/audits": {
      "get": {
        "summary": "Search for audits",
        "operationId": "getAudits",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/auditsHistoryGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `ACCESSMODE='Delete'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Audits"
        ]
      }
    },
    "/bills-payments": {
      "post": {
        "summary": "Create a payment to record against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "createBillsPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/postBillsPayments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/billsPaymentsCreate"
            },
            "in": "body",
            "name": "body",
            "description": "The payments object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments"
        ]
      },
      "get": {
        "summary": "Search for payments that have been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "getBillsPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/billsPaymentsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((totalpaid > 0 and totaldue > 0) or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments"
        ]
      }
    },
    "/bills-payments-details": {
      "get": {
        "summary": "Search for payments details that have been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "getBillsPaymentsDetails",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/billsPaymentsDetailsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i>  whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments Details"
        ]
      }
    },
    "/bills-payments-details/{id}": {
      "get": {
        "summary": "Search for payments details that have been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "getBillsPaymentsDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/billsPaymentsDetailsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments Details"
        ]
      }
    },
    "/bills-payments/{id}": {
      "patch": {
        "summary": "Update an payment that has been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "updateBillsPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/patchBillsPaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/billsPaymentsUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The bills-payment object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments"
        ]
      },
      "get": {
        "summary": "Retrieve a payment that has been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "getBillsPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/billsPaymentsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments"
        ]
      },
      "delete": {
        "summary": "Delete a payment that has been recorded against an AP (Accounts Payable) invoice or AP adjustment",
        "operationId": "deleteBillsPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bills Payments"
        ]
      }
    },
    "/bulk/download": {
      "post": {
        "summary": "Create a new bulk download job (asynchronous)",
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Fetch all the bulk jobs for an instance",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Cancel an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the errors of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the status of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the results of an asynchronous bulk query.",
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ]
      }
    },
    "/bulk/{objectName}": {
      "post": {
        "operationId": "createBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of the object for which data needs to be uploaded.",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" :&lt;path for the sub resource&gt;, \"format\": &lt;json/csv&gt;, \"callback-payload\":&lt;json&gt;}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          },
          {
            "description": "The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line",
            "in": "formData",
            "name": "file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkUploadResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Upload a file of objects to be bulk uploaded to the provider.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/charge-card-accounts": {
      "get": {
        "summary": "Search for charge card accounts",
        "operationId": "getChargeCardAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/chargeCardAccountsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '01/22/2018 08:03:02'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Charge Card Accounts"
        ]
      }
    },
    "/charge-card-accounts/{id}": {
      "get": {
        "summary": "Retrieve a charge card account",
        "operationId": "getChargeCardAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/chargeCardAccountsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Charge Card Accounts"
        ]
      }
    },
    "/charge-card-transactions": {
      "get": {
        "summary": "Search for charge card transactions",
        "operationId": "getChargeCardTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ccTransactionsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> BANKACCOUNTID='CHK-WFB0004' </i>. With complex queries: <i>(BANKACCOUNTID='CHK-WFB0004' and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Charge Card Transactions"
        ]
      }
    },
    "/charge-card-transactions/{id}": {
      "get": {
        "summary": "Retrieve a charge card transaction",
        "operationId": "getChargeCardTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ccTransactionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Charge Card Transactions"
        ]
      }
    },
    "/checking-accounts": {
      "get": {
        "summary": "Search for checking accounts",
        "operationId": "getCheckingAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/checkingAccountsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> BANKACCOUNTID='CHK-WFB0004' </i>. With complex queries: <i>(BANKACCOUNTID='CHK-WFB0004' and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Checking Accounts"
        ]
      }
    },
    "/checking-accounts/{id}": {
      "get": {
        "summary": "Retrieve a checking account",
        "operationId": "getCheckingAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/checkingAccountsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Checking Accounts"
        ]
      }
    },
    "/class-groups": {
      "get": {
        "summary": "Search for class groups",
        "operationId": "getClassGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/classGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1` ",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Class Groups"
        ]
      }
    },
    "/class-groups/{id}": {
      "get": {
        "summary": "Retrieve a class group",
        "operationId": "getClassGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/classGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Class Groups"
        ]
      }
    },
    "/classes": {
      "post": {
        "summary": "Create a class ",
        "operationId": "createClasse",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/newClassesResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/newClass"
            },
            "in": "body",
            "name": "body",
            "description": "The class object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Classes"
        ]
      },
      "get": {
        "summary": "Search for classes ",
        "operationId": "getClasses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/classesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> whenmodified>='08/13/2016 05:26:37' and status = 'active' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Classes"
        ]
      }
    },
    "/classes/{id}": {
      "patch": {
        "summary": "Update a class ",
        "operationId": "updateClasseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/updateClassesResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateClass"
            },
            "in": "body",
            "name": "body",
            "description": "The class object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Classes"
        ]
      },
      "get": {
        "summary": "Retrieve a class ",
        "operationId": "getClasseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/classesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Classes"
        ]
      },
      "delete": {
        "summary": "Delete a class ",
        "operationId": "deleteClasseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Classes"
        ]
      }
    },
    "/contacts": {
      "post": {
        "summary": "Create a contact ",
        "operationId": "createContact",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactsPOSTresponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/contactsPOSTRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The contact object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "summary": "Search for contacts",
        "operationId": "getContacts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactsAdvancedGETAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> FIRSTNAME='TestName' </i>. With complex queries: <i>(FIRSTNAME='TestName' and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{id}": {
      "patch": {
        "summary": "Update a contact",
        "operationId": "updateContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactsPATCHresponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/contactsPATCHRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The contact object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "summary": "Retrieve a contact ",
        "operationId": "getContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactsGETById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      },
      "delete": {
        "summary": "Delete a contact ",
        "operationId": "deleteContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contracts": {
      "post": {
        "summary": "Create a contract",
        "operationId": "createContract",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/createContractResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createContractRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The contract object body",
            "required": true
          }
        ],
        "tags": [
          "Contracts"
        ]
      },
      "get": {
        "summary": "Search for Contracts",
        "operationId": "getContracts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contractListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenModified>='08/08/2017 15:22:31' </i>. With complex queries: <i> locationId=120 AND  whenModified>='08/08/2017 15:22:31' </i>",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/{id}": {
      "patch": {
        "summary": "Update a contract",
        "operationId": "updateContractById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contractPatchResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/contractPatchRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The contract object body",
            "required": true
          }
        ],
        "tags": [
          "Contracts"
        ]
      },
      "get": {
        "summary": "Retrieve a Contract",
        "operationId": "getContractById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contractGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contracts"
        ]
      },
      "delete": {
        "summary": "Delete a Contract",
        "operationId": "deleteContractById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Contracts"
        ]
      }
    },
    "/credit-card-charges": {
      "get": {
        "summary": "Search for encompasses finance charges, late charges, and other fees for a credit card.",
        "operationId": "getCreditCardCharges",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/creditCardChargeListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '01/22/2018 08:03:02'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Charges"
        ]
      }
    },
    "/credit-card-charges/{id}": {
      "get": {
        "summary": "Retrieves encompasses finance charges, late charges, and other fees",
        "operationId": "getCreditCardChargeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/creditCardChargesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Charges"
        ]
      }
    },
    "/credit-card-fee-entries": {
      "get": {
        "summary": "Search for encompasses finance charges, late charges, and other fees for a credit card.",
        "operationId": "getCreditCardFeeEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/creditCardFeeEntriesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '01/22/2018 08:03:02'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Fee Entries"
        ]
      }
    },
    "/credit-card-fee-entries/{id}": {
      "get": {
        "summary": "Retrieves encompasses finance charges, late charges, and other fees",
        "operationId": "getCreditCardFeeEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/creditCardFeeEntryById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Fee Entries"
        ]
      }
    },
    "/credit-card-fees": {
      "get": {
        "summary": "Search for encompasses finance charges, late charges, and other fees for a credit card.",
        "operationId": "getCreditCardFees",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/creditCardFeesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '01/22/2018 08:03:02'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Fees"
        ]
      }
    },
    "/credit-card-fees/{id}": {
      "get": {
        "summary": "Retrieves encompasses finance charges, late charges, and other fees",
        "operationId": "getCreditCardFeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/creditCardFeeById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Credit Card Fees"
        ]
      }
    },
    "/customer-types": {
      "get": {
        "summary": "Search for customer types",
        "operationId": "getCustomerTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customerTypesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '04/18/2018 11:13:13'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customer Types"
        ]
      }
    },
    "/customer-types/{id}": {
      "get": {
        "summary": "Retrieve a customer type",
        "operationId": "getCustomerTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customerTypesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customer Types"
        ]
      }
    },
    "/customers": {
      "post": {
        "summary": "Create a customer ",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPOSTResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPOSTRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The customer object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Search for customers",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customersAdvancedGETALLObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> CUSTOMERID=1007 </i>.\\n With complex queries: <i>(CUSTOMERID=1007 and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/{id}": {
      "patch": {
        "summary": "Update a customer",
        "operationId": "updateCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPATCHResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPATCHRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The customer object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Retrieve a customer ",
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersGETById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "summary": "Delete a customer",
        "operationId": "deleteCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/department-groups": {
      "get": {
        "summary": "Search for department groups",
        "operationId": "getDepartmentGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/departmentGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Department Groups"
        ]
      }
    },
    "/department-groups/{id}": {
      "get": {
        "summary": "Retrieve a department group",
        "operationId": "getDepartmentGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/departmentGroupsByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Department Groups"
        ]
      }
    },
    "/departments": {
      "post": {
        "summary": "Create a department",
        "operationId": "createDepartment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/departmentsResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/departments"
            },
            "in": "body",
            "name": "body",
            "description": "The department object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "get": {
        "summary": "Search for departments       ",
        "operationId": "getDepartments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/departmentsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> status = 'active' </i>. With complex queries: <i> whenmodified>='08/13/2016 05:26:37' and status = 'active' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of fields on the object to list",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      }
    },
    "/departments/{id}": {
      "patch": {
        "summary": "Update a department      ",
        "operationId": "updateDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/departmentsUpdateRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/departmentUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The departments object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "get": {
        "summary": "Retrieve a department  ",
        "operationId": "getDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/departmentsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of fields on the object to list",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "delete": {
        "summary": "Delete a department    ",
        "operationId": "deleteDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      }
    },
    "/deposits": {
      "get": {
        "summary": "Search for deposits",
        "operationId": "getDeposits",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/depositsGetListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> WHENMODIFIED > '04/18/2018 05:07:40'</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Deposits"
        ]
      }
    },
    "/deposits/{id}": {
      "get": {
        "summary": "Retrieve a deposit ",
        "operationId": "getDepositById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/depositsRetrive"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Deposits"
        ]
      }
    },
    "/dimensions": {
      "get": {
        "summary": "Search for dimensions",
        "operationId": "getDimensions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dimensionsGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Dimensions"
        ]
      }
    },
    "/employees": {
      "post": {
        "summary": "Create an employee ",
        "operationId": "createEmployee",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/employeesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/employeesPost"
            },
            "in": "body",
            "name": "body",
            "description": "The employee object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "get": {
        "summary": "Search for employees ",
        "operationId": "getEmployees",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/employeesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((recordno > 1 and recordno < 10) or whenmodified > '08/17/2016 17:33:34') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/employees/{id}": {
      "patch": {
        "summary": "Update an employee  ",
        "operationId": "updateEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/employeesPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/employeesPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The customers object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "get": {
        "summary": "Retrieve an employee  ",
        "operationId": "getEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/employeesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "delete": {
        "summary": "Delete an employee ",
        "operationId": "deleteEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/entities": {
      "get": {
        "summary": "Search for location entities ",
        "operationId": "getEntities",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entitiesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. Ex CITY='Denver'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of fields on the object to list",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/{id}": {
      "get": {
        "summary": "Retrieve a location entity ",
        "operationId": "getEntityById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/entitiesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma-separated list of fields on the object to get.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/exchange-rate-entries": {
      "get": {
        "summary": "Search for exchange rate entries.",
        "operationId": "getExchangeRateEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exchangeRateEntryGetListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> EXCHANGE_RATE='55' OR whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rate Entries"
        ]
      }
    },
    "/exchange-rate-entries/{id}": {
      "get": {
        "summary": "Retrieve an exchange rate entity.",
        "operationId": "getExchangeRateEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangerateentryObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rate Entries"
        ]
      }
    },
    "/exchange-rate-types": {
      "get": {
        "summary": "Search for exchange rate types.",
        "operationId": "getExchangeRateTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exchangeRateTypesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> Name='Test'</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rate Types"
        ]
      }
    },
    "/exchange-rate-types/{id}": {
      "get": {
        "summary": "Retrieve an exchange rate type.",
        "operationId": "getExchangeRateTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangerateType"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rate Types"
        ]
      }
    },
    "/exchange-rates": {
      "post": {
        "summary": "Create an exchange rate.",
        "operationId": "createExchangeRate",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangeRateResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/exchangeRateCreate"
            },
            "in": "body",
            "name": "body",
            "description": "The exchange-rates object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rates"
        ]
      },
      "get": {
        "summary": "Search for exchange rates.",
        "operationId": "getExchangeRates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exchangeRateGetListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> TypeName='TEST&#39 and or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rates"
        ]
      }
    },
    "/exchange-rates/{id}": {
      "get": {
        "summary": "Retrieve an exchange rate.",
        "operationId": "getExchangeRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangeRateObjectById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rates"
        ]
      }
    },
    "/expense-reports": {
      "get": {
        "summary": "Search for expense reports",
        "operationId": "getExpenseReports",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/expenseReportsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> expensereportno = 'EXP0002' </i>. With complex queries: <i> ((batchkey=1 or expensereportno= 'EXP0002') and totalamount = 900)</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Expense Reports"
        ]
      }
    },
    "/expense-reports/{id}": {
      "get": {
        "summary": "Retrieve an expense report",
        "operationId": "getExpenseReportById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/expenseReportsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Expense Reports"
        ]
      },
      "delete": {
        "summary": "Delete an expense report",
        "operationId": "deleteExpenseReportById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Expense Reports"
        ]
      }
    },
    "/folders-legacy": {
      "post": {
        "summary": "Create a folder",
        "operationId": "createFoldersLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/foldersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/foldersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The folder object body",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "get": {
        "summary": "Search for folders",
        "operationId": "getFoldersLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/foldersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      }
    },
    "/folders-legacy/{folderName}": {
      "patch": {
        "summary": "Update a folder",
        "operationId": "updateFoldersLegacyByFolderName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/foldersUpdateResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folder name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateFolder"
            },
            "in": "body",
            "name": "body",
            "description": "The XML request body.",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "get": {
        "summary": "Retrieve a folder",
        "operationId": "getFoldersLegacyByFolderName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/foldersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folder name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "delete": {
        "summary": "Delete a folder",
        "operationId": "deleteFoldersLegacyByFolderName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folder name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      }
    },
    "/folders-legacy/{folderName}/files": {
      "post": {
        "summary": "Create a file in a given folder",
        "operationId": "createFoldersLegacyFile",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/files"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folderName ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/createFile"
            },
            "in": "body",
            "name": "body",
            "description": "The attachment object body",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "get": {
        "summary": "Get all files in a folder",
        "operationId": "getFoldersLegacyFiles",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/foldersFilesObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folderName",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The orderBy clause, either asc or desc. The format is fieldName order, for example: <i> whenmodified desc </i>. Or with multiple sorts with a comma separator: <i> totalpaid asc, totaldue desc </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      }
    },
    "/folders-legacy/{folderName}/files/{id}": {
      "patch": {
        "summary": "Update the file in a given folder",
        "operationId": "updateFoldersLegacyFileById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/foldersFiles"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folderName",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The supdoc Id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateFile"
            },
            "in": "body",
            "name": "body",
            "description": "The XML request body.",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "get": {
        "summary": "Get a file from a given folder by id",
        "operationId": "getFoldersLegacyFileById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/filesGet"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folderName",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The supdoc Id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      },
      "delete": {
        "summary": "Delete a file in the given folder",
        "operationId": "deleteFoldersLegacyFileById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "folderName",
            "description": "The folderName",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The supdoc Id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Folders Legacy"
        ]
      }
    },
    "/inventory-control-price-lists": {
      "get": {
        "summary": "Search for inventory control price lists",
        "operationId": "getInventoryControlPriceLists",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryControlPriceListsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Control Price Lists"
        ]
      }
    },
    "/inventory-control-price-lists/{id}": {
      "get": {
        "summary": "Retrieve an inventory control price list",
        "operationId": "getInventoryControlPriceListById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryControlPriceListsByID"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Control Price Lists"
        ]
      }
    },
    "/inventory-transaction-definitions": {
      "get": {
        "summary": "Search for inventory definitions",
        "operationId": "getInventoryTransactionDefinitions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryTransactionDefinationsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transaction Definitions"
        ]
      }
    },
    "/inventory-transaction-definitions/{id}": {
      "get": {
        "summary": "Retrieve an inventory definition",
        "operationId": "getInventoryTransactionDefinitionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransactionEntriesByID"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transaction Definitions"
        ]
      }
    },
    "/inventory-transaction-entries": {
      "get": {
        "summary": "Search for inventory transaction entries",
        "operationId": "getInventoryTransactionEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransactionEntriesList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer).",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transaction Entries"
        ]
      }
    },
    "/inventory-transaction-entries/{id}": {
      "get": {
        "summary": "Retrieve an inventory transaction entry",
        "operationId": "getInventoryTransactionEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransactionEntriesByID"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer).",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transaction Entries"
        ]
      }
    },
    "/inventory-transactions": {
      "get": {
        "summary": "Search for inventory transactions",
        "operationId": "getInventoryTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryTransactionsListsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: WHENMODIFIED = '08/13/2016 05:26:37'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions"
        ]
      }
    },
    "/inventory-transactions-legacy": {
      "post": {
        "summary": "Create a inventory transfer or an adjustment  ",
        "operationId": "createInventoryTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/InventoryTransactionsLegacyPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/InventoryTransactionLegacyPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "Inventory transaction body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Search for inventory transfer or an adjustment",
        "operationId": "getInventoryTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryTransactionLegacyListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The orderBy clause, either asc or desc. The format is fieldName order, for example: <i> whenmodified desc </i>. Or with multiple sorts with a comma separator: <i> whenmodified desc, transactionid desc </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((transactionstate = 'Pending' and status = 'active') or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Inventory Transactions Legacy"
        ]
      }
    },
    "/inventory-transactions-legacy/{id}": {
      "patch": {
        "summary": "Update a inventory transfer or an adjustment",
        "operationId": "updateInventoryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/InventoryTransactionLegacyPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The inventory transaction id (transactionid)",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/InventoryTransactionLegacyPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Inventory transaction body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Retrieve a inventory transfer or an adjustment",
        "operationId": "getInventoryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/InventoryTransactionLegacyGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The inventory transaction id (key / transactionid)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions Legacy"
        ]
      },
      "delete": {
        "summary": "Delete a inventory transfer or an adjustment",
        "operationId": "deleteInventoryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The inventory transaction id (transactionid / key)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions Legacy"
        ]
      }
    },
    "/inventory-transactions/{id}": {
      "get": {
        "summary": "Search for inventory transactions",
        "operationId": "getInventoryTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransactionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Inventory Transactions"
        ]
      }
    },
    "/invoices": {
      "get": {
        "summary": "Search for invoices",
        "operationId": "getInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/invoicesAdvancedListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED>'04/19/1990 12:00:00'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/invoices/{id}": {
      "get": {
        "summary": "Retrieve an invoice ",
        "operationId": "getInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoicesAdvancedGETById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields ",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "summary": "Delete an invoice",
        "operationId": "deleteInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/item-gl-groups": {
      "get": {
        "summary": "Search for item gl groups",
        "operationId": "getItemGlGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemGlGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For exanple `WHENMODIFIED = '05/02/2018 12:08:54'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Gl Groups"
        ]
      }
    },
    "/item-gl-groups/{id}": {
      "get": {
        "summary": "Retrieve an item gl group",
        "operationId": "getItemGlGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemGlGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Gl Groups"
        ]
      }
    },
    "/item-groups": {
      "get": {
        "summary": "Search for item groups",
        "operationId": "getItemGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Groups"
        ]
      }
    },
    "/item-groups/{id}": {
      "get": {
        "summary": "Retrieve an item group",
        "operationId": "getItemGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Groups"
        ]
      }
    },
    "/item-tax-groups": {
      "get": {
        "summary": "Search for item tax groups",
        "operationId": "getItemTaxGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemTaxGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '03/22/2018 18:54:55'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Tax Groups"
        ]
      }
    },
    "/item-tax-groups/{id}": {
      "get": {
        "summary": "Retrieve an item tax group",
        "operationId": "getItemTaxGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemTaxGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Item Tax Groups"
        ]
      }
    },
    "/items": {
      "post": {
        "summary": "Create an item      ",
        "operationId": "createItem",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemsPostResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/itemsPost"
            },
            "in": "body",
            "name": "body",
            "description": "The item object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Items"
        ]
      },
      "get": {
        "summary": "Search for items ",
        "operationId": "getItems",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((itemtype = 'Inventory' and status = 'active') or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Items"
        ]
      }
    },
    "/items/{id}": {
      "patch": {
        "summary": "Update an item ",
        "operationId": "updateItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemsUpdateResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/itemUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The item object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Items"
        ]
      },
      "get": {
        "summary": "Retrieve an item ",
        "operationId": "getItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/itemsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Items"
        ]
      },
      "delete": {
        "summary": "Delete an item  ",
        "operationId": "deleteItemById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Items"
        ]
      }
    },
    "/journals": {
      "post": {
        "summary": "Create an journal entry",
        "operationId": "createJournal",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntryPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/journalEntryPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The account-group object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journals"
        ]
      },
      "get": {
        "summary": "Search for journal entries ",
        "operationId": "getJournals",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/journalsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/21/2018 07:35:34'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journals"
        ]
      }
    },
    "/journals/{id}": {
      "patch": {
        "summary": "Update an journal entry",
        "operationId": "updateJournalById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntryPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/journalEntryPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The account-group object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journals"
        ]
      },
      "get": {
        "summary": "Retrieve an journal entry",
        "operationId": "getJournalById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journals"
        ]
      },
      "delete": {
        "summary": "Delete an journal entry",
        "operationId": "deleteJournalById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journals"
        ]
      }
    },
    "/ledger-accounts": {
      "post": {
        "summary": "Create a ledger account ",
        "operationId": "createLedgerAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsAdvancedPOSTResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsAdvancedPOSTRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The ledger account object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Search for ledger accounts",
        "operationId": "getLedgerAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerAccountsGETAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> RECORDNO = 34 </i>. With complex queries: <i>(RECORDNO = 34 and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-accounts/{id}": {
      "patch": {
        "summary": "Update a ledger account",
        "operationId": "updateLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsAdvancedPATCHResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsAdvancedPATCHRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The ledger account object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Retrieve a ledger account",
        "operationId": "getLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsAdvancedGETById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "delete": {
        "summary": "Delete a ledger account",
        "operationId": "deleteLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-details": {
      "get": {
        "summary": "Search for general ledger transactions  ",
        "operationId": "getLedgerDetails",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerDetailsGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> MODULEKEY = '11.CM' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Ledger Details"
        ]
      }
    },
    "/location-groups": {
      "get": {
        "summary": "Search for location groups",
        "operationId": "getLocationGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/locationGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Location Groups"
        ]
      }
    },
    "/location-groups/{id}": {
      "get": {
        "summary": "Retrieve a location group",
        "operationId": "getLocationGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Location Groups"
        ]
      }
    },
    "/locations": {
      "post": {
        "summary": "Create a location ",
        "operationId": "createLocation",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsPostResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/locations"
            },
            "in": "body",
            "name": "body",
            "description": "The locations object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "get": {
        "summary": "Search for locations",
        "operationId": "getLocations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/locationsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> status = 'active' and whenmodified > '08/17/2016 17:33:34' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/{id}": {
      "patch": {
        "summary": "Update a location ",
        "operationId": "updateLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/locationUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The location object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "get": {
        "summary": "Retrieve a location",
        "operationId": "getLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete a location  ",
        "operationId": "deleteLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the available objects.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get swagger docs for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the field for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/order-entry-price-lists": {
      "get": {
        "summary": "Search for order entry price lists",
        "operationId": "getOrderEntryPriceLists",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/orderEntryPriceListsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. Foe example, `DATETO = '12/31/2010'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Price Lists"
        ]
      }
    },
    "/order-entry-price-lists/{id}": {
      "get": {
        "summary": "Retrieve an order entry price list",
        "operationId": "getOrderEntryPriceListById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/orderEntryPriceListsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Price Lists"
        ]
      }
    },
    "/order-entry-transaction-definitions": {
      "get": {
        "summary": "Search for order entry transaction definitions",
        "operationId": "getOrderEntryTransactionDefinitions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/orderEntryTransactionDefinitionsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: WHENMODIFIED = '08/13/2016 05:26:37'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transaction Definitions"
        ]
      }
    },
    "/order-entry-transaction-definitions/{id}": {
      "get": {
        "summary": "Retrieve an order entry transaction definitions",
        "operationId": "getOrderEntryTransactionDefinitionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/orderEntryTransactionDefinitionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transaction Definitions"
        ]
      }
    },
    "/order-entry-transactions": {
      "get": {
        "summary": "Search for order entry transactions",
        "operationId": "getOrderEntryTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/orderEntryTransactionsListsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: WHENMODIFIED = '08/13/2016 05:26:37'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions"
        ]
      }
    },
    "/order-entry-transactions-legacy": {
      "post": {
        "summary": "Create a order entry (e.g. Sales Invoice, Contract Invoice, Sales Credit Memo)      ",
        "operationId": "createOrderEntryTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/OrderEntryTransactionsLegacyPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "order entry body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Search for order entry (e.g. Sales Invoice, Contract Invoice, Sales Credit Memo)",
        "operationId": "getOrderEntryTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderEntryTransactionLegacyListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The orderBy clause, either asc or desc. The format is fieldName order, for example: <i> whenmodified desc </i>. Or with multiple sorts with a comma separator: <i> whenmodified desc, transactionid desc </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((transactionstate = 'Pending' and status = 'active') or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Order Entry Transactions Legacy"
        ]
      }
    },
    "/order-entry-transactions-legacy/{id}": {
      "patch": {
        "summary": "Update a order entry (e.g. Sales Invoice, Contract Invoice, Sales Credit Memo)",
        "operationId": "updateOrderEntryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The order entry ID (transactionid)",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The sales order object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Retrieve a order entry (e.g. Sales Invoice, Contract Invoice, Sales Credit Memo)",
        "operationId": "getOrderEntryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/OrderEntryTransactionLegacyGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The order entry ID (key / sotransactionid)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions Legacy"
        ]
      },
      "delete": {
        "summary": "Delete a order entry (e.g. Sales Invoice, Contract Invoice, Sales Credit Memo)",
        "operationId": "deleteOrderEntryTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The order entry ID (transactionid / sotransactionid)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions Legacy"
        ]
      }
    },
    "/order-entry-transactions/{id}": {
      "get": {
        "summary": "Search for order entry transactions",
        "operationId": "getOrderEntryTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/orderEntryTransactionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Inventory Transfer)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Order Entry Transactions"
        ]
      }
    },
    "/payments": {
      "get": {
        "summary": "Search for payments that have been recorded against an AR (accounts receivable) invoice or AR adjustment",
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/paymentsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((totalpaid > 0 and totaldue > 0) or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments-legacy": {
      "post": {
        "summary": "Create a payment, to record against an AR, (accounts receivable) invoice or AR adjustment   ",
        "operationId": "createPaymentsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsLegacyPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsLegacyPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The payments object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payments Legacy"
        ]
      }
    },
    "/payments-legacy/{id}/apply": {
      "post": {
        "summary": "Apply an existing payment, that has not been already assigned to an invoice, against any invoice you specify",
        "operationId": "createPaymentsLegacyApply",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsLegacyApplyPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The payment ID (arpaymentkey)",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsLegacyApplyPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The apply payment object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payments Legacy"
        ]
      }
    },
    "/payments-legacy/{id}/reverse": {
      "post": {
        "summary": "Reverse a payment",
        "operationId": "createPaymentsLegacyReverse",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsLegacyReversePostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The payment ID (arpaymentkey)",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsLegacyReversePostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The reverse payment object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payments Legacy"
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Retrieve a payment that have been recorded against an AR (accounts receivable) invoice or AR adjustment ",
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.",
        "tags": [
          "Ping"
        ]
      }
    },
    "/projects": {
      "post": {
        "summary": "Create a project  ",
        "operationId": "createProject",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/projectsResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/projects"
            },
            "in": "body",
            "name": "body",
            "description": "The project object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "summary": "Search for projects ",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/projectsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> status = 'active' and whenmodified > '08/17/2016 17:33:34' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{id}": {
      "patch": {
        "summary": "Update a project ",
        "operationId": "updateProjectById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/projectsPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/projectUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The project object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "summary": "Retrieve a project  ",
        "operationId": "getProjectById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/projectsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Projects"
        ]
      },
      "delete": {
        "summary": "Delete a project ",
        "operationId": "deleteProjectById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/purchase-orders": {
      "get": {
        "summary": "Search for purchase orders (PO transactions) ",
        "operationId": "getPurchaseOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseOrdersListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((transactionstate = 'Pending' and status = 'active') or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/purchase-orders/{id}": {
      "get": {
        "summary": "Retrieve a purchase order (PO transaction) ",
        "operationId": "getPurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseOrdersGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "delete": {
        "summary": "Delete a purchase order (PO transaction) ",
        "operationId": "deletePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/purchasing-price-lists": {
      "get": {
        "summary": "Search for purchasing price lists",
        "operationId": "getPurchasingPriceLists",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchasingPriceListsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `DATETO = '05/17/2019'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Price Lists"
        ]
      }
    },
    "/purchasing-price-lists/{id}": {
      "get": {
        "summary": "Retrieve a purchasing price list",
        "operationId": "getPurchasingPriceListById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingPriceListsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Price Lists"
        ]
      }
    },
    "/purchasing-transaction-definitions": {
      "post": {
        "summary": "creates purchasing transaction definitions",
        "operationId": "createPurchasingTransactionDefinition",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Definitions"
        ]
      },
      "get": {
        "summary": "Search for purchasing transaction definitions",
        "operationId": "getPurchasingTransactionDefinitions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchasingTransactionDefinitionsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: WHENMODIFIED = '08/13/2016 05:26:37'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Definitions"
        ]
      }
    },
    "/purchasing-transaction-definitions/{id}": {
      "patch": {
        "summary": "updates purchasing transaction definitions",
        "operationId": "updatePurchasingTransactionDefinitionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Definitions"
        ]
      },
      "get": {
        "summary": "Retrieve a purchasing transaction definition",
        "operationId": "getPurchasingTransactionDefinitionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Definitions"
        ]
      },
      "delete": {
        "summary": "Deletes purchasing transaction definitions ",
        "operationId": "deletePurchasingTransactionDefinitionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Definitions"
        ]
      }
    },
    "/purchasing-transaction-entries": {
      "get": {
        "summary": "Search for purchasing transaction entries",
        "operationId": "getPurchasingTransactionEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchasingTransactionEntriesGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Purchase Order).",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 1`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Entries"
        ]
      }
    },
    "/purchasing-transaction-entries/{id}": {
      "get": {
        "summary": "Retrieve an purchasing transaction entry by id",
        "operationId": "getPurchasingTransactionEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionEntriesGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Used to indicate the document type (Ex: Purchase Order).",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transaction Entries"
        ]
      }
    },
    "/purchasing-transactions-legacy": {
      "post": {
        "summary": "Create a purchasing transactions",
        "operationId": "createPurchasingTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionsLegacyPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchasingTransactionsLegacyPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "transaction body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Search for purchasing transactions ",
        "operationId": "getPurchasingTransactionsLegacy",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchasingTransactionsLegacyGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> ((transactionstate = 'Pending' and status = 'active') or whenmodified>='08/13/2016 05:26:37') </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The orderBy clause, either asc or desc. The format is fieldName order, for example: <i> whenmodified desc </i>. Or with multiple sorts with a comma separator: <i> whenmodified desc, transactionid desc </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchasing Transactions Legacy"
        ]
      }
    },
    "/purchasing-transactions-legacy/{id}": {
      "patch": {
        "summary": "Update a purchasing transactions",
        "operationId": "updatePurchasingTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionsLegacyPatchResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "purchasing transactions id (transactionid)",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchasingTransactionsLegacyPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "transaction body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transactions Legacy"
        ]
      },
      "get": {
        "summary": "Retrieve a purchasing transactions",
        "operationId": "getPurchasingTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionsLegacyGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The purchasing transaction id (key / transactionid)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transactions Legacy"
        ]
      },
      "delete": {
        "summary": "Delete a purchasing transactions",
        "operationId": "deletePurchasingTransactionsLegacyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The inventory transaction id (transactionid / key)",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchasing Transactions Legacy"
        ]
      }
    },
    "/recurring-bills": {
      "get": {
        "summary": "Search for recurring bills",
        "operationId": "getRecurringBills",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recurringBillsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Bills"
        ]
      }
    },
    "/recurring-bills/{id}": {
      "get": {
        "summary": "Retrieve a recurring bill",
        "operationId": "getRecurringBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/recurringBillsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Bills"
        ]
      }
    },
    "/recurring-invoices": {
      "get": {
        "summary": "Search for recurring invoices",
        "operationId": "getRecurringInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recurringInvoicesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Invoices"
        ]
      }
    },
    "/recurring-invoices/{id}": {
      "get": {
        "summary": "Retrieve a recurring invoice",
        "operationId": "getRecurringInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/recurringInvoices"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Invoices"
        ]
      }
    },
    "/recurring-order-entry-transactions": {
      "get": {
        "summary": "Search for recurring order entry transactions",
        "operationId": "getRecurringOrderEntryTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recurringOrderEntryTransactionsObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Order Entry Transactions"
        ]
      }
    },
    "/recurring-order-entry-transactions/{id}": {
      "get": {
        "summary": "Retrieve a recurring order entry transaction",
        "operationId": "getRecurringOrderEntryTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/recurringOrderEntryTransactionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Recurring Order Entry Transactions"
        ]
      }
    },
    "/reporting-periods": {
      "post": {
        "summary": "creates purchasing transaction definitions",
        "operationId": "createReportingPeriod",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/reportingPeriodPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/reportingPeriodsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Reporting Periods"
        ]
      },
      "get": {
        "summary": "Search for reporting periods",
        "operationId": "getReportingPeriods",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reportingPeriodsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separarted fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Reporting Periods"
        ]
      }
    },
    "/reporting-periods/{id}": {
      "patch": {
        "summary": "updates reporting periods",
        "operationId": "updateReportingPeriodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/reportingPeriodsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Reocrd no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/reportingPeriodsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Reporting Periods"
        ]
      },
      "get": {
        "summary": "Retrieve a reporting periods",
        "operationId": "getReportingPeriodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchasingTransactionDefinitionsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Reporting Periods"
        ]
      },
      "delete": {
        "summary": "Deletes reporting periods ",
        "operationId": "deleteReportingPeriodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Reporting Periods"
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "Search for roles",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/rolesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Roles"
        ]
      }
    },
    "/sales-orders": {
      "get": {
        "summary": "Search for sales orders (SO transactions) ",
        "operationId": "getSalesOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrdersListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `RECORDNO = 3`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      }
    },
    "/sales-orders/{id}": {
      "get": {
        "summary": "Retrieve a sales order (SO transaction) ",
        "operationId": "getSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Orders"
        ]
      }
    },
    "/sales-receipts": {
      "get": {
        "summary": "Search for sales reciepts ",
        "operationId": "getSalesReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesReceiptsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> WHENMODIFIED > '04/18/2018 05:07:40'</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      }
    },
    "/sales-receipts/{id}": {
      "get": {
        "summary": "Retrieve a sales receipt",
        "operationId": "getSalesReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/SalesReceiptsRetrive"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      }
    },
    "/savings-accounts": {
      "get": {
        "summary": "Search for savings accounts",
        "operationId": "getSavingsAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/savingsAccountsGetAllRespObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> BANKNAME='Savwings Bank of Braunville' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Savings Accounts"
        ]
      }
    },
    "/savings-accounts/{id}": {
      "get": {
        "summary": "Retrieve a savings accounts",
        "operationId": "getSavingsAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/savingsAccountsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Savings Accounts"
        ]
      }
    },
    "/subscriptions": {
      "get": {
        "summary": "Search for subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/subscriptionsGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/preferences": {
      "get": {
        "summary": "Retrieve a subscription's preferences",
        "operationId": "getSubscriptionsPreferences",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/subscriptionsPreferencesByIdObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The subscription ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Subscriptions"
        ]
      }
    },
    "/tax-details": {
      "get": {
        "summary": "Search for tax details",
        "operationId": "getTaxDetails",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxDetailsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "comma separated field names",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/21/2018 07:35:34'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Tax Details"
        ]
      }
    },
    "/tax-details/{id}": {
      "get": {
        "operationId": "getTaxDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxdetailsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Detail id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Tax Details"
        ],
        "summary": "Retrieve a tax details"
      }
    },
    "/transactions": {
      "get": {
        "summary": "Search for journal entry lines",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/transactionGetAllRespObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: RECORDNO=1",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Retrive a Journal Entry Line",
        "operationId": "getTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transactionsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/trial-balances": {
      "get": {
        "summary": "Search for subscriptions",
        "operationId": "getTrialBalances",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/trialBalancesGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example: reportingperiodname='Calendar Year Ended December 2019', startdate='12/13/2020 and enddate='12/31/2020' and adjbook in ('GAAP', 'OBL') etc.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Trial Balances"
        ]
      }
    },
    "/unit-of-measures": {
      "get": {
        "summary": "Search for unit of measures",
        "operationId": "getUnitOfMeasures",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/unitOfMeasuresListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: RECORDNO=1",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Unit Of Measures"
        ]
      }
    },
    "/unit-of-measures/{id}": {
      "get": {
        "summary": "Retrive a unit of measure",
        "operationId": "getUnitOfMeasureById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/unitOfMeasuresById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Unit Of Measures"
        ]
      }
    },
    "/user-groups": {
      "get": {
        "summary": "Search for user groups",
        "operationId": "getUserGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userGroupsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example `WHENMODIFIED = '08/06/2018 05:32:09'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "User Groups"
        ]
      }
    },
    "/user-groups/{id}": {
      "get": {
        "summary": "Retrieve a user group",
        "operationId": "getUserGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/userGroupsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "User Groups"
        ]
      }
    },
    "/users": {
      "post": {
        "summary": "Create a user",
        "operationId": "createUser",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/createUsersRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/createUser"
            },
            "in": "body",
            "name": "body",
            "description": "The user object",
            "required": true
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "summary": "Search for users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/usersListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i>WHENMODIFIED = '08/13/2016 05:26:37'</i>",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "patch": {
        "summary": "Update a user",
        "operationId": "updateUserById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/usersPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateUser"
            },
            "in": "body",
            "name": "body",
            "description": "The user object",
            "required": true
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "summary": "Retrieve a user",
        "operationId": "getUserById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/usersGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete a user",
        "operationId": "deleteUserById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/vendor-types": {
      "get": {
        "summary": "Search for vendor types",
        "operationId": "getVendorTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorTypesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED = '08/06/2018 05:34:53'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Types"
        ]
      }
    },
    "/vendor-types/{id}": {
      "get": {
        "summary": "Retrieve a vendor type",
        "operationId": "getVendorTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorTypesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendor Types"
        ]
      }
    },
    "/vendors": {
      "post": {
        "summary": "Create a Vendor",
        "operationId": "createVendor",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsAdvancedPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The vendors advanced object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Search for vendors",
        "operationId": "getVendors",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorsListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example, `WHENMODIFIED>'04/19/1990 12:00:00'`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/vendors/{id}": {
      "patch": {
        "summary": "Update a vendor  ",
        "operationId": "updateVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsAdvancedResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The vendors advanced object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Retrieve a vendor",
        "operationId": "getVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsGetByID"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "delete": {
        "summary": "Deletes a Vendor",
        "operationId": "deleteVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/warehouses": {
      "post": {
        "summary": "Create a warehouse",
        "operationId": "createWarehouse",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/warehousesResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/warehousesPost"
            },
            "in": "body",
            "name": "body",
            "description": "The warehouse object",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Warehouses"
        ]
      },
      "get": {
        "summary": "Search for Warehouses ",
        "operationId": "getWarehouses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/warehousesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. You can query by any field and operators supported are =, !=, >, >=, <, <=, AND, OR. With single field queries: <i> whenmodified>='08/13/2016 05:26:37' </i>. With complex queries: <i> whenmodified>='08/13/2016 05:26:37' and status = 'T' </i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Warehouses"
        ]
      }
    },
    "/warehouses/{id}": {
      "patch": {
        "summary": "Update a warehouse",
        "operationId": "updateWarehouseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/warehousesPatchResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/warehousesPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The warehouse object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Warehouses"
        ]
      },
      "get": {
        "summary": "Retrieve a warehouse",
        "operationId": "getWarehouseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/warehousesGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The warehouse ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Warehouses"
        ]
      },
      "delete": {
        "summary": "Delete a warehouse",
        "operationId": "deleteWarehouseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Record no",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Warehouses"
        ]
      }
    },
    "/{objectName}": {
      "post": {
        "summary": "Create a(n) {objectName}",
        "operationId": "createByObjectName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectNamePostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object to create (Ex: 'contacts')",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/objectNamePostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The {objectname} object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "summary": "Search for {objectName}",
        "operationId": "getByObjectName",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object to search (Ex: 'contacts')",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Specify the fields to return in the response payload. Defaults to all standard fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. With single field queries: <i> DOCNUMBER=20621 </i>.\\n With complex queries: <i>(DOCNUMBER=20621 and WHENMODIFIED = '08/13/2016 05:26:37')</i>",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}": {
      "patch": {
        "summary": "Update a(n) {objectName}",
        "operationId": "updateObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectNamePatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object to create (Ex: 'contacts')",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} objectId",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/objectNamePatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The {objectName} object body",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "summary": "Retrieve a(n) {objectName}",
        "operationId": "getObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object to retrieve (Ex: 'contacts')",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} objectId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Comma separated fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "delete": {
        "summary": "Delete a(n) {objectName}",
        "operationId": "deleteObjectNameByObjectId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The name of the object to update (Ex: 'accounts')",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The {objectName} objectId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "locationId",
            "description": "The Location/Entity ID of the company. This will override the Location ID provided in the instance configuration",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "apBillsGetByIdPAYTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsTERM": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "arAccountLabelsListTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsCUSTOMERBANKACCOUNT": {
      "properties": {
        "ACCOUNTNUMBER": {
          "type": "string"
        },
        "BANKNAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersListObject": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-displayName": "ADDGLBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADJ": {
          "type": "boolean",
          "x-displayName": "ADJ",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-29T16:23:14Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BACKORDER": {
          "type": "string",
          "x-displayName": "BACKORDER",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/salesOrdersListBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY",
          "x-samplevalue": 360,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLOSED": {
          "type": "boolean",
          "x-displayName": "CLOSED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CNCONTRACTID": {
          "type": "string",
          "x-displayName": "CNCONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CNCONTRACTKEY": {
          "type": "string",
          "x-displayName": "CNCONTRACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CNCONTRACTNAME": {
          "type": "string",
          "x-displayName": "CNCONTRACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/salesOrdersListCONTACT"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-displayName": "CONTRACTDESC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDFROM": {
          "type": "string",
          "x-displayName": "CREATEDFROM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDUSER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-displayName": "CREATEDUSERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREC",
          "x-samplevalue": 50,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "customer.id",
          "x-displayName": "CUSTVENDID",
          "x-samplevalue": 10045,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTVENDNAME",
          "x-samplevalue": "Dharma Initiative",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DATEPRINTED": {
          "type": "string",
          "x-displayName": "DATEPRINTED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Sales Order-SO0013",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNO": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNO",
          "x-samplevalue": "SO0013",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-displayName": "DOCPARCLASS",
          "x-samplevalue": "ORDER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARID": {
          "type": "string",
          "x-displayName": "DOCPARID",
          "x-samplevalue": "Sales Order",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DOCPARKEY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-displayName": "DOCPAR_IN_OUT",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-displayName": "ENTGLGROUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/salesOrdersListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HASADVBILLING": {
          "type": "boolean",
          "x-displayName": "HASADVBILLING",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-displayName": "HASPOSTEDREVREC",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "HISTORY": {
          "$ref": "#/definitions/salesOrdersListHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-displayName": "INVBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-displayName": "INVOICERUNKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUN_DESCRIPTION": {
          "type": "string",
          "x-displayName": "INVOICERUN_DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUN_EXPENSEPRICEMARKUP": {
          "type": "string",
          "x-displayName": "INVOICERUN_EXPENSEPRICEMARKUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MESSAGE": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "MESSAGE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NOTE": {
          "type": "string",
          "x-displayName": "NOTE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ORIGDOCDATE": {
          "type": "string",
          "x-displayName": "ORIGDOCDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-displayName": "PAYMENTSTATUS",
          "x-samplevalue": "Open",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PONUMBER": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-displayName": "PONUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTED": {
          "type": "string",
          "x-displayName": "PRINTED",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRINTEDBY": {
          "type": "string",
          "x-displayName": "PRINTEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-displayName": "PRINTEDUSERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINVBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRINVBATCHKEY",
          "x-samplevalue": 14,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECT": {
          "type": "string",
          "x-displayName": "PROJECT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTKEY": {
          "type": "string",
          "x-displayName": "PROJECTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRRECORDKEY": {
          "type": "string",
          "x-displayName": "PRRECORDKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 831,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-displayName": "RENEWEDDOC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-displayName": "SALESCONTRACT",
          "x-samplevalue": "N",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/salesOrdersListSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 360,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPVIA": {
          "type": "string",
          "x-displayName": "SHIPVIA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SIGN_FLAG": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SIGN_FLAG",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SODOCUMENTENTRIES": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIES"
        },
        "SOURCERECURKEY": {
          "type": "string",
          "x-displayName": "SOURCERECURKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Converted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "subTotal",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": 5000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/salesOrdersListSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TERM": {
          "$ref": "#/definitions/salesOrdersListTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-displayName": "TOTAL",
          "x-samplevalue": 5000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "type": "string",
          "x-alias": "totalOutstandingAmount",
          "x-displayName": "TOTALDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALPAID": {
          "type": "string",
          "x-displayName": "TOTALPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_SUBTOTAL",
          "x-samplevalue": 5000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTAL",
          "x-samplevalue": 5000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "type": "string",
          "x-displayName": "TRX_TOTALDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-displayName": "TRX_TOTALENTERED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTALPAID": {
          "type": "string",
          "x-displayName": "TRX_TOTALPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-displayName": "USEDASCONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-displayName": "VENDORDOCNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "VSOEPRCLSTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-displayName": "VSOEPRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/salesOrdersListWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "type": "string",
          "x-displayName": "WHENPOSTED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "_DOCPAR": {
          "$ref": "#/definitions/salesOrdersList_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchResp": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "purchasingTransactionsLegacyPatchResp",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "locationsListCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Algorithmics"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationsListCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Algorithmics"
        }
      },
      "type": "object"
    },
    "customersAdvancedGETALLBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "employeesByIdCONTACT_LIST_INFOEmployeeentitycontactsCONTACT": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Yeganeh, Selma"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPromiseddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{promiseddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{promiseddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{promiseddate.year}"
        }
      },
      "title": "promiseddate",
      "type": "object"
    },
    "contactsPOSTRequestCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LATITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LONGITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "billsPaymentsCreateAPPYMTDETAILS": {
      "properties": {
        "APPYMTDETAIL": {
          "items": {
            "$ref": "#/definitions/billsPaymentsCreateAPPYMTDETAILSAPPYMTDETAIL"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "contactsAdvancedGETAllObject": {
      "properties": {
        "CELLPHONE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CELLPHONE",
          "x-samplevalue": 953637363,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "COMPANYNAME": {
          "type": "string",
          "x-displayName": "COMPANYNAME",
          "x-samplevalue": "Satish Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTNAME": {
          "type": "string",
          "x-displayName": "CONTACTNAME",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMAIL1": {
          "type": "string",
          "x-displayName": "EMAIL1",
          "x-samplevalue": "abortnyk@intacct.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMAIL2": {
          "type": "string",
          "x-displayName": "EMAIL2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FAX": {
          "type": "string",
          "x-displayName": "FAX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FIRSTNAME": {
          "type": "string",
          "x-displayName": "FIRSTNAME",
          "x-samplevalue": "Andrew",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "INITIAL": {
          "type": "string",
          "x-displayName": "INITIAL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LASTNAME": {
          "type": "string",
          "x-displayName": "LASTNAME",
          "x-samplevalue": "Bortnyk",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/contactsAdvancedGETAllMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAGER": {
          "type": "string",
          "x-displayName": "PAGER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PHONE1": {
          "type": "string",
          "x-displayName": "PHONE1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PHONE2": {
          "type": "string",
          "x-displayName": "PHONE2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PREFIX": {
          "type": "string",
          "x-displayName": "PREFIX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICELIST": {
          "type": "string",
          "x-displayName": "PRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICELISTKEY": {
          "type": "string",
          "x-displayName": "PRICELISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-displayName": "PRICESCHEDULE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICESCHEDULEKEY": {
          "type": "string",
          "x-displayName": "PRICESCHEDULEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTAS": {
          "type": "string",
          "x-displayName": "PRINTAS",
          "x-samplevalue": "Bortnyk,Andrew",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXABLE": {
          "type": "boolean",
          "x-displayName": "TAXABLE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXGROUP": {
          "type": "string",
          "x-displayName": "TAXGROUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-displayName": "TAXGROUPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "URL1": {
          "type": "string",
          "x-displayName": "URL1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "URL2": {
          "type": "string",
          "x-displayName": "URL2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VISIBLE": {
          "type": "boolean",
          "x-displayName": "VISIBLE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "warehousesGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "warehousesGetById",
      "type": "object",
      "properties": {
        "CONTACTINFO": {
          "$ref": "#/definitions/warehousesListCONTACTINFO"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOC": {
          "$ref": "#/definitions/warehousesListLOC"
        },
        "LOCATIONID": {
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "YK-WH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MANAGER": {
          "$ref": "#/definitions/warehousesListMANAGER"
        },
        "MANAGERID": {
          "type": "string",
          "x-displayName": "MANAGERID",
          "x-samplevalue": "101--Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "Warehouse"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "Warehouse"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-displayName": "PARENTNAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/warehousesListSHIPTO"
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPERVISORID": {
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USEDINGL": {
          "type": "boolean",
          "x-displayName": "USEDINGL",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-displayName": "WAREHOUSEID",
          "x-samplevalue": "YK-WH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-has-customfields": true
    },
    "vendorsAdvancedResp": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3722
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "VENDOR",
      "type": "object"
    },
    "accountGroupsByIdGLCATGRPS": {
      "properties": {
        "glcoacatmember": {
          "items": {
            "$ref": "#/definitions/accountGroupsByIdGLCATGRPSGlcoacatmember"
          },
          "type": "array"
        }
      },
      "title": "GLCATGRPS",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitem": {
      "properties": {
        "allocationid": {
          "type": "string",
          "x-samplevalue": "{allocationid}"
        },
        "billable": {
          "type": "string",
          "x-samplevalue": "{billable}"
        },
        "cancelafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemCancelafterdate"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "{classid}"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "{contractid}"
        },
        "costtypeid": {
          "type": "string",
          "x-samplevalue": "{costtypeid}"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "{customerid}"
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{customfields}"
        },
        "dateconfirmed": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDateconfirmed"
        },
        "dateshiptosupplier": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDateshiptosupplier"
        },
        "deliverto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDeliverto"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "{departmentid}"
        },
        "donotshipafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDonotshipafterdate"
        },
        "donotshipbeforedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDonotshipbeforedate"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "{employeeid}"
        },
        "form1099": {
          "type": "string",
          "x-samplevalue": "{form1099}"
        },
        "form1099box": {
          "type": "string",
          "x-samplevalue": "{form1099box}"
        },
        "form1099type": {
          "type": "string",
          "x-samplevalue": "{form1099type}"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "{itemdesc}"
        },
        "itemdetails": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "{itemid}"
        },
        "linelevelsimpletaxtype": {
          "type": "string",
          "x-samplevalue": "{linelevelsimpletaxtype}"
        },
        "linenum": {
          "type": "string",
          "x-samplevalue": "{linenum}"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "{locationid}"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "{memo}"
        },
        "needbydate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemNeedbydate"
        },
        "overridetaxamount": {
          "type": "string",
          "x-samplevalue": "{overridetaxamount}"
        },
        "price": {
          "type": "string",
          "x-samplevalue": "{price}"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "{projectid}"
        },
        "promiseddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemPromiseddate"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "{quantity}"
        },
        "retainagepercentage": {
          "type": "string",
          "x-samplevalue": "{retainagepercentage}"
        },
        "sourcelinekey": {
          "type": "string",
          "x-samplevalue": "{sourcelinekey}"
        },
        "taskid": {
          "type": "string",
          "x-samplevalue": "{taskid}"
        },
        "tax": {
          "type": "string",
          "x-samplevalue": "{tax}"
        },
        "taxable": {
          "type": "string",
          "x-samplevalue": "{taxable}"
        },
        "trx_amountretained": {
          "type": "string",
          "x-samplevalue": "{trx_amountretained}"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "{unit}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "{warehouseid}"
        }
      },
      "title": "potransitem",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqINVGL_ACCOUNTSINVGL_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISOFFSET": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "INVGL_ACCOUNT",
      "type": "object"
    },
    "departmentUpdate": {
      "properties": {
        "CUSTTITLE": {
          "type": "string"
        },
        "PARENTID": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "212"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUPERVISORID": {
          "type": "string"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "Finance"
        }
      },
      "title": "departmentUpdate",
      "type": "object"
    },
    "contactsPATCHRequest": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "{CELLPHONE}"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "{COMPANYNAME}"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "{CONTACTNAME}"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "{EMAIL1}"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "{EMAIL2}"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "{FAX}"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "{FIRSTNAME}"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "{INITIAL}"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "{LASTNAME}"
        },
        "MAILADDRESS": {
          "properties": {
            "ADDRESS1": {
              "type": "string",
              "x-samplevalue": "{ADDRESS1}"
            },
            "ADDRESS2": {
              "type": "string",
              "x-samplevalue": "{ADDRESS2}"
            },
            "CITY": {
              "type": "string",
              "x-samplevalue": "{CITY}"
            },
            "COUNTRY": {
              "type": "string",
              "x-samplevalue": "{COUNTRY}"
            },
            "STATE": {
              "type": "string",
              "x-samplevalue": "{STATE}"
            },
            "ZIP": {
              "type": "string",
              "x-samplevalue": "{ZIP}"
            }
          },
          "$ref": "#/definitions/contactsPATCHRequestCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "{PAGER}"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "{PHONE1}"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "{PHONE2}"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "{PREFIX}"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "{PRINTAS}"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "{RECORDNO}"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "{STATUS}"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "{TAXABLE}"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "{TAXGROUP}"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "{URL1}"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "{URL2}"
        }
      },
      "title": "contactsPATCHRequest",
      "type": "object",
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "itemsPostLANDEDCOSTINFOITEMLANDEDCOST": {
      "properties": {
        "ACTIVE": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "METHOD": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VALUE": {
          "type": "string",
          "x-alias": [
            {
              "alias": "landedCost",
              "path": "LANDEDCOSTINFO.ITEMLANDEDCOST[*].VALUE | [0]"
            }
          ],
          "x-samplevalue": "xyz"
        }
      },
      "required": [
        "ITEMID"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDonotshipbeforedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.year}"
        }
      },
      "title": "donotshipbeforedate",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetailsItemdetail"
          },
          "type": "array"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "unitOfMeasuresListUOMDETAILS": {
      "properties": {
        "uomdetail": {
          "items": {
            "$ref": "#/definitions/unitOfMeasuresListUOMDETAILSUomdetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "recurringInvoicesListObject": {
      "properties": {
        "ACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACCOUNTTYPE",
          "x-samplevalue": "Undeposited Funds Account",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOCONTACTNAME",
          "x-samplevalue": "Carly Frederick(C11111)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-displayName": "CONTRACTDESC",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITCARDTYPE": {
          "type": "string",
          "x-displayName": "CREDITCARDTYPE",
          "x-samplevalue": "VISA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTMESSAGEID",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "Carly Frederick",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": 11111,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLACCOUNTKEY",
          "x-samplevalue": 880,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLACCTNO",
          "x-samplevalue": 1001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-displayName": "GLACCTTITLE",
          "x-samplevalue": "CE Test Account",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LASTEXECDATE": {
          "type": "string",
          "x-displayName": "LASTEXECDATE",
          "x-samplevalue": "08/31/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LASTPAYMENTRESULT": {
          "type": "string",
          "x-displayName": "LASTPAYMENTRESULT",
          "x-samplevalue": "S",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "4.AR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYINFULL": {
          "type": "boolean",
          "x-displayName": "PAYINFULL",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PAYMETHOD": {
          "type": "string",
          "x-displayName": "PAYMETHOD",
          "x-samplevalue": "Credit Card",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "ARIN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "ri",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECURPAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECURPAYMENTKEY",
          "x-samplevalue": 16,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SCHOPKEY",
          "x-samplevalue": 21,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTOCONTACTNAME",
          "x-samplevalue": "Carly Frederick(C11111)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "N30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "x-vendor-objectname": "recurring Invoices",
      "type": "object"
    },
    "purchaseOrdersGetByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "vendor.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "vendor.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "vendor.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "vendor.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "vendor.contact.phone",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "paymentsGetByIdPRENTRYArpaymentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 93
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "Department Allocation 120"
        },
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 685.06
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREDREVACCTNO": {
          "type": "string"
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "GLOFFSET": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].invoice.id",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RELEASETOPAY": {
          "type": "string"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10013": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "SUBTOTAL": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORACCTNOKEYVERSION": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedGETByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "vendorTypesByIdPARENT": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "PARENT",
      "type": "object"
    },
    "vendorsListCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "contact.address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "contact.address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "contact.address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "contact.address.postalCode"
        }
      },
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "orderEntryTransactionDefinitionsByIdSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "inventoryTransactionsByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "apBillsListPAYTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsListRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "purchasingPriceListsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "purchasingPriceListsById",
      "type": "object",
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATEFROM"
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2030-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATETO"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Base Price List PO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-samplevalue": "Purchasing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALEPURCHASE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        }
      }
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updatesubtotal",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "purchasingTransactionDefinitionsListAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "2305--Deferred Revenue Contra"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Deferred Revenue Contra"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "AP/AR"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "auditLogsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "auditLogsById",
      "type": "object",
      "properties": {
        "CREATEDBYUSER": {
          "type": "string",
          "x-samplevalue": "emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBYUSER"
        },
        "CREATED_AT": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-05-07T19:01:13Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATED_AT"
        },
        "CREATED_BY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATED_BY"
        },
        "EMAIL_TEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMAIL_TEXT"
        },
        "OBJ_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -5001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OBJ_ID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "TRAIL_TEXT": {
          "type": "string",
          "x-samplevalue": "Page \"Edit GL Account\" has been updated.",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRAIL_TEXT"
        }
      }
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "createAccountGroupGLCATGRPSGLACCTGRPMEMBER": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "CATEGORYNAME"
      ],
      "title": "GLACCTGRPMEMBER",
      "type": "object"
    },
    "patchapAccountLabels": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "1212sdfsdfdsf"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "11"
        }
      },
      "title": "patchapAccountLabels",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APACCOUNTLABEL"
    },
    "recurringOrderEntryTransactionsByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "purchaseOrdersListHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersListHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyListIctransitems": {
      "properties": {
        "ictransitem": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyListIctransitemsIctransitem"
          },
          "type": "array"
        }
      },
      "title": "ictransitems",
      "type": "object"
    },
    "updateUserUSERINFOUSERDEPARTMENTS": {
      "properties": {
        "DEPARTMENTID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            "",
            ""
          ]
        }
      },
      "title": "USERDEPARTMENTS",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqDatedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "customersGETById": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTKEY"
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL"
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-displayName": "ACCOUNTLABELKEY"
        },
        "ADVBILLBY": {
          "type": "string",
          "x-displayName": "ADVBILLBY"
        },
        "ADVBILLBYTYPE": {
          "type": "string",
          "x-displayName": "ADVBILLBYTYPE"
        },
        "ARACCOUNT": {
          "type": "string",
          "x-displayName": "ARACCOUNT",
          "x-samplevalue": "sample"
        },
        "ARACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "ARACCOUNTTITLE"
        },
        "ARINVOICEPRINTTEMPLATEID": {
          "type": "string",
          "x-displayName": "ARINVOICEPRINTTEMPLATEID",
          "x-samplevalue": "sample"
        },
        "BILLTO": {
          "$ref": "#/definitions/customersGETByIdBILLTO"
        },
        "BILLTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY"
        },
        "COMMENTS": {
          "type": "string",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "sample"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/customersGETByIdCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-displayName": "CONTACTKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": 10
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "sample"
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CUSTMESSAGEID",
          "x-samplevalue": "sample"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118"
        },
        "CUSTREPID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREPID",
          "x-samplevalue": 202
        },
        "CUSTREPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREPKEY",
          "x-samplevalue": 200
        },
        "CUSTREPNAME": {
          "type": "string",
          "x-displayName": "CUSTREPNAME",
          "x-samplevalue": "Horton, Tim"
        },
        "CUSTTYPE": {
          "type": "string",
          "x-displayName": "CUSTTYPE",
          "x-samplevalue": "sample"
        },
        "CUSTTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTTYPEKEY",
          "x-samplevalue": 1
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "sample"
        },
        "DISCOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNT"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/customersGETByIdDISPLAYCONTACT"
        },
        "DISPLAYCONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DISPLAYCONTACTKEY",
          "x-samplevalue": 321
        },
        "ENABLEONLINEACHPAYMENT": {
          "type": "boolean",
          "x-displayName": "ENABLEONLINEACHPAYMENT",
          "x-samplevalue": true
        },
        "ENABLEONLINECARDPAYMENT": {
          "type": "boolean",
          "x-displayName": "ENABLEONLINECARDPAYMENT",
          "x-samplevalue": true
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "C10076"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "sample"
        },
        "GLGRPKEY": {
          "type": "string",
          "x-displayName": "GLGRPKEY"
        },
        "LAST_INVOICEDATE": {
          "type": "string",
          "x-displayName": "LAST_INVOICEDATE"
        },
        "LAST_STATEMENTDATE": {
          "type": "string",
          "x-displayName": "LAST_STATEMENTDATE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "sample"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "sample"
        },
        "OEADJPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEADJPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEINVOICEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEINVOICEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OELISTPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OELISTPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEORDERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEORDERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEOTHERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEOTHERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "OEPRCLSTKEY"
        },
        "OEPRICESCHEDKEY": {
          "type": "string",
          "x-displayName": "OEPRICESCHEDKEY"
        },
        "OEQUOTEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEQUOTEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-samplevalue": 10
        },
        "OFFSETGLACCOUNTNOTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNOTITLE"
        },
        "ONETIME": {
          "type": "boolean",
          "x-displayName": "ONETIME",
          "x-samplevalue": true
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": true
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 10
        },
        "PARENTKEY": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTKEY"
        },
        "PARENTNAME": {
          "type": "string",
          "x-alias": "parent.name",
          "x-displayName": "PARENTNAME"
        },
        "PRCLST_OVERRIDE": {
          "type": "string",
          "x-displayName": "PRCLST_OVERRIDE",
          "x-samplevalue": "C"
        },
        "PRICELIST": {
          "type": "string",
          "x-alias": "priceLevel",
          "x-displayName": "PRICELIST"
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-displayName": "PRICESCHEDULE"
        },
        "PRICESCHEDULEKEY": {
          "type": "string",
          "x-displayName": "PRICESCHEDULEKEY"
        },
        "R10048": {
          "type": "string",
          "x-displayName": "R10048"
        },
        "R10049": {
          "type": "string",
          "x-displayName": "R10049"
        },
        "RCHANNEL": {
          "type": "string",
          "x-displayName": "RCHANNEL"
        },
        "RCLASS": {
          "type": "string",
          "x-displayName": "RCLASS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "123"
        },
        "RESALENO": {
          "type": "string",
          "x-displayName": "RESALENO",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "sample"
        },
        "SHIPPINGMETHOD": {
          "type": "string",
          "x-displayName": "SHIPPINGMETHOD",
          "x-samplevalue": "sample"
        },
        "SHIPTO": {
          "$ref": "#/definitions/customersGETByIdSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY"
        },
        "SHIPVIAKEY": {
          "type": "string",
          "x-displayName": "SHIPVIAKEY"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "sample"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "sample"
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "TAXID",
          "x-samplevalue": 10
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "sample"
        },
        "TERMSKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentTerms.id",
          "x-displayName": "TERMSKEY",
          "x-samplevalue": 4
        },
        "TERMVALUE": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-displayName": "TERMVALUE",
          "x-samplevalue": "::#0#:O:"
        },
        "TERRITORYID": {
          "type": "string",
          "x-displayName": "TERRITORYID",
          "x-samplevalue": "sample"
        },
        "TERRITORYKEY": {
          "type": "string",
          "x-displayName": "TERRITORYKEY"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "VSOEPRCLSTKEY"
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-displayName": "VSOEPRICELIST"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "recurringOrderEntryTransactionsByIdSUBTOTALSSorecursubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.73
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 42
        }
      },
      "title": "sorecursubtotals",
      "type": "object"
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "purchasingTransactionDefinitionsListSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsById_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdPayto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-displayName": "Contact Name",
          "x-samplevalue": "Boston Properties"
        }
      },
      "title": "payto",
      "type": "object"
    },
    "salesOrdersGetByIdSUBTOTALSSodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "attachments": {
      "properties": {
        "attachment": {
          "items": {
            "$ref": "#/definitions/attachment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemDeliverto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{deliverto.contactname}"
        }
      },
      "title": "deliverto",
      "type": "object"
    },
    "InventoryTransactionsLegacyPostRes": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "InventoryTransactionsLegacyPostRes",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "locationGroupsByIdMEMBERSLocationgrpmember": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "LOCATIONSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "locationgrpmember",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqTOTALS": {
      "properties": {
        "TOTAL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqTOTALSTOTAL"
          },
          "type": "array"
        }
      },
      "title": "TOTALS",
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedGETById": {
      "properties": {
        "ARINVOICEITEMS": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdARINVOICEITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1970-01-01T00:00:00Z"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD"
        },
        "BILLBACKTEMPLATEKEY": {
          "type": "string",
          "x-displayName": "BILLBACKTEMPLATEKEY"
        },
        "BILLTO": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOCONTACTNAME"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOPAYTOCONTACTNAME"
        },
        "BILLTOPAYTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOPAYTOKEY"
        },
        "CONTACT": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdCONTACT"
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD"
        },
        "CUSTMESSAGE": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdCUSTMESSAGE"
        },
        "CUSTMESSAGEID": {
          "type": "string",
          "x-displayName": "CUSTMESSAGEID"
        },
        "CUSTOMER": {
          "type": "string",
          "x-displayName": "CUSTOMER",
          "x-samplevalue": "N2N001--n2N Commerce, Inc."
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "customer.id",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "N2N001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "Print"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION"
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-displayName": "DESCRIPTION2"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNUMBER"
        },
        "DUE_IN_DAYS": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DUE_IN_DAYS",
          "x-samplevalue": 3454
        },
        "ENTRY": {
          "type": "string",
          "x-displayName": "ENTRY"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-displayName": "EXCHANGE_RATE"
        },
        "EXCHRATE": {
          "type": "string",
          "x-displayName": "EXCHRATE"
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-displayName": "EXCHRATEDATE"
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL"
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-displayName": "HASPOSTEDREVREC"
        },
        "HIBEN": {
          "type": "string",
          "x-displayName": "HIBEN"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY"
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "4.AR"
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "HISTORY - 2010-3-31"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 5
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "A"
        },
        "RECORDID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDID",
          "x-samplevalue": 207948
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 62
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "ri"
        },
        "RSEMINAR_REGISTRATION": {
          "type": "string",
          "x-displayName": "RSEMINAR_REGISTRATION"
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY"
        },
        "SHIPTO": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTOCONTACTNAME"
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTORETURNTOCONTACTNAME"
        },
        "SHIPTORETURNTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTORETURNTOKEY"
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Posted"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-displayName": "TERMKEY"
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-displayName": "TERMNAME"
        },
        "TERMVALUE": {
          "type": "string",
          "x-displayName": "TERMVALUE"
        },
        "TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 53389.7
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 53389.7
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountPaid",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0
        },
        "TRX_ENTITYDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "TRX_ENTITYDUE",
          "x-samplevalue": 53389.7
        },
        "TRX_TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 53389.7
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 53389.7
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-displayName": "WHENDISCOUNT"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-03-31"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENPAID": {
          "type": "string",
          "x-displayName": "WHENPAID"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-03-31"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "vendorsListCONTACTTO1099": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsListCONTACTTO1099MAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "departments": {
      "properties": {
        "CUSTTITLE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "FIN"
        },
        "PARENTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUPERVISORID": {
          "type": "string"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "Finance"
        }
      },
      "required": [
        "DEPARTMENTID",
        "TITLE"
      ],
      "title": "departments",
      "type": "object"
    },
    "DebitMemoByIdPAYTO": {
      "properties": {
        "TAXGROUP": {
          "$ref": "#/definitions/DebitMemoByIdPAYTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        }
      },
      "title": "PAYTO",
      "type": "object"
    },
    "creditMemosAdvancedGETALLSHIPTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqInternalapprovedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.year}"
        }
      },
      "title": "internalapprovedon",
      "type": "object"
    },
    "purchaseOrdersGetByIdWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "apBillsListPAYTO": {
      "properties": {
        "TAXGROUP": {
          "$ref": "#/definitions/apBillsListPAYTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetById_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Leave Transaction Open"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Sales Order"
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Sales Order"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-samplevalue": "Generate"
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-samplevalue": "Post"
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/salesOrdersGetById_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "string"
        },
        "PRCLISTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string",
          "x-samplevalue": "Base Price List"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Sales Orders"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Sales Orders"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "TERM_NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "G"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "orderEntryTransactionsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "orderEntryTransactionsById",
      "type": "object",
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADDGLBATCHKEY"
        },
        "ADJ": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADJ"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T18:24:31Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BACKORDER": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BACKORDER"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "BILLTO": {
          "$ref": "#/definitions/orderEntryTransactionsListsBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOKEY"
        },
        "CLOSED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLOSED"
        },
        "CNCONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CNCONTRACTID"
        },
        "CNCONTRACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CNCONTRACTKEY"
        },
        "CNCONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CNCONTRACTNAME"
        },
        "CONTACT": {
          "$ref": "#/definitions/orderEntryTransactionsListsCONTACT"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTDESC"
        },
        "CONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CREATEDFROM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDFROM"
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDUSER"
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDUSERID"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTREC": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTREC"
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTVENDID"
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTVENDNAME"
        },
        "DATEPRINTED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATEPRINTED"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCID"
        },
        "DOCNO": {
          "type": "string",
          "x-samplevalue": "IN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNO"
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-samplevalue": "INVOICE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCPARCLASS"
        },
        "DOCPARID": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCPARID"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCPARKEY"
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCPAR_IN_OUT"
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTGLGROUP"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATE"
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATEDATE"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionsListsEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXTERNALURL"
        },
        "HASADVBILLING": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HASADVBILLING"
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HASPOSTEDREVREC"
        },
        "HISTORY": {
          "$ref": "#/definitions/orderEntryTransactionsListsHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVBATCHKEY"
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICERUNKEY"
        },
        "INVOICERUN_DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICERUN_DESCRIPTION"
        },
        "INVOICERUN_EXPENSEPRICEMARKUP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICERUN_EXPENSEPRICEMARKUP"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MESSAGE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MESSAGE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NOTE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NOTE"
        },
        "ORIGDOCDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ORIGDOCDATE"
        },
        "PAYMENTS": {
          "$ref": "#/definitions/orderEntryTransactionsListsPAYMENTS"
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-samplevalue": "Paid",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTSTATUS"
        },
        "PONUMBER": {
          "type": "string",
          "x-samplevalue": "Contract CN0001 line 1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PONUMBER"
        },
        "PRINTED": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTED"
        },
        "PRINTEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTEDBY"
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTEDUSERID"
        },
        "PRINVBATCHKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINVBATCHKEY"
        },
        "PROJECT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECT"
        },
        "PROJECTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTKEY"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTNAME"
        },
        "PRRECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 130,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRRECORDKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWEDDOC"
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-samplevalue": "N",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALESCONTRACT"
        },
        "SCHOPKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SCHOPKEY"
        },
        "SHIPTO": {
          "$ref": "#/definitions/orderEntryTransactionsListsSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOKEY"
        },
        "SHIPVIA": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPVIA"
        },
        "SIGN_FLAG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SIGN_FLAG"
        },
        "SODOCUMENTENTRIES": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIES"
        },
        "SOURCERECURKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SOURCERECURKEY"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Pending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTAL"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/orderEntryTransactionsListsSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPDOCID"
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SYSTEMGENERATED"
        },
        "TERM": {
          "$ref": "#/definitions/orderEntryTransactionsListsTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTAL"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALDUE"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALPAID"
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_SUBTOTAL"
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTAL"
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALDUE"
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALPAID"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_INV"
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USEDASCONTRACT"
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USER"
        },
        "USERID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERID"
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORDOCNO"
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VSOEPRCLSTKEY"
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VSOEPRICELIST"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/orderEntryTransactionsListsWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-03-02",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENDUE"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPOSTED"
        },
        "_DOCPAR": {
          "$ref": "#/definitions/orderEntryTransactionsLists_DOCPAR"
        }
      }
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitem": {
      "properties": {
        "allocationid": {
          "type": "string",
          "x-samplevalue": "{allocationid}"
        },
        "billable": {
          "type": "string",
          "x-samplevalue": "{billable}"
        },
        "cancelafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemCancelafterdate"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "{classid}"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "{contractid}"
        },
        "costtypeid": {
          "type": "string",
          "x-samplevalue": "{costtypeid}"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "{customerid}"
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{customfields}"
        },
        "dateconfirmed": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemDateconfirmed"
        },
        "dateshiptosupplier": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemDateshiptosupplier"
        },
        "deliverto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemDeliverto"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "{departmentid}"
        },
        "donotshipafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemDonotshipafterdate"
        },
        "donotshipbeforedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemDonotshipbeforedate"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "{employeeid}"
        },
        "form1099": {
          "type": "string",
          "x-samplevalue": "{form1099}"
        },
        "form1099box": {
          "type": "string",
          "x-samplevalue": "{form1099box}"
        },
        "form1099type": {
          "type": "string",
          "x-samplevalue": "{form1099type}"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "{itemdesc}"
        },
        "itemdetails": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "{itemid}",
          "x-required": true
        },
        "linelevelsimpletaxtype": {
          "type": "string",
          "x-samplevalue": "{linelevelsimpletaxtype}"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "{locationid}"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "{memo}"
        },
        "needbydate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemNeedbydate"
        },
        "overridetaxamount": {
          "type": "string",
          "x-samplevalue": "{overridetaxamount}"
        },
        "price": {
          "type": "string",
          "x-samplevalue": "{price}"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "{projectid}"
        },
        "promiseddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemPromiseddate"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "{quantity}",
          "x-required": true
        },
        "retainagepercentage": {
          "type": "string",
          "x-samplevalue": "{retainagepercentage}"
        },
        "sourcelinekey": {
          "type": "string",
          "x-samplevalue": "{sourcelinekey}"
        },
        "taskid": {
          "type": "string",
          "x-samplevalue": "{taskid}"
        },
        "tax": {
          "type": "string",
          "x-samplevalue": "{tax}"
        },
        "taxable": {
          "type": "string",
          "x-samplevalue": "{taxable}"
        },
        "trx_amountretained": {
          "type": "string",
          "x-samplevalue": "{trx_amountretained}"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "{unit}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "{warehouseid}"
        }
      },
      "title": "potransitem",
      "type": "object",
      "required": [
        "itemid",
        "quantity"
      ]
    },
    "classGroupsListMEMBERSClassgrpmember": {
      "properties": {
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "CLASSKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CLASSSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "employeesListEMPLOYEERATEEmployeerate": {
      "properties": {
        "BILLINGRATE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.63
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        },
        "EMPLOYEEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 194
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Yeganeh, Selma"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RATEENDDATE": {
          "type": "string"
        },
        "RATESTARTDATE": {
          "type": "string",
          "x-samplevalue": "07/12/2015"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "SALARYRATE": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "foldersGetByIdResResponse": {
      "properties": {
        "control": {
          "$ref": "#/definitions/foldersGetByIdResResponseControl"
        },
        "operation": {
          "$ref": "#/definitions/foldersGetByIdResResponseOperation"
        }
      },
      "title": "response",
      "type": "object"
    },
    "contactsPATCHRequestCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "{ADDRESS1}"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "{ADDRESS2}"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "{CITY}"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "{COUNTRY}"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "{STATE}"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "{ZIP}"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "billsPaymentsListAPPYMTDETAILSAppymtdetail": {
      "properties": {
        "ENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9655
        },
        "PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "PAYMENTENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9657
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2202
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].bill[*].id",
          "x-samplevalue": 2201
        },
        "TRX_PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdPotransitemsPotransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdPotransitemsPotransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "salesReceiptsListOTHERRECEIPTSENTRIESOtherreceiptsentry": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AMOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CREATEDBY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPOSITTO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LINE_NO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UNDEPACCTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqENTITY_PROPSENTITY_PROP": {
      "properties": {
        "ENABLEOVERRIDETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENTITY_NAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRESERVE_SEQNUM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "ENTITY_PROP",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDateposted": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateposted.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateposted.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateposted.year}"
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "journalsByIdENTRIES": {
      "properties": {
        "glentry": {
          "items": {
            "$ref": "#/definitions/journalsByIdENTRIESGlentry"
          },
          "type": "array"
        }
      },
      "title": "ENTRIES",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "itemsPostVENDORINFOITEMVENDOR": {
      "properties": {
        "ECONOMIC_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "FORECAST_DEMAND_IN_LEAD_TIME": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "LEAD_TIME": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "MIN_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "PREFERRED_VENDOR": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "STOCKNO": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VENDORID": {
          "type": "string",
          "x-alias": [
            {
              "alias": "vendor.id",
              "path": "VENDORINFO.ITEMVENDOR[*].VENDORID | [0]"
            }
          ],
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "itemsUpdateResponse": {
      "properties": {
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ITEM",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "AR_ACCOUNTS",
      "type": "object"
    },
    "updateAccountGroupGLCATGRPSGLACCTGRPMEMBER": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "GLACCTGRPMEMBER",
      "type": "object"
    },
    "createAccountGroupGLCOMPGRPSGLCOMPGRPMEMBER": {
      "properties": {
        "DISPLAYAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LHSACCTGRPNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LHSACCTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LHSASOF": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LHSCONST": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OPERATOR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRECISION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RHSACCTGRPNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RHSACCTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RHSASOF": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RHSCONST": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "NAME",
        "MEMBERTYPE",
        "RANGEFROM",
        "RANGETO",
        "CHILDNAME",
        "CATEGORYNAME"
      ],
      "title": "GLCOMPGRPMEMBER",
      "type": "object"
    },
    "artermsByIdResp": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "artermsByIdResp",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DISCAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCAMOUNT"
        },
        "DISCCALCON": {
          "type": "string",
          "x-samplevalue": "Invoice total",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCCALCON"
        },
        "DISCDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCDATE"
        },
        "DISCFROM": {
          "type": "string",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCFROM"
        },
        "DISCFUDGEDAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCFUDGEDAYS"
        },
        "DISCPERCAMN": {
          "type": "string",
          "x-samplevalue": "$",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCPERCAMN"
        },
        "DUEDATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DUEDATE"
        },
        "DUEFROM": {
          "type": "string",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DUEFROM"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PENAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENAMOUNT"
        },
        "PENFUDGEDAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENFUDGEDAYS"
        },
        "PENPERCAMN": {
          "type": "string",
          "x-samplevalue": "$",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENPERCAMN"
        },
        "PEN_TYPES": {
          "type": "string",
          "x-samplevalue": "No Penalty",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PEN_TYPES"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "updateAccountGroupGLCOMPGRPS": {
      "properties": {
        "GLCOMPGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLCOMPGRPSGLCOMPGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLCOMPGRPS",
      "type": "object"
    },
    "vendorsListPAYTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsListPAYTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXGROUP": {
          "type": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "CONTACT",
      "type": "object"
    },
    "purchaseOrdersGetById": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-displayName": "ADDGLBATCHKEY"
        },
        "ADJ": {
          "type": "boolean",
          "x-displayName": "ADJ",
          "x-samplevalue": false
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-24T16:09:25Z"
        },
        "BACKORDER": {
          "type": "string",
          "x-displayName": "BACKORDER",
          "x-samplevalue": "No"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD"
        },
        "BILLTO": {
          "$ref": "#/definitions/purchaseOrdersGetByIdBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY",
          "x-samplevalue": 1067
        },
        "CLOSED": {
          "type": "boolean",
          "x-displayName": "CLOSED",
          "x-samplevalue": false
        },
        "CONTACT": {
          "$ref": "#/definitions/purchaseOrdersGetByIdCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CREATEDFROM": {
          "type": "string",
          "x-displayName": "CREATEDFROM"
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDUSER",
          "x-samplevalue": 1
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-displayName": "CREATEDUSERID",
          "x-samplevalue": "admin"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD"
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "vendor.id",
          "x-displayName": "CUSTVENDID",
          "x-samplevalue": 20029
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-displayName": "CUSTVENDNAME",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "DATEPRINTED": {
          "type": "string",
          "x-displayName": "DATEPRINTED"
        },
        "DELIVERTO": {
          "$ref": "#/definitions/purchaseOrdersGetByIdDELIVERTO"
        },
        "DELIVERTOKEY": {
          "type": "string",
          "x-displayName": "DELIVERTOKEY"
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Purchase Order-PO0001"
        },
        "DOCNO": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNO",
          "x-samplevalue": "PO0001"
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-displayName": "DOCPARCLASS",
          "x-samplevalue": "ORDER"
        },
        "DOCPARID": {
          "type": "string",
          "x-displayName": "DOCPARID",
          "x-samplevalue": "Purchase Order"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DOCPARKEY",
          "x-samplevalue": 3
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-displayName": "DOCPAR_IN_OUT",
          "x-samplevalue": "Increase"
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-displayName": "ENTGLGROUP"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-01-31"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchaseOrdersGetByIdEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL"
        },
        "HISTORY": {
          "$ref": "#/definitions/purchaseOrdersGetByIdHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-displayName": "INVBATCHKEY"
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-displayName": "INVOICERUNKEY"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA"
        },
        "MESSAGE": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "MESSAGE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "NOTE": {
          "type": "string",
          "x-displayName": "NOTE"
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-displayName": "PAYMENTSTATUS",
          "x-samplevalue": "Open"
        },
        "PODOCUMENTENTRIES": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIES"
        },
        "PONUMBER": {
          "type": "string",
          "x-displayName": "PONUMBER",
          "x-samplevalue": "Spend Management Example"
        },
        "PRINTED": {
          "type": "string",
          "x-displayName": "PRINTED",
          "x-samplevalue": "No"
        },
        "PRINTEDBY": {
          "type": "string",
          "x-displayName": "PRINTEDBY"
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-displayName": "PRINTEDUSERID"
        },
        "PRINVBATCHKEY": {
          "type": "string",
          "x-displayName": "PRINVBATCHKEY"
        },
        "PRRECORDKEY": {
          "type": "string",
          "x-displayName": "PRRECORDKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 799
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-displayName": "RENEWEDDOC"
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-displayName": "SALESCONTRACT",
          "x-samplevalue": "N"
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY"
        },
        "SHIPTO": {
          "$ref": "#/definitions/purchaseOrdersGetByIdSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 1067
        },
        "SHIPVIA": {
          "type": "string",
          "x-displayName": "SHIPVIA"
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Converted"
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "subTotal",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": 750
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID"
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": false
        },
        "TERM": {
          "$ref": "#/definitions/purchaseOrdersGetByIdTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-displayName": "TOTAL",
          "x-samplevalue": 750
        },
        "TOTALDUE": {
          "type": "string",
          "x-alias": "totalAmountDue",
          "x-displayName": "TOTALDUE"
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-displayName": "TOTALPAID"
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_SUBTOTAL",
          "x-samplevalue": 750
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTAL",
          "x-samplevalue": 750
        },
        "TRX_TOTALDUE": {
          "type": "string",
          "x-displayName": "TRX_TOTALDUE"
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "type": "string",
          "x-displayName": "TRX_TOTALPAID"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No"
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-displayName": "USEDASCONTRACT"
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USER",
          "x-samplevalue": 1
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "admin"
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-alias": "bill[*].id",
          "x-displayName": "VENDORDOCNO"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/purchaseOrdersGetByIdWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-03-02"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENPOSTED": {
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED"
        },
        "_DOCPAR": {
          "$ref": "#/definitions/purchaseOrdersGetById_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "billsPaymentsUpdate": {
      "properties": {
        "ACTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AMOUNTTOPAY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "APPYMTDETAILS": {
          "$ref": "#/definitions/billsPaymentsUpdateAPPYMTDETAILS"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-alias": [
            {
              "alias": "checkBankAccount",
              "description": "checkBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Printed Check"
            },
            {
              "alias": "ccBankAccount",
              "description": "ccBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Credit Card"
            }
          ],
          "x-displayName": "FINANCIALENTITY",
          "x-samplevalue": "string"
        },
        "PAYMENTDATE": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "PAYMENTMETHOD": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "PAYMENTMETHOD",
          "x-samplevalue": "string"
        },
        "PAYMENTREQUESTMETHOD": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-displayName": "VENDORID",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemexpiration": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "invoicesAdvancedGETByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "customer.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "customer.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "customer.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "customer.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "customer.contact.phone",
          "x-samplevalue": "617-374-4794"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "accountGroupsListGLCATGRPS": {
      "properties": {
        "glcoacatmember": {
          "items": {
            "$ref": "#/definitions/accountGroupsListGLCATGRPSGlcoacatmember"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "ledgerAccountsAdvancedPOSTRequest": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-conditionally-required-description": "Required if RECORDNO is not given",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160"
        },
        "ACCOUNTTYPE": {
          "type": "string",
          "x-alias": "accCategory",
          "x-displayName": "ACCOUNTTYPE",
          "x-samplevalue": "incomestatement"
        },
        "ALTERNATIVEACCOUNT": {
          "type": "string",
          "x-displayName": "ALTERNATIVEACCOUNT",
          "x-samplevalue": "None"
        },
        "CATEGORY": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Finance Charges Expense"
        },
        "CLOSINGACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-displayName": "CLOSINGACCOUNTNO",
          "x-samplevalue": 3100
        },
        "CLOSINGTYPE": {
          "type": "string",
          "x-displayName": "CLOSINGTYPE",
          "x-samplevalue": "closing account"
        },
        "NORMALBALANCE": {
          "type": "string",
          "x-alias": "tranType",
          "x-displayName": "NORMALBALANCE",
          "x-samplevalue": "credit"
        },
        "REQUIRECLASS": {
          "type": "boolean",
          "x-displayName": "REQUIRECLASS",
          "x-samplevalue": false
        },
        "REQUIRECONTRACT": {
          "type": "boolean",
          "x-displayName": "REQUIRECONTRACT",
          "x-samplevalue": false
        },
        "REQUIRECUSTOMER": {
          "type": "boolean",
          "x-displayName": "REQUIRECUSTOMER",
          "x-samplevalue": false
        },
        "REQUIREDEPT": {
          "type": "boolean",
          "x-alias": "requireDept",
          "x-displayName": "REQUIREDEPT",
          "x-samplevalue": false
        },
        "REQUIREEMPLOYEE": {
          "type": "boolean",
          "x-displayName": "REQUIREEMPLOYEE",
          "x-samplevalue": false
        },
        "REQUIREGLDIM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "REQUIREITEM": {
          "type": "boolean",
          "x-displayName": "REQUIREITEM",
          "x-samplevalue": false
        },
        "REQUIRELOC": {
          "type": "boolean",
          "x-alias": "requireLoc",
          "x-displayName": "REQUIRELOC",
          "x-samplevalue": false
        },
        "REQUIREPROJECT": {
          "type": "boolean",
          "x-displayName": "REQUIREPROJECT",
          "x-samplevalue": false
        },
        "REQUIREVENDOR": {
          "type": "boolean",
          "x-displayName": "REQUIREVENDOR",
          "x-samplevalue": false
        },
        "REQUIREWAREHOUSE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "active"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "accName",
          "x-displayName": "TITLE",
          "x-samplevalue": "Satish"
        }
      },
      "required": [
        "TITLE",
        "ACCOUNTNO"
      ],
      "type": "object"
    },
    "vendorsListRETURNTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsListRETURNTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersListBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDonotshipafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.year}"
        }
      },
      "title": "donotshipafterdate",
      "type": "object"
    },
    "itemsListUOMPOUOMDETAIL": {
      "properties": {
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-alias": "purchaseUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "creditCardChargeListCREDITCARDFEEENTRIESCreditcardfeeentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason"
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        }
      },
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPEXPENSEACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "accountTitlesGetResObject": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": 1010,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BASETITLE": {
          "type": "string",
          "x-displayName": "BASETITLE",
          "x-samplevalue": "SVB Operating - USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TITLE": {
          "type": "string",
          "x-displayName": "TITLE",
          "x-samplevalue": "TEMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "inventoryTransactionsByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "orderEntryPriceListsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "orderEntryPriceListsById",
      "type": "object",
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATEFROM"
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2030-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATETO"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "OE Standard Price List",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALEPURCHASE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        }
      }
    },
    "inventoryTransactionsListsEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Sales only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "vendorsGetByIDCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "contact.firstName "
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsGetByIDCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-alias": "webSite"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIESRecurdocumententry": {
      "properties": {
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "300--Enterprises"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Enterprises"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 781
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0442--dang"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "dang"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "CAD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCENTRYKEY": {
          "type": "string"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "102--Waits, Tom"
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Waits, Tom"
        },
        "EXCHRATE": {
          "type": "string",
          "x-samplevalue": ".7555"
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-samplevalue": "11/15/2018"
        },
        "EXCHRATETYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10004
        },
        "ITEM": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Platform Pack"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "120--Platform Pack"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINESTATUS": {
          "type": "string",
          "x-samplevalue": "Active"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "120--string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEMO": {
          "type": "string",
          "x-samplevalue": "weewe"
        },
        "OVERRIDETAX": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 26
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "1020--.nknkljbjkvi"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": ".nknkljbjkvi"
        },
        "PRORATEPRICE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10025": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10004
        },
        "ROUNDAMT": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIESRecurdocumententrySHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "UIPRICE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.51
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.51
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "20002--Amazon.com"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Amazon.com"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryWAREHOUSE"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "11/15/2018"
        }
      },
      "title": "recurdocumententry",
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqDeliverto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{deliverto.contactname}"
        }
      },
      "title": "deliverto",
      "type": "object"
    },
    "itemsGetByIdTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "inventoryTransactionDefinationsListINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionDefinationsListINVGL_ACCOUNTSINVGL_ACCOUNT"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "salesOrdersListCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "customer.contact.firstName"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "customer.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersListCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "customer.contact.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSUBTOTALS": {
      "properties": {
        "sodocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdSUBTOTALSSodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "creditMemosGetByIdARADJUSTMENTITEMSAradjustmentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 19
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1233
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Usage"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "Dep11"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "CE department"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 37
        },
        "DETAILID": {
          "type": "string"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string",
          "x-samplevalue": "AsasaS"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-19"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1233
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Usage"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "anyId1"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "un1"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1200
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Receivable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "PRENTRYOFFSETACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1200
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2729
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11631
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ra"
        },
        "RGLDIM169562_10014": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "aradjustmentitem",
      "type": "object"
    },
    "projectsResponse": {
      "properties": {
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "OVH1"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "title": "projectsResponse",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "PROJECT"
    },
    "journalsListENTRIES": {
      "properties": {
        "glentry": {
          "items": {
            "$ref": "#/definitions/journalsListENTRIESGlentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPDEFRRGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "journalEntryPostReq": {
      "properties": {
        "BASELOCATION_NO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BATCH_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BATCH_TITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRIES": {
          "$ref": "#/definitions/journalEntryPostReqENTRIES"
        },
        "HISTORY_COMMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "REFERENCENO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "REVERSEDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXIMPLICATIONS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATCONTACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATCUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATVENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "JOURNAL",
        "BATCH_DATE",
        "BATCH_TITLE",
        "ENTRIES"
      ],
      "title": "journalEntryPostReq",
      "type": "object"
    },
    "creditMemosAdvancedGETALLBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 796
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "employeesListEMPLOYEERATE": {
      "properties": {
        "employeerate": {
          "$ref": "#/definitions/employeesListEMPLOYEERATEEmployeerate"
        }
      },
      "type": "object"
    },
    "customersPOSTRequestBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "customersPOSTRequestSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqActualcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.year}"
        }
      },
      "title": "actualcompletiondate",
      "type": "object"
    },
    "newClassesResp": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "123"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "27"
        }
      },
      "title": "newClassesResp",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CLASS"
    },
    "updateAccountGroupGLACCTGRPSGLACCTGRPMEMBER": {
      "properties": {
        "CHILDNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "GLACCTGRPMEMBER",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqContractstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.year}"
        }
      },
      "title": "contractstartdate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqRevisedcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.year}"
        }
      },
      "title": "revisedcompletiondate",
      "type": "object"
    },
    "orderEntryTransactionsLists_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ledgerAccountsAdvancedGETById": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160"
        },
        "ACCOUNTTYPE": {
          "type": "string",
          "x-alias": "accCategory",
          "x-displayName": "ACCOUNTTYPE",
          "x-samplevalue": "incomestatement"
        },
        "ALTERNATIVEACCOUNT": {
          "type": "string",
          "x-displayName": "ALTERNATIVEACCOUNT",
          "x-samplevalue": "None"
        },
        "CATEGORY": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Finance Charges Expense"
        },
        "CATEGORYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CATEGORYKEY",
          "x-samplevalue": 818
        },
        "CE_CUSTOM": {
          "type": "string",
          "x-alias": "custom",
          "x-displayName": "CE_CUSTOM"
        },
        "CLOSETOACCTKEY": {
          "type": "string",
          "x-displayName": "CLOSETOACCTKEY"
        },
        "CLOSINGACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-displayName": "CLOSINGACCOUNTNO",
          "x-samplevalue": 3100
        },
        "CLOSINGACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "CLOSINGACCOUNTTITLE"
        },
        "CLOSINGTYPE": {
          "type": "string",
          "x-displayName": "CLOSINGTYPE",
          "x-samplevalue": "closing account"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-alias": "location.id",
          "x-displayName": "LOCATIONKEY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9
        },
        "MRCCODE": {
          "type": "string",
          "x-displayName": "MRCCODE"
        },
        "NORMALBALANCE": {
          "type": "string",
          "x-alias": "tranType",
          "x-displayName": "NORMALBALANCE",
          "x-samplevalue": "credit"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2"
        },
        "REQUIRECLASS": {
          "type": "boolean",
          "x-displayName": "REQUIRECLASS",
          "x-samplevalue": false
        },
        "REQUIRECONTRACT": {
          "type": "boolean",
          "x-displayName": "REQUIRECONTRACT",
          "x-samplevalue": false
        },
        "REQUIRECUSTOMER": {
          "type": "boolean",
          "x-displayName": "REQUIRECUSTOMER",
          "x-samplevalue": false
        },
        "REQUIREDEPT": {
          "type": "boolean",
          "x-alias": "requireDept",
          "x-displayName": "REQUIREDEPT",
          "x-samplevalue": false
        },
        "REQUIREEMPLOYEE": {
          "type": "boolean",
          "x-displayName": "REQUIREEMPLOYEE",
          "x-samplevalue": false
        },
        "REQUIREGLDIMCHANNEL": {
          "type": "boolean",
          "x-displayName": "REQUIREGLDIMCHANNEL",
          "x-samplevalue": false
        },
        "REQUIREITEM": {
          "type": "boolean",
          "x-displayName": "REQUIREITEM",
          "x-samplevalue": false
        },
        "REQUIRELOC": {
          "type": "boolean",
          "x-alias": "requireLoc",
          "x-displayName": "REQUIRELOC",
          "x-samplevalue": false
        },
        "REQUIREPROJECT": {
          "type": "boolean",
          "x-displayName": "REQUIREPROJECT",
          "x-samplevalue": false
        },
        "REQUIREVENDOR": {
          "type": "boolean",
          "x-displayName": "REQUIREVENDOR",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "active"
        },
        "SUBLEDGERCONTROLON": {
          "type": "boolean",
          "x-displayName": "SUBLEDGERCONTROLON",
          "x-samplevalue": false
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": false
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "taxCode",
          "x-displayName": "TAXCODE"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "accName",
          "x-displayName": "TITLE",
          "x-samplevalue": "Satish"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "recurringBillsByIdAPRECURBILLENTRY": {
      "properties": {
        "aprecurbillentry": {
          "$ref": "#/definitions/recurringBillsByIdAPRECURBILLENTRYAprecurbillentry"
        }
      },
      "title": "APRECURBILLENTRY",
      "type": "object"
    },
    "usersPatchRes": {
      "properties": {
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "CPAUser"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "title": "usersPatchRes",
      "x-vendor-objectname": "USERINFO",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "vendorsGetByIDPAYTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqTOTALSTOTAL": {
      "properties": {
        "Q_QV": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SIGN": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TOTALID": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "TOTAL",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqResponsedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{responsedue.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{responsedue.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{responsedue.year}"
        }
      },
      "title": "responsedue",
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-24T16:09:25Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DELIVERTO": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryDELIVERTO"
        },
        "DELIVERTOKEY": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "400--Marketing"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 400
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Marketing"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "DISCOUNT": {
          "type": "string",
          "x-alias": "lines[*].discountAmount"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 799
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-01-31"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Marketing SWAG"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Marketing SWAG"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "710--Marketing SWAG"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LCCATKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 750
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 2139
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10023": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "P"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "STOCK_NUMBER": {
          "type": "string"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string",
          "x-alias": "lines[*].taxAmount"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 750
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UNIT": {
          "type": "string",
          "x-alias": "lines[*].product.purchaseUom",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "20029--Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 13
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Month",
          "x-samplevalue": 11
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2018
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "customersAdvancedGETALLObject": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-displayName": "ACCOUNTLABELKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADVBILLBY": {
          "type": "string",
          "x-displayName": "ADVBILLBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADVBILLBYTYPE": {
          "type": "string",
          "x-displayName": "ADVBILLBYTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ARACCOUNT": {
          "type": "string",
          "x-displayName": "ARACCOUNT",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ARACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "ARACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ARINVOICEPRINTTEMPLATEID": {
          "type": "string",
          "x-displayName": "ARINVOICEPRINTTEMPLATEID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/customersAdvancedGETALLBILLTO"
        },
        "BILLTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "COMMENTS": {
          "type": "string",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/customersAdvancedGETALLCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-displayName": "CONTACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CUSTMESSAGEID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTREPID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREPID",
          "x-samplevalue": 202,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTREPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREPKEY",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTREPNAME": {
          "type": "string",
          "x-displayName": "CUSTREPNAME",
          "x-samplevalue": "Horton, Tim",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTTYPE": {
          "type": "string",
          "x-displayName": "CUSTTYPE",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTTYPEKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/customersAdvancedGETALLDISPLAYCONTACT"
        },
        "DISPLAYCONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DISPLAYCONTACTKEY",
          "x-samplevalue": 321,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLEONLINEACHPAYMENT": {
          "type": "boolean",
          "x-displayName": "ENABLEONLINEACHPAYMENT",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLEONLINECARDPAYMENT": {
          "type": "boolean",
          "x-displayName": "ENABLEONLINECARDPAYMENT",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "C10076",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGRPKEY": {
          "type": "string",
          "x-displayName": "GLGRPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LAST_INVOICEDATE": {
          "type": "string",
          "x-displayName": "LAST_INVOICEDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LAST_STATEMENTDATE": {
          "type": "string",
          "x-displayName": "LAST_STATEMENTDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OEADJPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEADJPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OEINVOICEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEINVOICEPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OELISTPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OELISTPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OEORDERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEORDERPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OEOTHERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEOTHERPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "OEPRCLSTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OEPRICESCHEDKEY": {
          "type": "string",
          "x-displayName": "OEPRICESCHEDKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OEQUOTEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEQUOTEPRINTTEMPLATEID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETGLACCOUNTNOTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNOTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ONETIME": {
          "type": "boolean",
          "x-displayName": "ONETIME",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-alias": "parent.name",
          "x-displayName": "PARENTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRCLST_OVERRIDE": {
          "type": "string",
          "x-displayName": "PRCLST_OVERRIDE",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRICELIST": {
          "type": "string",
          "x-alias": "priceLevel",
          "x-displayName": "PRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-displayName": "PRICESCHEDULE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICESCHEDULEKEY": {
          "type": "string",
          "x-displayName": "PRICESCHEDULEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "R10048": {
          "type": "string",
          "x-displayName": "R10048",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "R10049": {
          "type": "string",
          "x-displayName": "R10049",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RCHANNEL": {
          "type": "string",
          "x-displayName": "RCHANNEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RCLASS": {
          "type": "string",
          "x-displayName": "RCLASS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "123",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RESALENO": {
          "type": "string",
          "x-displayName": "RESALENO",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPPINGMETHOD": {
          "type": "string",
          "x-displayName": "SHIPPINGMETHOD",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/customersAdvancedGETALLSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPVIAKEY": {
          "type": "string",
          "x-displayName": "SHIPVIAKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "TAXID",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMSKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentTerms.id",
          "x-displayName": "TERMSKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMVALUE": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-displayName": "TERMVALUE",
          "x-samplevalue": "::#0#:O:",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERRITORYID": {
          "type": "string",
          "x-displayName": "TERRITORYID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERRITORYKEY": {
          "type": "string",
          "x-displayName": "TERRITORYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "VSOEPRCLSTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-displayName": "VSOEPRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "employeesListPERSONALINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "mobile"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "email"
        },
        "EMAIL2": {
          "type": "string",
          "x-alias": "email2"
        },
        "FAX": {
          "type": "string",
          "x-alias": "fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "firstName",
          "x-samplevalue": "Selma"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "lastName",
          "x-samplevalue": "Yeganeh"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/employeesListPERSONALINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "phone",
          "x-samplevalue": "020 4783 9398"
        },
        "PHONE2": {
          "type": "string",
          "x-alias": "phone2"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Selma Yeganeh"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "contactsAdvancedGETAllMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListDELIVERTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemDonotshipafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.year}"
        }
      },
      "title": "donotshipafterdate",
      "type": "object"
    },
    "orderEntryTransactionsListsSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqActualcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{actualcompletiondate.year}"
        }
      },
      "title": "actualcompletiondate",
      "type": "object"
    },
    "locationsListIEPAYABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "expenseReportsListEEXPENSESITEMS": {
      "properties": {
        "eexpensesitem": {
          "$ref": "#/definitions/expenseReportsListEEXPENSESITEMSEexpensesitem"
        }
      },
      "type": "object"
    },
    "salesOrdersListSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "shippingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersListSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "vendorsListDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ZIP": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.year}"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqNoticetoproceed": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.year}"
        }
      },
      "title": "noticetoproceed",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqSchedulestartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.year}"
        }
      },
      "title": "schedulestartdate",
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "contactsPOSTresponse": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "SAtish Vatada"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1750"
        }
      },
      "title": "contactsPOSTresponse",
      "type": "object",
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CONTACT"
    },
    "purchaseOrdersGetByIdDELIVERTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdDELIVERTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReq": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ALLOWEDITDELIVERTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ALLOWEDITSHIPTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CREDITLIMITCHECK": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENABLEOVERRIDETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqENTITY_PROPS"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqINVGL_ACCOUNTS"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "OVERRIDE_PRICE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "POSTTOGL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRESERVE_SEQNUM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RECALLS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqRECALLS"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE3": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOW_TOTALS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqSUBTOTALS"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqTOTALS"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "purchasingTransactionDefinitionsPostReq",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostRes": {
      "properties": {
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "39"
        }
      },
      "title": "purchasingTransactionDefinitionsPostRes",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "PODOCUMENTPARAMS"
    },
    "purchasingTransactionsLegacyPostReqDateposted": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateposted.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateposted.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateposted.year}"
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "InventoryTransactionLegacyGetByIdSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string"
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "customerid": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "employeeid": {
          "type": "string"
        },
        "itemid": {
          "type": "string"
        },
        "locationid": {
          "type": "string"
        },
        "percentval": {
          "type": "string"
        },
        "projectid": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "itemGroupsById": {
      "properties": {
        "CONDITION": {
          "type": "string"
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-samplevalue": "AND"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Inventory Items"
        },
        "DIMGRPCOMP": {
          "type": "string"
        },
        "GROUPTYPE": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "Inventory Items"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MEMBERFILTERS": {
          "items": {
            "$ref": "#/definitions/itemGroupsByIdMEMBERFILTERS"
          },
          "type": "array"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Inventory Items"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RESTRICTTO": {
          "type": "string"
        },
        "SORTFIELD": {
          "type": "string",
          "x-samplevalue": "ITEMID"
        },
        "SORTORDER": {
          "type": "string",
          "x-samplevalue": "ASC"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-02-22T22:11:48Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-02-22T22:11:48Z"
        }
      },
      "title": "itemGroupsById",
      "x-has-customfields": "false",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "entitiesByIdIERECEIVABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "title": "IERECEIVABLE",
      "type": "object"
    },
    "purchaseOrdersGetByIdSUBTOTALS": {
      "properties": {
        "podocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersGetByIdSUBTOTALSPodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitems": {
      "properties": {
        "sotransitem": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitem"
          },
          "type": "array"
        }
      },
      "title": "updatesotransitems",
      "type": "object"
    },
    "foldersUpdateResponse": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "x-vendor-objectname": "supdocfolder",
      "type": "object"
    },
    "checkingAccountsById": {
      "properties": {
        "ABOURL": {
          "type": "string"
        },
        "ABO_EMAIL_ID": {
          "type": "string"
        },
        "ABO_FIRST_NAME": {
          "type": "string"
        },
        "ABO_LAST_NAME": {
          "type": "string"
        },
        "ABO_MIDDLE_NAME": {
          "type": "string"
        },
        "ABO_PHONE_NUMBER": {
          "type": "string"
        },
        "ACHBANKID": {
          "type": "string"
        },
        "ACHCOMPANYID": {
          "type": "string"
        },
        "ACHENABLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AMEXCHECKNUM": {
          "type": "string"
        },
        "AMEX_BANK_ACCOUNT_ADDRESS_ID": {
          "type": "string"
        },
        "AMEX_BANK_ACCOUNT_ID": {
          "type": "string"
        },
        "AMEX_BA_ACH_AFFILIATE_ID": {
          "type": "string"
        },
        "AMEX_BA_CD_RETURN_ADDRESS_ID": {
          "type": "string"
        },
        "AMEX_CARD_ACCOUNT_ID": {
          "type": "string"
        },
        "AMEX_PAYVE_ACCOUNTID": {
          "type": "string"
        },
        "APCANUMBER": {
          "type": "string"
        },
        "AUTOMATE_ACH_PYMT_CONF": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_ACH_PYMT_SEND": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_CHECK_PRINT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_PYMT_CONF": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "500_ING"
        },
        "BANKACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 9387573932
        },
        "BANKACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "checking"
        },
        "BANKFILEFORMAT": {
          "type": "string"
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "ING"
        },
        "BATCHID": {
          "type": "string"
        },
        "BRANCHID": {
          "type": "string"
        },
        "BSBNUMBER": {
          "type": "string"
        },
        "CHECKINFOCONTACT": {
          "$ref": "#/definitions/checkingAccountsByIdCHECKINFOCONTACT"
        },
        "CHECKLAYOUT": {
          "$ref": "#/definitions/checkingAccountsByIdCHECKLAYOUT"
        },
        "CHECKSPERPAGE": {
          "type": "string"
        },
        "COMPANYIDENTIFICATION": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "EUR"
        },
        "CUTOFFDATE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "DISCRETIONARYDATA": {
          "type": "string"
        },
        "DOCNUMBERSEQ": {
          "type": "string"
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/checkingAccountsByIdFINANCIALDATA"
        },
        "FINANCIALINSTITUTION": {
          "type": "string"
        },
        "FORWFPM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FRACTIONALROUTINGNO": {
          "type": "string"
        },
        "FULLBANKNAME": {
          "type": "string"
        },
        "GLACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1014
        },
        "INPBAL": {
          "type": "string"
        },
        "INPDATE": {
          "type": "string"
        },
        "INTERESTEARNEDACCOUNTLABEL": {
          "type": "string"
        },
        "INTERESTEARNEDGLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8100
        },
        "LASTRECONCILEDBALANCE": {
          "type": "string"
        },
        "LASTRECONCILEDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/checkingAccountsByIdMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "NAMEONTHEACCOUNT": {
          "type": "string"
        },
        "NEXTCHECK": {
          "type": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-samplevalue": "Restricted"
        },
        "ORIGINATORSTATUSCODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OUTSOURCEACH": {
          "type": "string"
        },
        "OUTSOURCECHECK": {
          "type": "string"
        },
        "PHONE": {
          "type": "string",
          "x-samplevalue": "353 1 638 4000"
        },
        "PMCHECKTEMPLATEID": {
          "type": "string"
        },
        "PRINTON": {
          "type": "string",
          "x-samplevalue": "D"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "RECORDTYPECODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "RESTRICTEDLOCATIONS": {
          "$ref": "#/definitions/checkingAccountsByIdRESTRICTEDLOCATIONS"
        },
        "ROUTINGNO": {
          "type": "string"
        },
        "RSVPCODE": {
          "type": "string"
        },
        "SERVICECHARGEACCOUNTLABEL": {
          "type": "string"
        },
        "SERVICECHARGEGLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6270
        },
        "SERVICECLASSCODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 220
        },
        "SHARECHECKNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUNNUMBER": {
          "type": "string"
        },
        "TRACENUMBERSEQ": {
          "type": "string"
        },
        "USEBANKFILE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USERECOMMENDEDSETUP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USETRACENUMBER": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-06-07T20:13:12Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-09-26T13:32:52Z"
        },
        "WPBACCOUNTNAME": {
          "type": "string"
        },
        "WPBBANK": {
          "type": "string"
        },
        "WPBBANKACCOUNTID": {
          "type": "string"
        },
        "WPBDATAPROVIDER": {
          "type": "string"
        },
        "WPBLASTBANKFEEDDATE": {
          "type": "string"
        },
        "WPBLASTTRANSACTIONSRECEIVED": {
          "type": "string"
        },
        "WPBREFRESHSTATUS": {
          "type": "string"
        },
        "WPBSTATUS": {
          "type": "string"
        }
      },
      "title": "checkingAccountsById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "chargeCardAccountsListFINANCIALDATA": {
      "properties": {
        "DISABLEIET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "JOURNALTITLE": {
          "type": "string",
          "x-samplevalue": "Cash Journal"
        },
        "JOURNALTITLE2": {
          "type": "string"
        },
        "JRNLKEY2": {
          "type": "string"
        },
        "PARENTENTITY": {
          "type": "string"
        },
        "PARENTENTITYNAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "reportingPeriodPostRes": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "SaiSatish Test"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 186
        }
      },
      "title": "reportingPeriodPostRes",
      "x-vendor-objectname": "REPORTINGPERIOD",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUP": {
      "properties": {
        "COGSACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPCOGSACCOUNT"
        },
        "DEFRRGLACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPDEFRRGLACCOUNT"
        },
        "EXPENSEACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPEXPENSEACCOUNT"
        },
        "INCOMEACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPINCOMEACCOUNT"
        },
        "INVENTORYACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPINVENTORYACCOUNT"
        },
        "OEGLACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPOEGLACCOUNT"
        },
        "POGLACCOUNT": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUPPOGLACCOUNT"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqOrigdocdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "origdocdate",
      "type": "object"
    },
    "customersPATCHRequest": {
      "properties": {
        "ARACCOUNT": {
          "type": "string",
          "x-displayName": "ARACCOUNT",
          "x-samplevalue": "sample"
        },
        "ARINVOICEPRINTTEMPLATEID": {
          "type": "string",
          "x-displayName": "ARINVOICEPRINTTEMPLATEID",
          "x-samplevalue": "sample"
        },
        "BILLTO": {
          "$ref": "#/definitions/customersPATCHRequestBILLTO"
        },
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMMENTS": {
          "type": "string",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "sample"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/customersPATCHRequestCONTACTINFO"
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": 10
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "sample"
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CUSTMESSAGEID",
          "x-samplevalue": "sample"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118"
        },
        "CUSTTYPE": {
          "type": "string",
          "x-displayName": "CUSTTYPE",
          "x-samplevalue": "sample"
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "sample"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/customersPATCHRequestDISPLAYCONTACT"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "sample"
        },
        "HIDEDISPLAYCONTACT": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "sample"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "sample"
        },
        "OEADJPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEADJPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEINVOICEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEINVOICEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OELISTPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OELISTPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEORDERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEORDERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEOTHERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEOTHERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEQUOTEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEQUOTEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-samplevalue": 10
        },
        "ONETIME": {
          "type": "boolean",
          "x-displayName": "ONETIME",
          "x-samplevalue": true
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": true
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 10
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "123"
        },
        "RESALENO": {
          "type": "string",
          "x-displayName": "RESALENO",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "sample"
        },
        "SHIPPINGMETHOD": {
          "type": "string",
          "x-displayName": "SHIPPINGMETHOD",
          "x-samplevalue": "sample"
        },
        "SHIPTO": {
          "$ref": "#/definitions/customersPATCHRequestSHIPTO"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "sample"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "sample"
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "TAXID",
          "x-samplevalue": 10
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "sample"
        },
        "TERRITORYID": {
          "type": "string",
          "x-displayName": "TERRITORYID",
          "x-samplevalue": "sample"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "CUSTOMER",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetailsItemdetail"
          },
          "type": "array"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "creditMemosGetByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "journalEntryPostReqENTRIESGLENTRYSPLIT": {
      "properties": {
        "AMOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "AMOUNT"
      ],
      "title": "SPLIT",
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DEPARTMENTNAME": {
          "type": "string"
        },
        "DEPTKEY": {
          "type": "string"
        },
        "DISCOUNT": {
          "type": "string"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Products"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "SAM001--SAM TEST ITEM"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1536
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "I"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "itemsListUOMSOUOMDETAIL": {
      "properties": {
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-alias": "salesUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "customersAdvancedGETALLDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "itemTaxGroupsListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GROUPTYPE": {
          "type": "string",
          "x-displayName": "GROUPTYPE",
          "x-samplevalue": "Item",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Satish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 122,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "itemsPostWAREHOUSEINFOITEMWAREHOUSEINFOITEMWAREHOUSEVENDORENTRIES": {
      "properties": {
        "ECONOMIC_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "FORECAST_DEMAND_IN_LEAD_TIME": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "LEAD_TIME": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "MIN_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "PREFERRED_VENDOR": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "STOCKNO": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "salesOrdersGetByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "billsPaymentsCreate": {
      "properties": {
        "ACTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AMOUNTTOPAY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "APPYMTDETAILS": {
          "$ref": "#/definitions/billsPaymentsCreateAPPYMTDETAILS"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-alias": [
            {
              "alias": "checkBankAccount",
              "description": "checkBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Printed Check"
            },
            {
              "alias": "ccBankAccount",
              "description": "ccBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Credit Card"
            }
          ],
          "x-displayName": "FINANCIALENTITY",
          "x-samplevalue": "string"
        },
        "PAYMENTDATE": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "PAYMENTMETHOD": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "PAYMENTMETHOD",
          "x-samplevalue": "string"
        },
        "PAYMENTREQUESTMETHOD": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-displayName": "VENDORID",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        }
      },
      "required": [
        "PAYMENTMETHOD",
        "CURRENCY",
        "VENDORID",
        "APPYMTDETAILS",
        "FINANCIALENTITY"
      ],
      "type": "object"
    },
    "vendorsGetByIDOWNERACCOUNTLABEL": {
      "properties": {
        "LABEL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReq": {
      "properties": {
        "actualcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqActualcompletiondate"
        },
        "actualstartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqActualstartdate"
        },
        "basecurr": {
          "type": "string",
          "x-samplevalue": "{basecurr}"
        },
        "cancelafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqCancelafterdate"
        },
        "contractenddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqContractenddate"
        },
        "contractstartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqContractstartdate"
        },
        "createdfrom": {
          "type": "string",
          "x-samplevalue": "{createdfrom}"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "{currency}"
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{customfields}"
        },
        "datecreated": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDateposted"
        },
        "deliverto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDeliverto"
        },
        "documentno": {
          "type": "string",
          "x-samplevalue": "{documentno}"
        },
        "donotshipafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDonotshipafterdate"
        },
        "donotshipbeforedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqDonotshipbeforedate"
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "{exchrate}"
        },
        "exchratedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqExchratedate"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "{exchratetype}"
        },
        "exclusions": {
          "type": "string",
          "x-samplevalue": "{exclusions}"
        },
        "executedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqExecutedon"
        },
        "externalapprovedby": {
          "type": "string",
          "x-samplevalue": "{externalapprovedby}"
        },
        "externalapprovedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqExternalapprovedon"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "{externalid}"
        },
        "externalrefno": {
          "type": "string",
          "x-samplevalue": "{externalrefno}"
        },
        "externalsignedby": {
          "type": "string",
          "x-samplevalue": "{externalsignedby}"
        },
        "externalsignedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqExternalsignedon"
        },
        "externalverbalby": {
          "type": "string",
          "x-samplevalue": "{externalverbalby}"
        },
        "inclusions": {
          "type": "string",
          "x-samplevalue": "{inclusions}"
        },
        "internalapprovedby": {
          "type": "string",
          "x-samplevalue": "{internalapprovedby}"
        },
        "internalapprovedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqInternalapprovedon"
        },
        "internalinitiatedby": {
          "type": "string",
          "x-samplevalue": "{internalinitiatedby}"
        },
        "internalissuedby": {
          "type": "string",
          "x-samplevalue": "{internalissuedby}"
        },
        "internalissuedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqInternalissuedon"
        },
        "internalrefno": {
          "type": "string",
          "x-samplevalue": "{internalrefno}"
        },
        "internalsignedby": {
          "type": "string",
          "x-samplevalue": "{internalsignedby}"
        },
        "internalsignedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqInternalsignedon"
        },
        "internalsource": {
          "type": "string",
          "x-samplevalue": "{internalsource}"
        },
        "internalsourcerefno": {
          "type": "string",
          "x-samplevalue": "{internalsourcerefno}"
        },
        "internalverbalby": {
          "type": "string",
          "x-samplevalue": "{internalverbalby}"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "{message}"
        },
        "needbydate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqNeedbydate"
        },
        "noticetoproceed": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqNoticetoproceed"
        },
        "paymentbondamount": {
          "type": "string",
          "x-samplevalue": "{paymentbondamount}"
        },
        "paymentbondreceived": {
          "type": "string",
          "x-samplevalue": "{paymentbondreceived}"
        },
        "paymentbondrequired": {
          "type": "string",
          "x-samplevalue": "{paymentbondrequired}"
        },
        "paymentsuretycompany": {
          "type": "string",
          "x-samplevalue": "{paymentsuretycompany}"
        },
        "payto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPayto"
        },
        "performancebondamount": {
          "type": "string",
          "x-samplevalue": "{performancebondamount}"
        },
        "performancebondreceived": {
          "type": "string",
          "x-samplevalue": "{performancebondreceived}"
        },
        "performancebondrequired": {
          "type": "string",
          "x-samplevalue": "{performancebondrequired}"
        },
        "performancesuretycompany": {
          "type": "string",
          "x-samplevalue": "{performancesuretycompany}"
        },
        "potransitems": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitems"
        },
        "promiseddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPromiseddate"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "{referenceno}"
        },
        "responsedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqResponsedue"
        },
        "returnto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqReturnto"
        },
        "revisedcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqRevisedcompletiondate"
        },
        "scheduledcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqScheduledcompletiondate"
        },
        "scheduleimpact": {
          "type": "string",
          "x-samplevalue": "{scheduleimpact}"
        },
        "schedulestartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqSchedulestartdate"
        },
        "scope": {
          "type": "string",
          "x-samplevalue": "{scope}"
        },
        "shippingmethod": {
          "type": "string",
          "x-samplevalue": "{shippingmethod}"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "{state}"
        },
        "substantialcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqSubstantialcompletiondate"
        },
        "subtotals": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqSubtotals"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "{supdocid}"
        },
        "termname": {
          "type": "string",
          "x-samplevalue": "{termname}"
        },
        "terms": {
          "type": "string",
          "x-samplevalue": "{terms}"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "{transactiontype}"
        },
        "vendordocno": {
          "type": "string",
          "x-samplevalue": "{vendordocno}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}"
        }
      },
      "title": "purchasingTransactionsLegacyPatchReq",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "orderEntryTransactionDefinitionsById",
      "type": "object",
      "properties": {
        "ADDGL_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListADDGL_ACCOUNTS"
        },
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITBILLTO"
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITCUSTVEND"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITSHIPTO"
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CATEGORY"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTTITLE1"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTTITLE2"
        },
        "CONVERT_UNITS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONVERT_UNITS"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONVTYPE"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATETYPE"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATION_RULE"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREDITLIMITCHECK"
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUST_VEND"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFAULT_WAREHOUSE"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DELTYPE"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTOVERRIDE"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNT_ON_EXTENDEDPRICE"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISPLAY_BASECURRENCY"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCCLASS"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCID"
        },
        "EDITABLE_PRICE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EDITABLE_PRICE"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EDITTYPE"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLEOVERRIDETAX"
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLEPAYMENTS"
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLEPROJECTACTUALBILLINGS"
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLERENEWALS"
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLEREVREC"
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLESCHEDULE"
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLE_COSTING"
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLE_DISCOUNT_CHARGE"
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLE_SEQNUM"
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListENTITY_PROPS"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "FIXED_MESG": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIXED_MESG"
        },
        "FORCE_PRICES": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORCE_PRICES"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INHERIT_SOURCE_DOCNO"
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IN_OUT"
        },
        "LATESTVERSIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LATESTVERSIONKEY"
        },
        "LINELEVELSIMPLETAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LINELEVELSIMPLETAX"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCOVERRIDE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OVERRIDE_EXCH_RATE_TYPE"
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OVERRIDE_PRICE"
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSTTOGL"
        },
        "PRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRCLISTKEY"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRESERVE_SEQNUM"
        },
        "PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICELISTID"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTTITLE"
        },
        "RECALLONLY": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECALLONLY"
        },
        "RECALLS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWONLYCONVERTEDLINE"
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REQUIRE_DISCOUNT_MEMO"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALE_PUR_TRANS"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SEQUENCE"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWEXPANDEDTOTALS"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWTITLE1"
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWTITLE2"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOW_TOTALS"
        },
        "SPCLPRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SPCLPRCLISTKEY"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SPECIAL_PRICELISTID"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListSUBTOTALS"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTALTEMPLATE"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTALTEMPLATEKEY"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TD_CREATION_RULE"
        },
        "TERMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMKEY"
        },
        "TERM_NAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERM_NAME"
        },
        "TOTALS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_COST"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_GL"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_INV"
        },
        "UPDATES_PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_PRICELISTID"
        },
        "UPDPRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDPRCLISTKEY"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERPERM"
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WAREHOUSESELMETHOD"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WARNONLOWQTY"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "XSLTEMPLATE": {
          "type": "string",
          "x-samplevalue": "Intacct Sales Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "XSLTEMPLATE"
        }
      }
    },
    "inventoryTransactionsListsCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsListsCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosGetByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 796
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqINVGL_ACCOUNTSINVGL_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "INVGL_ACCOUNTS",
      "type": "object"
    },
    "updateClassesResp": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updateClassesResp",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CLASS"
    },
    "warehousesListObject": {
      "properties": {
        "CONTACTINFO": {
          "$ref": "#/definitions/warehousesListCONTACTINFO"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOC": {
          "$ref": "#/definitions/warehousesListLOC"
        },
        "LOCATIONID": {
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "YK-WH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MANAGER": {
          "$ref": "#/definitions/warehousesListMANAGER"
        },
        "MANAGERID": {
          "type": "string",
          "x-displayName": "MANAGERID",
          "x-samplevalue": "101--Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "Warehouse"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "Warehouse"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-displayName": "PARENTNAME",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/warehousesListSHIPTO"
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORID": {
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USEDINGL": {
          "type": "boolean",
          "x-displayName": "USEDINGL",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-displayName": "WAREHOUSEID",
          "x-samplevalue": "YK-WH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "apTermsByIdRes": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "apTermsByIdRes",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "T3stwknkn,msfanmnasm,n;kna/lkenafnm",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DISCAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCAMOUNT"
        },
        "DISCCALCON": {
          "type": "string",
          "x-samplevalue": "Bill total",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCCALCON"
        },
        "DISCDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCDATE"
        },
        "DISCFROM": {
          "type": "string",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCFROM"
        },
        "DISCFUDGEDAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCFUDGEDAYS"
        },
        "DISCPERCAMN": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCPERCAMN"
        },
        "DUEDATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DUEDATE"
        },
        "DUEFROM": {
          "type": "string",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DUEFROM"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Upon Receipt",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PENAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENAMOUNT"
        },
        "PENFUDGEDAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENFUDGEDAYS"
        },
        "PENPERCAMN": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PENPERCAMN"
        },
        "PEN_TYPES": {
          "type": "string",
          "x-samplevalue": "No Penalty",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PEN_TYPES"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "vendorsListDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "American Express(V20001)"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsListDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "subscriptionsPreferencesByIdObject": {
      "properties": {
        "application": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "preference": {
          "type": "string",
          "x-samplevalue": "SYSTEM.MAILADDRESS.NEXT_RECORD#"
        },
        "prefvalue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "title": "subscriptionsPreferencesById",
      "type": "object",
      "x-vendor-objectname": "APPLICATION"
    },
    "departmentsResponse": {
      "properties": {
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "543"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "80"
        }
      },
      "title": "departmentsResponse",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "DEPARTMENT"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetailsItemdetail"
          },
          "type": "array"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "filesGet": {
      "properties": {
        "attachments": {
          "$ref": "#/definitions/attachments"
        },
        "createdby": {
          "type": "string"
        },
        "creationdate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "MM/DD/YYYY"
        },
        "description": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "recordno": {
          "format": "int32",
          "type": "integer"
        },
        "supdocid": {
          "format": "int32",
          "type": "integer"
        },
        "supdocname": {
          "type": "string"
        }
      },
      "x-primary-key": [
        "supdocid"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqShipto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "shipto",
      "type": "object"
    },
    "reportingPeriodsPostReq": {
      "properties": {
        "BUDGETING": {
          "type": "string",
          "x-samplevalue": "true"
        },
        "END_DATE": {
          "type": "string",
          "x-samplevalue": "01/31/2017"
        },
        "HEADER1": {
          "type": "string",
          "x-samplevalue": "Month Ended"
        },
        "HEADER2": {
          "type": "string",
          "x-samplevalue": "January 2017"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Month Ended January 2017"
        },
        "START_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2017"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "title": "reportingPeriodsPostReq",
      "type": "object"
    },
    "customersPATCHRequestBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqContractenddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{contractenddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{contractenddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{contractenddate.year}"
        }
      },
      "title": "contractenddate",
      "type": "object"
    },
    "SalesReceiptsRetrive": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "SalesReceiptsRetrive",
      "type": "object",
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-14T07:06:09.694Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BANKACCOUNTCURR": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BANKACCOUNTCURR"
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BANKACCOUNTID"
        },
        "BANKACCOUNTNAME": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BANKACCOUNTNAME"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLEARED"
        },
        "CREATEDBY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DEPOSITDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-09-14",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPOSITDATE"
        },
        "DEPOSITTO": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPOSITTO"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION2"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHANGE_RATE"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_DATE"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXTERNALURL"
        },
        "IMPLIEDLOCATION": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IMPLIEDLOCATION"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "OTHERRECEIPTSENTRIES": {
          "$ref": "#/definitions/salesReceiptsListOTHERRECEIPTSENTRIES"
        },
        "PARENTPAYMENT": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTPAYMENT"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMETHOD"
        },
        "PRBATCHKEY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCHKEY"
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RAWSTATE"
        },
        "RECON_DATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECON_DATE"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPDOCID"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "UNDEPACCTNO": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UNDEPACCTNO"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-09-14",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPAID"
        }
      }
    },
    "creditCardChargeListCREDITCARDFEEENTRIES": {
      "properties": {
        "creditcardfeeentry": {
          "items": {
            "$ref": "#/definitions/creditCardChargeListCREDITCARDFEEENTRIESCreditcardfeeentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "salesOrdersGetByIdHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "savingsAccountsGetByIdResCHECKINFOCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "982 Market St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 94102
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "employeesPatchPERSONALINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetById": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "billto": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdBillto"
        },
        "createdfrom": {
          "type": "string"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1006
        },
        "customerponumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "type": "string"
        },
        "datecreated": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdDateposted"
        },
        "dateprinted": {
          "type": "string"
        },
        "documentnumber": {
          "type": "string",
          "x-samplevalue": "ARIN-2289"
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "exchratedate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdExchratedate"
        },
        "exchratetype": {
          "type": "string"
        },
        "exchratetypeid": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1241
        },
        "message": {
          "type": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyGetByIdNeedByDate"
        },
        "paymentstatus": {
          "type": "string",
          "x-samplevalue": "Open"
        },
        "project": {
          "type": "string"
        },
        "prrecordkey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4730
        },
        "referenceno": {
          "type": "string"
        },
        "shippingmethod": {
          "type": "string"
        },
        "shipto": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdShipto"
        },
        "sotransitems": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitems"
        },
        "subtotals": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSubtotals"
        },
        "supdocid": {
          "type": "string"
        },
        "taxsolutionid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "termname": {
          "type": "string"
        },
        "totaldue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "totalentered": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "totalpaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trackingnumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "transactionid": {
          "type": "string",
          "x-samplevalue": "Sales Invoice-ARIN-2289"
        },
        "transactionstate": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "trx_totaldue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_totalentered": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_totalpaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "vsoepricelist": {
          "type": "string",
          "x-samplevalue": "PL Name"
        },
        "whenmodified": {
          "type": "string",
          "x-samplevalue": "04/29/2019 16:33:27"
        }
      },
      "title": "OrderEntryTransactionLegacyGetById",
      "x-primary-key": [
        "transactionid"
      ],
      "type": "object"
    },
    "vendorsPatchReqCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotalCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updatesubtotal",
      "type": "object"
    },
    "savingsAccountsGetByIdResMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "entitiesByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdCONTACT": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "CONTACT",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententrySHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "locationGroupsListCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationGroupsListCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorTypesListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Utilities",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENT": {
          "x-searchable": true,
          "$ref": "#/definitions/vendorTypesListPARENT"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "itemsListITEMGLGROUPEXPENSEACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemDateshiptosupplier": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.year}"
        }
      },
      "title": "dateshiptosupplier",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemCancelafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.year}"
        }
      },
      "title": "cancelafterdate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqDonotshipafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.year}"
        }
      },
      "title": "donotshipafterdate",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListDatedue": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "05"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "inventoryTransactionEntriesListITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/inventoryTransactionEntriesListITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "$ref": "#/definitions/inventoryTransactionEntriesListITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21
        }
      },
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Sales only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLCOMPGRPSGLCOMPGRPMEMBER": {
      "properties": {
        "DISPLAYAS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LHSACCTGRPNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LHSACCTNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LHSASOF": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LHSCONST": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "OPERATOR": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRECISION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "RHSACCTGRPNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RHSACCTNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RHSASOF": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RHSCONST": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "GLCOMPGRPMEMBER",
      "type": "object"
    },
    "arAccountLabelsRes": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "arAccountLabelsRes",
      "type": "object",
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "99zt1l5x",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACCOUNTLABEL"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFERREDREVACCTKEY"
        },
        "DEFRRACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFRRACCOUNTNO"
        },
        "DEFRRACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFRRACCOUNTTITLE"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "vzfskab0",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5332,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCOUNTNO"
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "asdfasfaws",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCOUNTTITLE"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISTAX"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETGLACCOUNTNO"
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETGLACCOUNTTITLE"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 23,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REVRECTEMPLKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVRECTEMPLKEY"
        },
        "REVRECTEMPLTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVRECTEMPLTITLE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUBTOTAL": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTAL"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXABLE"
        },
        "TAXAUTHORITYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXAUTHORITYKEY"
        },
        "TAXCODE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXCODE"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/arAccountLabelsListTAXGROUP"
        }
      }
    },
    "employeesListCONTACT_LIST_INFOEmployeeentitycontacts": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "PRIMARY ADDRESS"
        },
        "CONTACT": {
          "$ref": "#/definitions/employeesListCONTACT_LIST_INFOEmployeeentitycontactsCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEE": {
          "$ref": "#/definitions/employeesListCONTACT_LIST_INFOEmployeeentitycontactsEMPLOYEE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 195
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSotransitemsSotransitemLinesubtotals": {
      "properties": {
        "linesubtotal": {
          "type": "string"
        }
      },
      "title": "linesubtotals",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqResponsedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{responsedue.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{responsedue.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{responsedue.year}"
        }
      },
      "title": "responsedue",
      "type": "object"
    },
    "locationsListCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Toronto"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "Canada"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "ON"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "M6P 2C4"
        }
      },
      "type": "object"
    },
    "usersGetByIdCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 953637363
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Satish Test"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "abortnyk@intacct.com",
          "x-sub-format": "email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Andrew"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Bortnyk"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/usersGetByIdCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Bortnyk,Andrew"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "projectsPROJECTSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "CONTACTNAME"
      ],
      "title": "SHIPTO",
      "type": "object"
    },
    "customersAdvancedGETALLCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersAdvancedGETALLCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "contact.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-alias": "webSite"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdSubtotalsSubtotalCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-displayName": "Custom Field Name",
          "x-samplevalue": "GLDIMCHANNEL"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "vendorsGetByID": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTKEY"
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL"
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-displayName": "ACCOUNTLABELKEY"
        },
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "AMEX_BANK_ACCOUNT_ADDRESS_ID": {
          "type": "string",
          "x-displayName": "AMEX_BANK_ACCOUNT_ADDRESS_ID"
        },
        "AMEX_BANK_ACCOUNT_ID": {
          "type": "string",
          "x-displayName": "AMEX_BANK_ACCOUNT_ID"
        },
        "APACCOUNT": {
          "type": "string",
          "x-displayName": "APACCOUNT",
          "x-samplevalue": "string"
        },
        "APACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "APACCOUNTTITLE"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-displayName": "BILLINGTYPE",
          "x-samplevalue": "string"
        },
        "CARDSTATE": {
          "type": "string",
          "x-displayName": "CARDSTATE"
        },
        "CHECKENABLED": {
          "type": "boolean",
          "x-displayName": "CHECKENABLED",
          "x-samplevalue": false
        },
        "COMMENTS": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "string"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/vendorsGetByIDCONTACTINFO"
        },
        "CONTACTKEY1099": {
          "type": "string",
          "x-displayName": "CONTACTKEY1099"
        },
        "CONTACTTO1099": {
          "$ref": "#/definitions/vendorsGetByIDCONTACTTO1099"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DISCOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNT"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/vendorsGetByIDDISPLAYCONTACT"
        },
        "DISPLAYCONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DISPLAYCONTACTKEY",
          "x-samplevalue": 6
        },
        "DISPLAYTERMDISCOUNT": {
          "type": "string",
          "x-displayName": "DISPLAYTERMDISCOUNT",
          "x-samplevalue": "string"
        },
        "DISPLOCACCTNOCHECK": {
          "type": "boolean",
          "x-displayName": "DISPLOCACCTNOCHECK",
          "x-samplevalue": false
        },
        "DONOTCUTCHECK": {
          "type": "string",
          "x-displayName": "DONOTCUTCHECK",
          "x-samplevalue": "string"
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "V20001"
        },
        "FILEPAYMENTSERVICE": {
          "type": "string",
          "x-displayName": "FILEPAYMENTSERVICE",
          "x-samplevalue": "NONE"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "string"
        },
        "GLGRPKEY": {
          "type": "string",
          "x-displayName": "GLGRPKEY"
        },
        "ISOWNER": {
          "type": "boolean",
          "x-displayName": "ISOWNER",
          "x-samplevalue": false
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "string"
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "string"
        },
        "OEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "OEPRCLSTKEY"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNO"
        },
        "OFFSETGLACCOUNTNOTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNOTITLE"
        },
        "ONETIME": {
          "type": "string",
          "x-displayName": "ONETIME",
          "x-samplevalue": "string"
        },
        "ONHOLD": {
          "type": "string",
          "x-displayName": "ONHOLD",
          "x-samplevalue": "string"
        },
        "OUTSOURCEACH": {
          "type": "boolean",
          "x-displayName": "OUTSOURCEACH",
          "x-samplevalue": false
        },
        "OUTSOURCEACHSTATE": {
          "type": "string",
          "x-displayName": "OUTSOURCEACHSTATE"
        },
        "OUTSOURCECARD": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECARD",
          "x-samplevalue": false
        },
        "OUTSOURCECARDOVERRIDE": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECARDOVERRIDE",
          "x-samplevalue": false
        },
        "OUTSOURCECHECK": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECHECK",
          "x-samplevalue": false
        },
        "OUTSOURCECHECKSTATE": {
          "type": "string",
          "x-displayName": "OUTSOURCECHECKSTATE"
        },
        "OWNER": {
          "$ref": "#/definitions/vendorsGetByIDOWNER"
        },
        "PARENTID": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTID",
          "x-samplevalue": "string"
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY"
        },
        "PARENTNAME": {
          "type": "string",
          "x-alias": "parent.name",
          "x-displayName": "PARENTNAME"
        },
        "PAYDATEVALUE": {
          "type": "string",
          "x-displayName": "PAYDATEVALUE"
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-displayName": "PAYMENTPRIORITY",
          "x-samplevalue": "string"
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY",
          "x-samplevalue": "string"
        },
        "PAYMETHODREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMETHODREC",
          "x-samplevalue": 1
        },
        "PAYTO": {
          "$ref": "#/definitions/vendorsGetByIDPAYTO"
        },
        "PAYTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "PAYTOKEY"
        },
        "PMPLUSEMAIL": {
          "type": "string",
          "x-displayName": "PMPLUSEMAIL"
        },
        "PMPLUSFAX": {
          "type": "string",
          "x-displayName": "PMPLUSFAX"
        },
        "PMPLUSREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "PMPLUSREMITTANCETYPE"
        },
        "PRICELIST": {
          "type": "string",
          "x-displayName": "PRICELIST"
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-displayName": "PRICESCHEDULE"
        },
        "PRIMARYCONTACTKEY": {
          "type": "string",
          "x-displayName": "PRIMARYCONTACTKEY"
        },
        "R10047": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "R10047",
          "x-samplevalue": 3
        },
        "RDEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RDEPARTMENT",
          "x-samplevalue": 3
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3722
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "string"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "string"
        },
        "RETURNTO": {
          "$ref": "#/definitions/vendorsGetByIDRETURNTO"
        },
        "RETURNTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "RETURNTOKEY"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-samplevalue": "string"
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "string"
        },
        "TERMSKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMSKEY",
          "x-samplevalue": 3
        },
        "TERMVALUE": {
          "type": "string",
          "x-displayName": "TERMVALUE",
          "x-samplevalue": "::#30#:O:"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 183
        },
        "VENDORACCOUNTNO": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTNO",
          "x-samplevalue": "string"
        },
        "VENDORACCOUNTOUTSOURCEACH": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTOUTSOURCEACH"
        },
        "VENDORACCTNOKEY": {
          "type": "string",
          "x-displayName": "VENDORACCTNOKEY"
        },
        "VENDORACHACCOUNTID": {
          "type": "string",
          "x-displayName": "VENDORACHACCOUNTID"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116"
        },
        "VENDOR_AMEX_CARD_AFFILIATE_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_CARD_AFFILIATE_ID"
        },
        "VENDOR_AMEX_CD_AFFILIATE_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_CD_AFFILIATE_ID"
        },
        "VENDOR_AMEX_ORGANIZATION_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_ORGANIZATION_ID"
        },
        "VENDOR_AMEX_ORG_ADDRESS_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_ORG_ADDRESS_ID"
        },
        "VENDTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "VENDTYPE",
          "x-samplevalue": "string"
        },
        "VENDTYPE1099TYPE": {
          "type": "string",
          "x-displayName": "VENDTYPE1099TYPE"
        },
        "VENDTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDTYPEKEY",
          "x-samplevalue": 5
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WIREACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "WIREACCOUNTNUMBER"
        },
        "WIREACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "WIREACCOUNTTYPE"
        },
        "WIREBANKNAME": {
          "type": "string",
          "x-displayName": "WIREBANKNAME"
        },
        "WIREBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "WIREBANKROUTINGNUMBER"
        },
        "WIREENABLED": {
          "type": "boolean",
          "x-displayName": "WIREENABLED",
          "x-samplevalue": false
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "createUsersRes": {
      "properties": {
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "jsmit1h"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 23
        }
      },
      "title": "createUsersRes",
      "x-vendor-objectname": "USERINFO",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyListExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "contractGetByIdDISPLAYCONTACT": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "DISPLAYCONTACT",
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "TERM",
      "type": "object"
    },
    "invoicesAdvancedListBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListDELIVERTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersListDELIVERTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "createArAccountLabel": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "GLACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "4000"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "required": [
        "ACCOUNTLABEL",
        "DESCRIPTION",
        "GLACCOUNTNO"
      ],
      "title": "createArAccountLabel",
      "type": "object"
    },
    "departmentsGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "departmentsGetById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CUSTTITLE": {
          "type": "string",
          "x-samplevalue": "SAiSatish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTTITLE"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 320,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPARTMENTID"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORID"
        },
        "SUPERVISORKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORKEY"
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-samplevalue": "Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORNAME"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "Finance",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TITLE"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "itemsGetByIdITEMGLGROUPINVENTORYACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyListSotransitemsSotransitemNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "purchaseOrdersList_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "billsPaymentsUpdateAPPYMTDETAILS": {
      "properties": {
        "APPYMTDETAIL": {
          "items": {
            "$ref": "#/definitions/billsPaymentsUpdateAPPYMTDETAILSAPPYMTDETAIL"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersGetById_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLSTATCATGRPSGLCOACATMEMBER": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "GLCOACATMEMBER",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitem": {
      "properties": {
        "billingtemplate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bundlenumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discountpercent": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discsurchargememo": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "dropship": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "fulfillmentstatus": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatus"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdetails": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "linelevelsimpletaxtyp": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemNeedByDate"
        },
        "price": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "renewalmacro": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "revrecenddate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemRevrecenddate"
        },
        "revrecstartdate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemRevrecstartdate"
        },
        "revrectemplate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipto": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sourcelinekey": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "taskno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "itemid",
        "quantity"
      ],
      "title": "sotransitem",
      "type": "object"
    },
    "inventoryTransactionDefinationsListENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "arAdjustmentsPatchReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "30"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "06"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2019"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqDatedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{datedue.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{datedue.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{datedue.year}"
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "creditMemosAdvancedGETALLObject": {
      "properties": {
        "ARADJUSTMENTITEMS": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLARADJUSTMENTITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-11-20T00:48:12Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOPAYTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BILLTOPAYTOKEY",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMER": {
          "type": "string",
          "x-displayName": "CUSTOMER",
          "x-samplevalue": "10001--Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "AsasaS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "IN0878",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-displayName": "EXCHANGE_RATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "type": "string",
          "x-displayName": "EXCHRATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "4.AR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTPAYMENT": {
          "type": "string",
          "x-displayName": "PARENTPAYMENT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Adjustments (USD): 2018/11/19 16:48:12:4799 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 2242,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "ARADJ0004",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 2729,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "ra",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTORETURNTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SHIPTORETURNTOKEY",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_ENTITYDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_ENTITYDUE",
          "x-samplevalue": 512,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-19",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "entitiesByIdCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/entitiesByIdCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "salesOrdersGetByIdWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "customerid": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "employeeid": {
          "type": "string"
        },
        "itemid": {
          "type": "string"
        },
        "locationid": {
          "type": "string"
        },
        "percentval": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "projectid": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListDateposted": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "invoicesAdvancedListBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedListBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "ITEM",
      "type": "object"
    },
    "customersAdvancedGETALLDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Tyrell Corp."
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersAdvancedGETALLDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Tyrell Corp."
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "entitiesListIERECEIVABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "title": "BILLINGSCHEDULEENTRY",
      "type": "object"
    },
    "employeesPost": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "BIRTHDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "dob",
          "x-displayName": "BIRTHDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": "string"
        },
        "EARNINGTYPENAME": {
          "type": "string",
          "x-displayName": "EARNINGTYPENAME",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202"
        },
        "EMPLOYEETYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "EMPLOYEETYPE",
          "x-samplevalue": "string"
        },
        "ENDDATE": {
          "type": "string",
          "x-alias": "releaseDate",
          "x-displayName": "ENDDATE",
          "x-samplevalue": "string"
        },
        "EXTERNALID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GENDER": {
          "type": "string",
          "x-alias": "gender",
          "x-displayName": "GENDER",
          "x-samplevalue": "string"
        },
        "ISOCOUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LATITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "string"
        },
        "LONGITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PERSONALINFO": {
          "$ref": "#/definitions/employeesPostPERSONALINFO"
        },
        "POSTACTUALCOST": {
          "type": "string",
          "x-displayName": "POSTACTUALCOST",
          "x-samplevalue": "string"
        },
        "SSN": {
          "format": "int32",
          "type": "string",
          "x-alias": "ssn",
          "x-displayName": "SSN",
          "x-samplevalue": "string"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "hireDate",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": "string"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string",
          "x-alias": "taxId",
          "x-samplevalue": "string"
        },
        "TERMINATIONTYPE": {
          "type": "string",
          "x-displayName": "TERMINATIONTYPE",
          "x-samplevalue": "string"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "title",
          "x-displayName": "TITLE",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "PERSONALINFO"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDateconfirmed": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.year}"
        }
      },
      "title": "dateconfirmed",
      "type": "object"
    },
    "purchasingTransactionDefinitionsListAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsListAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "departmentsUpdateRes": {
      "properties": {
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "320"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "title": "departmentsUpdateRes",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "DEPARTMENT"
    },
    "InventoryTransactionLegacyPostReq": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "createdfrom": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqCustomfields"
        },
        "datecreated": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqDatecreated"
        },
        "documentno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ictransitems": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitems"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "subtotals": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqSubtotals"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "transactiontype",
        "datecreated",
        "ictransitems"
      ],
      "title": "InventoryTransactionLegacyPostReq",
      "type": "object"
    },
    "OrdersEntryTransactionLegacypatchReqNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "employeesPostRes": {
      "properties": {
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "200"
        }
      },
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "EMPLOYEE",
      "type": "object"
    },
    "ledgerAccountsGETAllObject": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTTYPE": {
          "type": "string",
          "x-alias": "accCategory",
          "x-displayName": "ACCOUNTTYPE",
          "x-samplevalue": "incomestatement",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ALTERNATIVEACCOUNT": {
          "type": "string",
          "x-displayName": "ALTERNATIVEACCOUNT",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CATEGORY": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Finance Charges Expense",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CATEGORYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CATEGORYKEY",
          "x-samplevalue": 818,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CE_CUSTOM": {
          "type": "string",
          "x-alias": "custom",
          "x-displayName": "CE_CUSTOM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLOSETOACCTKEY": {
          "type": "string",
          "x-displayName": "CLOSETOACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLOSINGACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-displayName": "CLOSINGACCOUNTNO",
          "x-samplevalue": 3100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLOSINGACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "CLOSINGACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLOSINGTYPE": {
          "type": "string",
          "x-displayName": "CLOSINGTYPE",
          "x-samplevalue": "closing account",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-alias": "location.id",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MRCCODE": {
          "type": "string",
          "x-displayName": "MRCCODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NORMALBALANCE": {
          "type": "string",
          "x-alias": "tranType",
          "x-displayName": "NORMALBALANCE",
          "x-samplevalue": "credit",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REQUIRECLASS": {
          "type": "boolean",
          "x-displayName": "REQUIRECLASS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIRECONTRACT": {
          "type": "boolean",
          "x-displayName": "REQUIRECONTRACT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIRECUSTOMER": {
          "type": "boolean",
          "x-displayName": "REQUIRECUSTOMER",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREDEPT": {
          "type": "boolean",
          "x-alias": "requireDept",
          "x-displayName": "REQUIREDEPT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREEMPLOYEE": {
          "type": "boolean",
          "x-displayName": "REQUIREEMPLOYEE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREGLDIMCHANNEL": {
          "type": "boolean",
          "x-displayName": "REQUIREGLDIMCHANNEL",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREITEM": {
          "type": "boolean",
          "x-displayName": "REQUIREITEM",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIRELOC": {
          "type": "boolean",
          "x-alias": "requireLoc",
          "x-displayName": "REQUIRELOC",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREPROJECT": {
          "type": "boolean",
          "x-displayName": "REQUIREPROJECT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIREVENDOR": {
          "type": "boolean",
          "x-displayName": "REQUIREVENDOR",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBLEDGERCONTROLON": {
          "type": "boolean",
          "x-displayName": "SUBLEDGERCONTROLON",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "taxCode",
          "x-displayName": "TAXCODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TITLE": {
          "type": "string",
          "x-alias": "accName",
          "x-displayName": "TITLE",
          "x-samplevalue": "Satish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "transactionGetAllRespObject": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 134,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9099,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "CMRR Customer Count",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ALLOCATION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ALLOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASELOCATION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASELOCATION_NAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASELOCATION_NO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 183,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHTITLE": {
          "type": "string",
          "x-samplevalue": "Customer count - CN0042 Line No. 1 : 12/01/2015 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BATCH_NUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 42,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CLASSDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLRDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 47,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10042,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Weyland-Yutani",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCUMENT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLDIMCHANNEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "IETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMDIMKEY": {
          "type": "string",
          "x-searchable": true
        },
        "ITEMID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTGLENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECON_DATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 324,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RGLDIM169562_10003": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATISTICAL": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TIMEPERIOD": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TMPLENTRYKEY": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TR_TYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UNITS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:41:08Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:41:08Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionDefinitionsListObject": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-displayName": "ALLOWEDITBILLTO",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-displayName": "ALLOWEDITCUSTVEND",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ALLOWEDITDELIVERTO": {
          "type": "boolean",
          "x-displayName": "ALLOWEDITDELIVERTO",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-displayName": "ALLOWEDITSHIPTO",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-displayName": "CONTACTTITLE1",
          "x-samplevalue": "Bill to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-displayName": "CONTACTTITLE2",
          "x-samplevalue": "Ship to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-displayName": "CONTACTTITLE3",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONVERT_UNITS": {
          "type": "boolean",
          "x-displayName": "CONVERT_UNITS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CONVTYPE": {
          "type": "string",
          "x-displayName": "CONVTYPE",
          "x-samplevalue": "Close Transaction",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATETYPE": {
          "type": "string",
          "x-displayName": "CREATETYPE",
          "x-samplevalue": "New document or Convert",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATION_RULE": {
          "type": "string",
          "x-displayName": "CREATION_RULE",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-displayName": "CREDITLIMITCHECK",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CUST_VEND": {
          "type": "string",
          "x-displayName": "CUST_VEND",
          "x-samplevalue": "Customer",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DELTYPE": {
          "type": "string",
          "x-displayName": "DELTYPE",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-displayName": "DEPTOVERRIDE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-displayName": "DISPLAY_BASECURRENCY",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DOCCLASS": {
          "type": "string",
          "x-displayName": "DOCCLASS",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EDITABLE_PRICE": {
          "type": "boolean",
          "x-displayName": "EDITABLE_PRICE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "EDITTYPE": {
          "type": "string",
          "x-displayName": "EDITTYPE",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-displayName": "ENABLEOVERRIDETAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-displayName": "ENABLE_SEQNUM",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListENTITY_PROPS"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FIXED_MESG": {
          "type": "string",
          "x-displayName": "FIXED_MESG",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORCE_PRICES": {
          "type": "boolean",
          "x-displayName": "FORCE_PRICES",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-displayName": "INHERIT_SOURCE_DOCNO",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-displayName": "IN_OUT",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LATESTVERSIONKEY": {
          "type": "string",
          "x-displayName": "LATESTVERSIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LINELEVELSIMPLETAX": {
          "type": "boolean",
          "x-displayName": "LINELEVELSIMPLETAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-displayName": "LOCOVERRIDE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-displayName": "OVERRIDE_EXCH_RATE_TYPE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-displayName": "OVERRIDE_PRICE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-displayName": "POSTTOGL",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PRCLISTKEY": {
          "type": "string",
          "x-displayName": "PRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-displayName": "PRESERVE_SEQNUM",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PRICELISTID": {
          "type": "string",
          "x-displayName": "PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTTITLE": {
          "type": "string",
          "x-displayName": "PRINTTITLE",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECALLONLY": {
          "type": "boolean",
          "x-displayName": "RECALLONLY",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RECALLS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-displayName": "SALE_PUR_TRANS",
          "x-samplevalue": "Sale",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SEQUENCE": {
          "type": "string",
          "x-displayName": "SEQUENCE",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "boolean",
          "x-displayName": "SHOWEXPANDEDTOTALS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-displayName": "SHOWTITLE1",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-displayName": "SHOWTITLE2",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOWTITLE3": {
          "type": "boolean",
          "x-displayName": "SHOWTITLE3",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-displayName": "SHOW_TOTALS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SPCLPRCLISTKEY": {
          "type": "string",
          "x-displayName": "SPCLPRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SPECIAL_PRICELISTID": {
          "type": "string",
          "x-displayName": "SPECIAL_PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListSUBTOTALS"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string",
          "x-displayName": "SUBTOTALTEMPLATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string",
          "x-displayName": "SUBTOTALTEMPLATEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-displayName": "TD_CREATION_RULE",
          "x-samplevalue": "Top level or Entity",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMKEY": {
          "type": "string",
          "x-displayName": "TERMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERM_NAME": {
          "type": "string",
          "x-displayName": "TERM_NAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-displayName": "UPDATES_COST",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "UPDATES_GL": {
          "type": "string",
          "x-displayName": "UPDATES_GL",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UPDATES_PRICELISTID": {
          "type": "string",
          "x-displayName": "UPDATES_PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UPDPRCLISTKEY": {
          "type": "string",
          "x-displayName": "UPDPRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERPERM": {
          "type": "boolean",
          "x-displayName": "USERPERM",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-displayName": "WAREHOUSESELMETHOD",
          "x-samplevalue": "Sort by ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-displayName": "WARNONLOWQTY",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "XSLTEMPLATE": {
          "type": "string",
          "x-displayName": "XSLTEMPLATE",
          "x-samplevalue": "Intacct Sales Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListObject": {
      "properties": {
        "ADDGL_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListADDGL_ACCOUNTS"
        },
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-displayName": "ALLOWEDITBILLTO",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-displayName": "ALLOWEDITCUSTVEND",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-displayName": "ALLOWEDITSHIPTO",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-displayName": "CONTACTTITLE1",
          "x-samplevalue": "Bill to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-displayName": "CONTACTTITLE2",
          "x-samplevalue": "Ship to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONVERT_UNITS": {
          "type": "boolean",
          "x-displayName": "CONVERT_UNITS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CONVTYPE": {
          "type": "string",
          "x-displayName": "CONVTYPE",
          "x-samplevalue": "Close Transaction",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATETYPE": {
          "type": "string",
          "x-displayName": "CREATETYPE",
          "x-samplevalue": "New document or Convert",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATION_RULE": {
          "type": "string",
          "x-displayName": "CREATION_RULE",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-displayName": "CREDITLIMITCHECK",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CUST_VEND": {
          "type": "string",
          "x-displayName": "CUST_VEND",
          "x-samplevalue": "Customer",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DELTYPE": {
          "type": "string",
          "x-displayName": "DELTYPE",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-displayName": "DEPTOVERRIDE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-displayName": "DISCOUNT_ON_EXTENDEDPRICE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-displayName": "DISPLAY_BASECURRENCY",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DOCCLASS": {
          "type": "string",
          "x-displayName": "DOCCLASS",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EDITABLE_PRICE": {
          "type": "boolean",
          "x-displayName": "EDITABLE_PRICE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "EDITTYPE": {
          "type": "string",
          "x-displayName": "EDITTYPE",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-displayName": "ENABLEOVERRIDETAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-displayName": "ENABLEPAYMENTS",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-displayName": "ENABLEPROJECTACTUALBILLINGS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-displayName": "ENABLERENEWALS",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-displayName": "ENABLEREVREC",
          "x-samplevalue": "None",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-displayName": "ENABLESCHEDULE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-displayName": "ENABLE_COSTING",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-displayName": "ENABLE_DISCOUNT_CHARGE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-displayName": "ENABLE_SEQNUM",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListENTITY_PROPS"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FIXED_MESG": {
          "type": "string",
          "x-displayName": "FIXED_MESG",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORCE_PRICES": {
          "type": "boolean",
          "x-displayName": "FORCE_PRICES",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-displayName": "INHERIT_SOURCE_DOCNO",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-displayName": "IN_OUT",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LATESTVERSIONKEY": {
          "type": "string",
          "x-displayName": "LATESTVERSIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LINELEVELSIMPLETAX": {
          "type": "boolean",
          "x-displayName": "LINELEVELSIMPLETAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-displayName": "LOCOVERRIDE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-displayName": "OVERRIDE_EXCH_RATE_TYPE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-displayName": "OVERRIDE_PRICE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-displayName": "POSTTOGL",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PRCLISTKEY": {
          "type": "string",
          "x-displayName": "PRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-displayName": "PRESERVE_SEQNUM",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PRICELISTID": {
          "type": "string",
          "x-displayName": "PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTTITLE": {
          "type": "string",
          "x-displayName": "PRINTTITLE",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECALLONLY": {
          "type": "boolean",
          "x-displayName": "RECALLONLY",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RECALLS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-displayName": "RENEWONLYCONVERTEDLINE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-displayName": "REQUIRE_DISCOUNT_MEMO",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-displayName": "SALE_PUR_TRANS",
          "x-samplevalue": "Sale",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SEQUENCE": {
          "type": "string",
          "x-displayName": "SEQUENCE",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "boolean",
          "x-displayName": "SHOWEXPANDEDTOTALS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-displayName": "SHOWTITLE1",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-displayName": "SHOWTITLE2",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-displayName": "SHOW_TOTALS",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SPCLPRCLISTKEY": {
          "type": "string",
          "x-displayName": "SPCLPRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SPECIAL_PRICELISTID": {
          "type": "string",
          "x-displayName": "SPECIAL_PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListSUBTOTALS"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string",
          "x-displayName": "SUBTOTALTEMPLATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string",
          "x-displayName": "SUBTOTALTEMPLATEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-displayName": "TD_CREATION_RULE",
          "x-samplevalue": "Top level or Entity",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMKEY": {
          "type": "string",
          "x-displayName": "TERMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERM_NAME": {
          "type": "string",
          "x-displayName": "TERM_NAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALS": {
          "$ref": "#/definitions/orderEntryTransactionDefinitionsListTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-displayName": "UPDATES_COST",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "UPDATES_GL": {
          "type": "string",
          "x-displayName": "UPDATES_GL",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UPDATES_PRICELISTID": {
          "type": "string",
          "x-displayName": "UPDATES_PRICELISTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UPDPRCLISTKEY": {
          "type": "string",
          "x-displayName": "UPDPRCLISTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERPERM": {
          "type": "boolean",
          "x-displayName": "USERPERM",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-displayName": "WAREHOUSESELMETHOD",
          "x-samplevalue": "Sort by ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-displayName": "WARNONLOWQTY",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "XSLTEMPLATE": {
          "type": "string",
          "x-displayName": "XSLTEMPLATE",
          "x-samplevalue": "Intacct Sales Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDateshiptosupplier": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateshiptosupplier.year}"
        }
      },
      "title": "dateshiptosupplier",
      "type": "object"
    },
    "purchaseOrdersGetByIdTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "itemGlGroupsListObject": {
      "properties": {
        "COGSACCTKEY": {
          "type": "string",
          "x-displayName": "COGSACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "COGSACCTNO": {
          "type": "string",
          "x-displayName": "COGSACCTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "COGSACCTTITLE": {
          "type": "string",
          "x-displayName": "COGSACCTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "DEFAULTREVRECTEMPLKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFERREDREVACCTNO": {
          "type": "string",
          "x-displayName": "DEFERREDREVACCTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string",
          "x-displayName": "DEFERREDREVACCTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-displayName": "EXPENSEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXPENSEACCTNO": {
          "type": "string",
          "x-displayName": "EXPENSEACCTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXPENSEACCTTITLE": {
          "type": "string",
          "x-displayName": "EXPENSEACCTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-displayName": "INCOMEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INCOMEACCTNO": {
          "type": "string",
          "x-displayName": "INCOMEACCTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INCOMEACCTTITLE": {
          "type": "string",
          "x-displayName": "INCOMEACCTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVACCTKEY": {
          "type": "string",
          "x-displayName": "INVACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVACCTNO": {
          "type": "string",
          "x-displayName": "INVACCTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVACCTTITLE": {
          "type": "string",
          "x-displayName": "INVACCTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ISSYSTEM": {
          "type": "string",
          "x-displayName": "ISSYSTEM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Computers",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETOEGLACCOUNTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETPOGLACCOUNTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFF_OEGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFF_OEGLACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFF_OEGLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "OFF_OEGLACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFF_POGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFF_POGLACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFF_POGLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "OFF_POGLACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REVRECTEMPLID": {
          "type": "string",
          "x-displayName": "REVRECTEMPLID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSotransitemsSotransitemRevrecenddate": {
      "properties": {
        "day": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      },
      "title": "revrecenddate",
      "type": "object"
    },
    "foldersGetByIdResResponseControl": {
      "properties": {
        "controlid": {
          "type": "string",
          "x-samplevalue": "OInyWrrf7V"
        },
        "dtdversion": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 2.1
        },
        "senderid": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        },
        "uniqueid": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "control",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListADDGL_ACCOUNTS": {
      "properties": {
        "ADDGL_ACCOUNT": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdITEM": {
      "properties": {
        "BUYTOORDER": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Sales only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "foldersGetByIdResResponseOperationAuthentication": {
      "properties": {
        "companyid": {
          "type": "string",
          "x-samplevalue": "Cloud Elements-Contracts"
        },
        "sessiontimeout": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-02-21T10:25:43+00:00"
        },
        "sessiontimestamp": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-02-20T10:25:43+00:00"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        },
        "userid": {
          "type": "string",
          "x-samplevalue": "emma"
        }
      },
      "title": "authentication",
      "type": "object"
    },
    "invoicesAdvancedListARINVOICEITEMSArinvoiceitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "ACCOUNTLABELKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 53389.7
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREDREVACCTNO": {
          "type": "string"
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 10
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Administration"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DETAILID": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-08-17"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-08-17"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "ISTAX": {
          "type": "boolean",
          "x-alias": "lines[*].isTaxable",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-alias": "lines[*].location.id"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1100
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Receivable - trade"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 62
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 259
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ri"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "SUBTOTAL": {
          "type": "string",
          "x-alias": "lines[*].subTotal"
        },
        "TAXRATE": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 53389.7
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdShipto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "Maxwell Warner(C1006)"
        }
      },
      "title": "shipto",
      "type": "object"
    },
    "allocationsReqP": {
      "properties": {
        "ALLOCATIONID": {
          "type": "string",
          "x-samplevalue": "95333"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "gfhfhgj"
        }
      },
      "title": "allocationsReqP",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ALLOCATION"
    },
    "recurringOrderEntryTransactionsByIdCUSTOMERBANKACCOUNT": {
      "properties": {
        "ACCOUNTNUMBER": {
          "type": "string"
        },
        "BANKNAME": {
          "type": "string"
        }
      },
      "title": "CUSTOMERBANKACCOUNT",
      "type": "object"
    },
    "InventoryTransactionLegacyGetByIdIctransitems": {
      "properties": {
        "ictransitem": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyGetByIdIctransitemsIctransitem"
          },
          "type": "array"
        }
      },
      "title": "ictransitems",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqInternalissuedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.year}"
        }
      },
      "title": "internalissuedon",
      "type": "object"
    },
    "warehousesPost": {
      "properties": {
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Stish"
            }
          },
          "$ref": "#/definitions/warehousesPostCONTACTINFO"
        },
        "ENABLE_REPLENISHMENT": {
          "default": true,
          "description": "Enable replenishment. Use true to enable, otherwise use false. (Default: true)",
          "type": "boolean",
          "x-samplevalue": true
        },
        "LOC": {
          "properties": {
            "LOCATIONID": {
              "type": "string",
              "x-samplevalue": "L1234"
            }
          },
          "$ref": "#/definitions/warehousesPostLOC"
        },
        "MANAGERID": {
          "description": "Manager employee ID",
          "type": "string",
          "x-reference-objectname": "employee",
          "x-samplevalue": "Penny, Emma"
        },
        "NAME": {
          "description": "Warehouse name",
          "type": "string",
          "x-name": true,
          "x-samplevalue": "Warehouse"
        },
        "PARENTID": {
          "description": "Parent warehouse ID",
          "type": "string",
          "x-reference-objectname": "warehouse",
          "x-samplevalue": "YK-WH"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Stish"
            }
          },
          "$ref": "#/definitions/warehousesPostSHIPTO"
        },
        "STATUS": {
          "default": "active",
          "description": "Warehouse status. Use active for Active otherwise use inactive for Inactive (Default: active)",
          "enum": [
            "active",
            "inactive"
          ],
          "type": "string",
          "x-samplevalue": "active"
        },
        "USEDINGL": {
          "default": true,
          "description": "Used in GL. Use false for No,true for Yes. (Default: true)",
          "type": "boolean",
          "x-samplevalue": true
        },
        "WAREHOUSEID": {
          "description": "Warehouse ID to create",
          "type": "string",
          "x-samplevalue": "YK-WH1"
        }
      },
      "required": [
        "LOCATIONID",
        "NAME",
        "WAREHOUSEID"
      ],
      "title": "warehousesPost",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqOrigdocdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "origdocdate",
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "apBillsGetByIdPAYTO": {
      "properties": {
        "TAXGROUP": {
          "$ref": "#/definitions/apBillsGetByIdPAYTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyGetByIdSotransitemsSotransitemNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "recurringOrderEntryTransactionsTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "createFileAttachments": {
      "properties": {
        "attachment": {
          "items": {
            "$ref": "#/definitions/createFileAttachmentsAttachment"
          },
          "type": "array"
        }
      },
      "title": "attachments",
      "type": "object"
    },
    "orderEntryPriceListsListObject": {
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATEFROM",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATETO",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2030-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "OE Standard Price List",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-displayName": "SALEPURCHASE",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdDatecreated": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "contractPatchRequest": {
      "properties": {
        "ADVBILLBY": {
          "description": "Bill in advance. Number of months or days before the start date. Overrides bill-in-advance settings on the customer.",
          "format": "int32",
          "type": "integer"
        },
        "ADVBILLBYTYPE": {
          "description": "Bill-in-advance time period.",
          "enum": [
            "days",
            "month"
          ],
          "type": "string",
          "x-conditional-required-description": "Required if using bill in advance.",
          "x-sub-format": "Enum"
        },
        "BASECURR": {
          "enum": [
            "CAD",
            "EUR",
            "GBP",
            "USD"
          ],
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Enum"
        },
        "BEGINDATE": {
          "description": "Start date in format mm/dd/yyyy",
          "format": "date",
          "type": "string",
          "x-mask": "mm/dd/yyyy",
          "x-samplevalue": "01/01/18",
          "x-sub-format": "Date (Custome)"
        },
        "BILLINGFREQUENCY": {
          "description": "Billing frequency.",
          "enum": [
            "Monthly",
            "Quarterly"
          ],
          "type": "string",
          "x-samplevalue": "Monthly",
          "x-sub-format": "Enum"
        },
        "BILLTOCONTACTNAME": {
          "description": "Bill to contact name. Leave blank to use customers default.",
          "type": "string",
          "x-reference-objectname": "CONTACT",
          "x-samplevalue": "Entegris(C10459)"
        },
        "CLASSID": {
          "description": "Class ID",
          "type": "string",
          "x-reference-objectname": "class",
          "x-samplevalue": "300"
        },
        "CONTRACTID": {
          "description": "Contract ID to update.",
          "type": "string",
          "x-conditional-required-description": "Required if not using RECORDNO.",
          "x-samplevalue": "CN0431-1"
        },
        "CURRENCY": {
          "description": "Transaction currency.",
          "enum": [
            "CAD",
            "EUR",
            "GBP",
            "USD"
          ],
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Enum"
        },
        "CUSTOMERID": {
          "description": "Customer ID",
          "type": "string",
          "x-reference-objectname": "customer",
          "x-samplevalue": "Asa"
        },
        "DEPARTMENTID": {
          "description": "Department ID",
          "type": "string",
          "x-reference-objectname": "DEPARTMENT"
        },
        "DESCRIPTION": {
          "description": "Description",
          "type": "string",
          "x-samplevalue": "Entegris purchasing multiple licenses for subsidiary use"
        },
        "EMPLOYEEID": {
          "description": "Employee ID",
          "type": "string",
          "x-reference-objectname": "employee"
        },
        "ENDDATE": {
          "description": "End date in format mm/dd/yyyy",
          "format": "date",
          "type": "string",
          "x-mask": "mm/dd/yyyy",
          "x-samplevalue": "12/31/18",
          "x-sub-format": "Date (Custom)"
        },
        "EXCHRATETYPE": {
          "description": "Exchange rate type. Leave blank to use Intacct Daily Rate.",
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        },
        "LOCATIONID": {
          "description": "Location ID",
          "type": "string",
          "x-reference-objectname": "location",
          "x-samplevalue": "US"
        },
        "MEAPRCLIST": {
          "description": "Fair value price list",
          "type": "string"
        },
        "NAME": {
          "description": "Contract name",
          "type": "string",
          "x-name": true,
          "x-samplevalue": "10459 - One-Year Contract"
        },
        "PRCLIST": {
          "description": "Billing price list",
          "type": "string"
        },
        "PROJECTID": {
          "description": "Project ID",
          "type": "string",
          "x-reference-objectname": "project"
        },
        "RENEWAL": {
          "description": "Renewal. Use false for No, true for Yes.",
          "type": "boolean",
          "x-samplevalue": true
        },
        "RENEWALADVBILLBY": {
          "description": "Bill in advance for renewals. Number of months or days before the start date.",
          "format": "int32",
          "type": "integer"
        },
        "RENEWALADVBILLBYTYPE": {
          "description": "Bill-in-advance time period for renewals.",
          "enum": [
            "days",
            "month"
          ],
          "type": "string",
          "x-conditional-required-description": "Required if using bill in advance for renewals.",
          "x-sub-format": "Enum"
        },
        "RENEWALMACRO": {
          "description": "Renewal template",
          "type": "string",
          "x-samplevalue": "60 days no increase"
        },
        "RENEWTERMLENGTH": {
          "description": "Term length. Only used if RENEWAL is true",
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "RENEWTERMPERIOD": {
          "default": "Months",
          "description": "Period. Only used if RENEWAL is true.",
          "enum": [
            "Years",
            "Months",
            "Days"
          ],
          "type": "string",
          "x-samplevalue": "Months",
          "x-sub-format": "Enum"
        },
        "SHIPTOCONTACTNAME": {
          "description": "Ship to contact name. Leave blank to use customer s default.",
          "type": "string",
          "x-reference-objectname": "CONTACT",
          "x-samplevalue": "Entegris(C10459)"
        },
        "SUPDOCID": {
          "description": "Attachments ID",
          "type": "string"
        },
        "TERMNAME": {
          "description": "Payment term",
          "type": "string",
          "x-reference-objectname": "arterm",
          "x-samplevalue": "Net 30"
        },
        "VENDORID": {
          "description": "Vendor ID",
          "type": "string",
          "x-reference-objectname": "vendor"
        }
      },
      "title": "contractPatchRequest",
      "type": "object",
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitems": {
      "properties": {
        "ictransitem": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitem"
          },
          "type": "array"
        }
      },
      "title": "updateictransitems",
      "type": "object"
    },
    "inventoryTransactionsListsObject": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string"
        },
        "ADJ": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BACKORDER": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/inventoryTransactionsListsBILLTO"
        },
        "BILLTOKEY": {
          "type": "string"
        },
        "CLOSED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/inventoryTransactionsListsCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDFROM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DATEPRINTED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-samplevalue": "OTHER"
        },
        "DOCPARID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "ENTGLGROUP": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/inventoryTransactionsListsEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "HISTORY": {
          "$ref": "#/definitions/inventoryTransactionsListsHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string"
        },
        "INVDOCUMENTENTRIES": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIES"
        },
        "INVOICERUNKEY": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MESSAGE": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NOTE": {
          "type": "string"
        },
        "PONUMBER": {
          "type": "string"
        },
        "PRINTED": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PRINTEDBY": {
          "type": "string"
        },
        "PRINTEDUSERID": {
          "type": "string"
        },
        "PRINVBATCHKEY": {
          "type": "string"
        },
        "PRRECORDKEY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "RENEWEDDOC": {
          "type": "string"
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "SCHOPKEY": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/inventoryTransactionsListsSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SHIPVIA": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/inventoryTransactionsListsSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string"
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERM": {
          "$ref": "#/definitions/inventoryTransactionsListsTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity"
        },
        "USEDASCONTRACT": {
          "type": "string"
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/inventoryTransactionsListsWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "type": "string"
        },
        "_DOCPAR": {
          "$ref": "#/definitions/inventoryTransactionsLists_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "inventoryTransactionsLists_DOCPAR": {
      "properties": {
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Adjustment"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Warehouse"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "No Delete"
        },
        "DEPTOVERRIDE": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "No Edit"
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Internal"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "ADJ"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "11/21/2015 05:11:43"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:35"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "usersGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "usersGetById",
      "type": "object",
      "properties": {
        "ADMIN": {
          "type": "string",
          "x-samplevalue": "Full",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADMIN"
        },
        "CHATTER_DISABLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CHATTER_DISABLED"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/usersListCONTACTINFO"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTKEY"
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "LOGINDISABLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOGINDISABLED"
        },
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOGINID"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MFA_ENABLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MFA_ENABLED"
        },
        "MFA_NOTRUST": {
          "type": "string",
          "x-samplevalue": "none",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MFA_NOTRUST"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "PWDNEVEREXPIRES": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PWDNEVEREXPIRES"
        },
        "PWDQLYNOTENFORCED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PWDQLYNOTENFORCED"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RESETPASSWORD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESETPASSWORD"
        },
        "SSO_COMPANY_ENABLED": {
          "type": "string",
          "x-samplevalue": "Disabled",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SSO_COMPANY_ENABLED"
        },
        "SSO_ENABLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SSO_ENABLED"
        },
        "SSO_FEDERATED_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SSO_FEDERATED_ID"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "inactive",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "UNRESTRICTED": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UNRESTRICTED"
        },
        "USERTYPE": {
          "type": "string",
          "x-samplevalue": "business user",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERTYPE"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VISIBLE"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "projectsPROJECTCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "CONTACTNAME"
      ],
      "title": "CONTACTINFO",
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemRevrecenddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "revrecenddate",
      "type": "object"
    },
    "entitiesByIdCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "salesOrdersListHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 831
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Converted"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "11/01/2016"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/31/2017 16:00:26"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 827
        },
        "SOURCEDOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        }
      },
      "type": "object"
    },
    "apBillsGetByIdAPBILLITEMSApbillitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 97
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6225
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Internet"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "BILLABLE": {
          "type": "boolean",
          "x-alias": "lines[*].billableStatus",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 330
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "IT"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "DETAILID": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-04-15"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6225
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Internet"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Payable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "PRENTRYOFFSETACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 52
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 151
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RELEASETOPAY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "RGLDIM169562_10007": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20028
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Verizon Business"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:29:12Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-11T17:09:04Z"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdSUBTOTALSInvdocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "invdocumentsubtotals",
      "type": "object"
    },
    "vendorsGetByIDCONTACTTO1099": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsGetByIDCONTACTTO1099MAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "inventoryTransactionEntriesByIDWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string",
          "x-samplevalue": "WH1"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Warehouse 1"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{itemexpiration.year}"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDeliverto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{deliverto.contactname}"
        }
      },
      "title": "deliverto",
      "type": "object"
    },
    "auditLogsListObject": {
      "properties": {
        "CREATEDBYUSER": {
          "type": "string",
          "x-displayName": "CREATEDBYUSER",
          "x-samplevalue": "emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATED_AT": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "CREATED_AT",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-05-07T19:01:13Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATED_BY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATED_BY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EMAIL_TEXT": {
          "type": "string",
          "x-displayName": "EMAIL_TEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OBJ_ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OBJ_ID",
          "x-samplevalue": -5001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRAIL_TEXT": {
          "type": "string",
          "x-displayName": "TRAIL_TEXT",
          "x-samplevalue": "Page \"Edit GL Account\" has been updated.",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryDELIVERTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryDELIVERTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "customersPATCHRequestDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemexpiration": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "purchasingTransactionDefinitionsListTOTALS": {
      "properties": {
        "TOTAL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemDonotshipbeforedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.year}"
        }
      },
      "title": "donotshipbeforedate",
      "type": "object"
    },
    "foldersFilesObject": {
      "properties": {
        "attachments": {
          "$ref": "#/definitions/foldersFilesAttachments"
        },
        "createdby": {
          "type": "string",
          "x-samplevalue": "emma"
        },
        "creationdate": {
          "type": "string",
          "x-samplevalue": "02/19/2020"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "jsondata"
        },
        "folder": {
          "type": "string",
          "x-samplevalue": "Analyst"
        },
        "recordno": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "supdocid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 999
        },
        "supdocname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "foldersFiles",
      "type": "object"
    },
    "chargeCardAccountsByIdFINANCIALDATA": {
      "properties": {
        "DISABLEIET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "JOURNALTITLE": {
          "type": "string",
          "x-samplevalue": "Cash Journal"
        },
        "JOURNALTITLE2": {
          "type": "string"
        },
        "JRNLKEY2": {
          "type": "string"
        },
        "PARENTENTITY": {
          "type": "string"
        },
        "PARENTENTITYNAME": {
          "type": "string"
        }
      },
      "title": "FINANCIALDATA",
      "type": "object"
    },
    "warehousesListSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "33Across"
        }
      },
      "type": "object"
    },
    "arAdjustmentsPatchReqDateposted": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "30"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "06"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2019"
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqENTITY_PROPSENTITY_PROP"
          },
          "type": "array"
        }
      },
      "title": "ENTITY_PROPS",
      "type": "object"
    },
    "itemUpdateWAREHOUSEINFOITEMWAREHOUSEINFO": {
      "properties": {
        "ENABLE_REPLENISHMENT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ITEMWAREHOUSEVENDORENTRIES": {
          "items": {
            "$ref": "#/definitions/itemUpdateWAREHOUSEINFOITEMWAREHOUSEINFOITEMWAREHOUSEVENDORENTRIES"
          },
          "type": "array"
        },
        "MAX_ORDER_QTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REORDER_POINT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].reOrderPoint",
          "x-samplevalue": 0
        },
        "REORDER_QTY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].reOrderQuantity",
          "x-samplevalue": 0
        },
        "REPLENISHMENT_METHOD": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "SAFETY_STOCK": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].safetyStockUnits",
          "x-samplevalue": 0
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-alias": "locations[*].id",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "paymentsLegacyApplyPostReqPaymentdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "23"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "06"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2017"
        }
      },
      "title": "paymentdate",
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLACCTRANGESACCTRANGE": {
      "properties": {
        "RANGEFROM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RANGETO": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "ACCTRANGE",
      "type": "object"
    },
    "locationsListObject": {
      "properties": {
        "BUSINESSDAYS": {
          "type": "string",
          "x-displayName": "BUSINESSDAYS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/locationsListCONTACTINFO"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTACTKEY",
          "x-samplevalue": 641,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTTITLE": {
          "type": "string",
          "x-displayName": "CUSTTITLE",
          "x-samplevalue": "Nothing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "ENDDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-12",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTITY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ENTITY",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITYRECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ENTITYRECORDNO",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FEDERALID": {
          "type": "string",
          "x-displayName": "FEDERALID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FIRSTMONTH": {
          "type": "string",
          "x-displayName": "FIRSTMONTH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FIRSTMONTHTAX": {
          "type": "string",
          "x-displayName": "FIRSTMONTHTAX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FOOTNOTETEXT": {
          "type": "string",
          "x-displayName": "FOOTNOTETEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HAS_IE_RELATION": {
          "type": "boolean",
          "x-displayName": "HAS_IE_RELATION",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IEPAYABLE": {
          "$ref": "#/definitions/locationsListIEPAYABLE"
        },
        "IEPAYABLEACCTKEY": {
          "type": "string",
          "x-displayName": "IEPAYABLEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "IERECEIVABLE": {
          "$ref": "#/definitions/locationsListIERECEIVABLE"
        },
        "IERECEIVABLEACCTKEY": {
          "type": "string",
          "x-displayName": "IERECEIVABLEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ISROOT": {
          "type": "string",
          "x-displayName": "ISROOT",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "In",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MARKETING_TEXT": {
          "type": "string",
          "x-displayName": "MARKETING_TEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MESSAGE_TEXT": {
          "type": "string",
          "x-displayName": "MESSAGE_TEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "as",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 14,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REPORTPRINTAS": {
          "type": "string",
          "x-displayName": "REPORTPRINTAS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RESERVEAMT": {
          "type": "string",
          "x-displayName": "RESERVEAMT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/locationsListSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 264,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-02",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": 101,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SUPERVISORKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-displayName": "SUPERVISORNAME",
          "x-samplevalue": "Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TAXID",
          "x-samplevalue": 1234567890,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "type": "string",
          "x-displayName": "VENDORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WEEKENDS": {
          "type": "string",
          "x-displayName": "WEEKENDS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WEEKSTART": {
          "type": "string",
          "x-displayName": "WEEKSTART",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "foldersGetByIdResResponseOperationResult": {
      "properties": {
        "controlid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9864339
        },
        "data": {
          "$ref": "#/definitions/foldersGetByIdResResponseOperationResultData"
        },
        "function": {
          "type": "string",
          "x-samplevalue": "get"
        },
        "listtype": {
          "type": "string",
          "x-samplevalue": "supdocfolder"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "result",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqINVGL_ACCOUNTSINVGL_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "INVGL_ACCOUNTS",
      "type": "object"
    },
    "updateUserUSERINFOUSERTERRITORIES": {
      "properties": {
        "TERRITORYID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            ""
          ]
        }
      },
      "title": "USERTERRITORIES",
      "type": "object"
    },
    "savingsAccountsGetAllRespObject": {
      "properties": {
        "ACHCOMPANYID": {
          "type": "string"
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "testsaving",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTNO": {
          "type": "string"
        },
        "BANKACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "savings"
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "updated",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BRANCHID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CHECKINFOCONTACT": {
          "$ref": "#/definitions/savingsAccountsGetAllRespCHECKINFOCONTACT"
        },
        "CHECKLAYOUT": {
          "$ref": "#/definitions/savingsAccountsGetAllRespCHECKLAYOUT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUTOFFDATE": {
          "type": "string",
          "x-searchable": false
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/savingsAccountsGetAllRespFINANCIALDATA"
        },
        "FORWFPM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FRACTIONALROUTINGNO": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INPBAL": {
          "type": "string"
        },
        "INPDATE": {
          "type": "string"
        },
        "INTERESTEARNEDACCOUNTLABEL": {
          "type": "string"
        },
        "INTERESTEARNEDGLACCOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LASTRECONCILEDBALANCE": {
          "type": "string"
        },
        "LASTRECONCILEDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/savingsAccountsGetAllRespMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAMEONTHEACCOUNT": {
          "type": "string"
        },
        "NEXTCHECK": {
          "type": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-samplevalue": "Unrestricted"
        },
        "OUTSOURCECHECK": {
          "type": "string"
        },
        "PHONE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PMCHECKTEMPLATEID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 69,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string"
        },
        "ROUTINGNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SERVICECHARGEACCOUNTLABEL": {
          "type": "string"
        },
        "SERVICECHARGEGLACCOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHARECHECKNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-03T14:59:25Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-03T15:34:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WPBACCOUNTNAME": {
          "type": "string"
        },
        "WPBBANK": {
          "type": "string"
        },
        "WPBBANKACCOUNTID": {
          "type": "string"
        },
        "WPBDATAPROVIDER": {
          "type": "string"
        },
        "WPBLASTBANKFEEDDATE": {
          "type": "string"
        },
        "WPBLASTTRANSACTIONSRECEIVED": {
          "type": "string"
        },
        "WPBREFRESHSTATUS": {
          "type": "string"
        },
        "WPBSTATUS": {
          "type": "string"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "customerTypesByIdPARENT": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "PARENT",
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPCOGSACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "cogsAccount"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPatchReqCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "checkingAccountsListObject": {
      "properties": {
        "ABOURL": {
          "type": "string"
        },
        "ABO_EMAIL_ID": {
          "type": "string"
        },
        "ABO_FIRST_NAME": {
          "type": "string"
        },
        "ABO_LAST_NAME": {
          "type": "string"
        },
        "ABO_MIDDLE_NAME": {
          "type": "string"
        },
        "ABO_PHONE_NUMBER": {
          "type": "string"
        },
        "ACHBANKID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACHCOMPANYID": {
          "type": "string"
        },
        "ACHENABLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AMEXCHECKNUM": {
          "type": "string"
        },
        "AMEX_BANK_ACCOUNT_ADDRESS_ID": {
          "type": "string"
        },
        "AMEX_BANK_ACCOUNT_ID": {
          "type": "string"
        },
        "AMEX_BA_ACH_AFFILIATE_ID": {
          "type": "string"
        },
        "AMEX_BA_CD_RETURN_ADDRESS_ID": {
          "type": "string"
        },
        "AMEX_CARD_ACCOUNT_ID": {
          "type": "string"
        },
        "AMEX_PAYVE_ACCOUNTID": {
          "type": "string"
        },
        "APCANUMBER": {
          "type": "string"
        },
        "AUTOMATE_ACH_PYMT_CONF": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_ACH_PYMT_SEND": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_CHECK_PRINT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUTOMATE_PYMT_CONF": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "500_ING"
        },
        "BANKACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 9387573932,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "checking",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKFILEFORMAT": {
          "type": "string"
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "ING",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHID": {
          "type": "string"
        },
        "BRANCHID": {
          "type": "string"
        },
        "BSBNUMBER": {
          "type": "string"
        },
        "CHECKINFOCONTACT": {
          "$ref": "#/definitions/checkingAccountsListCHECKINFOCONTACT"
        },
        "CHECKLAYOUT": {
          "$ref": "#/definitions/checkingAccountsListCHECKLAYOUT"
        },
        "CHECKSPERPAGE": {
          "type": "string"
        },
        "COMPANYIDENTIFICATION": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "EUR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUTOFFDATE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "DISCRETIONARYDATA": {
          "type": "string"
        },
        "DOCNUMBERSEQ": {
          "type": "string"
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/checkingAccountsListFINANCIALDATA"
        },
        "FINANCIALINSTITUTION": {
          "type": "string"
        },
        "FORWFPM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FRACTIONALROUTINGNO": {
          "type": "string"
        },
        "FULLBANKNAME": {
          "type": "string"
        },
        "GLACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1014,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "INPBAL": {
          "type": "string"
        },
        "INPDATE": {
          "type": "string"
        },
        "INTERESTEARNEDACCOUNTLABEL": {
          "type": "string"
        },
        "INTERESTEARNEDGLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8100
        },
        "LASTRECONCILEDBALANCE": {
          "type": "string"
        },
        "LASTRECONCILEDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 500,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/checkingAccountsListMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAMEONTHEACCOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NEXTCHECK": {
          "type": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-samplevalue": "Restricted"
        },
        "ORIGINATORSTATUSCODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OUTSOURCEACH": {
          "type": "string"
        },
        "OUTSOURCECHECK": {
          "type": "string"
        },
        "PHONE": {
          "type": "string",
          "x-samplevalue": "353 1 638 4000",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PMCHECKTEMPLATEID": {
          "type": "string"
        },
        "PRINTON": {
          "type": "string",
          "x-samplevalue": "D"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "RECORDTYPECODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "RESTRICTEDLOCATIONS": {
          "$ref": "#/definitions/checkingAccountsListRESTRICTEDLOCATIONS"
        },
        "ROUTINGNO": {
          "type": "string"
        },
        "RSVPCODE": {
          "type": "string"
        },
        "SERVICECHARGEACCOUNTLABEL": {
          "type": "string"
        },
        "SERVICECHARGEGLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6270
        },
        "SERVICECLASSCODE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 220
        },
        "SHARECHECKNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUNNUMBER": {
          "type": "string"
        },
        "TRACENUMBERSEQ": {
          "type": "string"
        },
        "USEBANKFILE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USERECOMMENDEDSETUP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USETRACENUMBER": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-06-07T20:13:12Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-09-26T13:32:52Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WPBACCOUNTNAME": {
          "type": "string"
        },
        "WPBBANK": {
          "type": "string"
        },
        "WPBBANKACCOUNTID": {
          "type": "string"
        },
        "WPBDATAPROVIDER": {
          "type": "string"
        },
        "WPBLASTBANKFEEDDATE": {
          "type": "string"
        },
        "WPBLASTTRANSACTIONSRECEIVED": {
          "type": "string"
        },
        "WPBREFRESHSTATUS": {
          "type": "string"
        },
        "WPBSTATUS": {
          "type": "string"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "itemsListUOM": {
      "properties": {
        "INVUOMDETAIL": {
          "$ref": "#/definitions/itemsListUOMINVUOMDETAIL"
        },
        "POUOMDETAIL": {
          "$ref": "#/definitions/itemsListUOMPOUOMDETAIL"
        },
        "SOUOMDETAIL": {
          "$ref": "#/definitions/itemsListUOMSOUOMDETAIL"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdReturnto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-displayName": "Contact Name",
          "x-samplevalue": "Boston Properties"
        }
      },
      "title": "returnto",
      "type": "object"
    },
    "updateUser": {
      "properties": {
        "ADMIN": {
          "type": "string",
          "x-samplevalue": "false"
        },
        "CONTACTINFO": {
          "properties": {
            "EMAIL1": {
              "type": "string",
              "x-samplevalue": "jsmith@example.com",
              "x-sub-format": "email"
            },
            "FIRSTNAME": {
              "type": "string",
              "x-samplevalue": "Smith"
            },
            "LASTNAME": {
              "type": "string",
              "x-samplevalue": "John"
            }
          },
          "$ref": "#/definitions/updateUserUSERINFOCONTACTINFO"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "John Smith"
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "jsmith"
        },
        "SSO_ENABLED": {
          "type": "string",
          "x-samplevalue": "true"
        },
        "SSO_FEDERATED_ID": {
          "type": "string",
          "x-samplevalue": "jsmith"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "USERDEPARTMENTS": {
          "properties": {
            "DEPARTMENTID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/updateUserUSERINFOUSERDEPARTMENTS"
        },
        "USERLOCATIONS": {
          "properties": {
            "LOCATIONID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/updateUserUSERINFOUSERLOCATIONS"
        },
        "USERTERRITORIES": {
          "properties": {
            "TERRITORYID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/updateUserUSERINFOUSERTERRITORIES"
        },
        "USERTYPE": {
          "type": "string",
          "x-samplevalue": "business user"
        }
      },
      "title": "updateUser",
      "type": "object"
    },
    "updateAccountGroup": {
      "properties": {
        "ASOF": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DBCR": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DEPTNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERCLASS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERCUSTOMER": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERDEPT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTEREMPLOYEE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERGLDIM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERITEM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERLOC": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERPROJECT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FILTERVENDOR": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCTGRPS": {
          "$ref": "#/definitions/updateAccountGroupGLACCTGRPS"
        },
        "GLACCTRANGES": {
          "$ref": "#/definitions/updateAccountGroupGLACCTRANGES"
        },
        "GLCATGRPS": {
          "$ref": "#/definitions/updateAccountGroupGLCATGRPS"
        },
        "GLCOMPGRPS": {
          "$ref": "#/definitions/updateAccountGroupGLCOMPGRPS"
        },
        "GLDIM": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "GLSTATACCTRANGES": {
          "$ref": "#/definitions/updateAccountGroupGLSTATACCTRANGES"
        },
        "GLSTATCATGRPS": {
          "$ref": "#/definitions/updateAccountGroupGLSTATCATGRPS"
        },
        "ISKPI": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LOCNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "NORMAL_BALANCE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TOTALTITLE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "updateAccountGroup",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "GLACCTGRP",
      "type": "object"
    },
    "updateClass": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMFIELDS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updateClass",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "updateAllocationsALLOCATIONENTRIESALLOCATIONENTRY": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VALUE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "ALLOCATIONENTRY",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSotransitemsSotransitemExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "recurringInvoices": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-has-customfields": false,
      "title": "recurringInvoices",
      "type": "object",
      "x-vendor-objectname": "recurring Invoices",
      "properties": {
        "ACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds Account",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACCOUNTTYPE"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick(C11111)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOCONTACTNAME"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTDESC"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID"
        },
        "CREDITCARDTYPE": {
          "type": "string",
          "x-samplevalue": "VISA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREDITCARDTYPE"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTMESSAGEID"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": 11111,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITY"
        },
        "GLACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 880,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCOUNTKEY"
        },
        "GLACCTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCTNO"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "CE Test Account",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCTTITLE"
        },
        "LASTEXECDATE": {
          "type": "string",
          "x-samplevalue": "08/31/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LASTEXECDATE"
        },
        "LASTPAYMENTRESULT": {
          "type": "string",
          "x-samplevalue": "S",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LASTPAYMENTRESULT"
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "4.AR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODULEKEY"
        },
        "PAYINFULL": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYINFULL"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "Credit Card",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMETHOD"
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "ARIN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ri",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "RECURPAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECURPAYMENTKEY"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SCHOPKEY"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick(C11111)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOCONTACTNAME"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMKEY"
        },
        "TERMNAME": {
          "type": "string",
          "x-samplevalue": "N30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMNAME"
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERKEY"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        }
      }
    },
    "purchaseOrdersGetByIdDELIVERTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqExchratedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemCancelafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.year}"
        }
      },
      "title": "cancelafterdate",
      "type": "object"
    },
    "objectNamePostRes": {
      "properties": {
        "Status": {
          "type": "string",
          "x-samplevalue": "true"
        }
      },
      "title": "objectNamePostRes",
      "type": "object"
    },
    "auditsHistoryGetResObject": {
      "properties": {
        "ACCESSMODE": {
          "type": "string",
          "x-displayName": "ACCESSMODE",
          "x-samplevalue": "Create",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACCESSTIME": {
          "type": "string",
          "x-displayName": "ACCESSTIME",
          "x-samplevalue": "11/11/2018 20:30:35",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACTION_DETAILS": {
          "type": "string",
          "x-displayName": "ACTION_DETAILS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ID": {
          "type": "string",
          "x-displayName": "ID",
          "x-samplevalue": "acctlabeltaxgroup:rtrtrtrt:CW@iRa8CoA3YAAFhZKeMAAAAI",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "IPADDRESS": {
          "type": "string",
          "x-displayName": "IPADDRESS",
          "x-samplevalue": "64.46.167.178",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NOTES": {
          "type": "string",
          "x-displayName": "NOTES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OBJECTKEY": {
          "type": "string",
          "x-displayName": "OBJECTKEY",
          "x-samplevalue": "rtrtrtrt",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OBJECTTYPE": {
          "type": "string",
          "x-displayName": "OBJECTTYPE",
          "x-samplevalue": "acctlabeltaxgroup",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SOURCE": {
          "type": "string",
          "x-displayName": "SOURCE",
          "x-samplevalue": "ui",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WORKFLOWACTION": {
          "type": "string",
          "x-displayName": "WORKFLOWACTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "objectNamePostReq": {
      "properties": {
        "objectField": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "objectNamePostReq",
      "type": "object"
    },
    "customersPOSTResponse": {
      "properties": {
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "123"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CUSTOMER",
      "type": "object"
    },
    "recurringOrderEntryTransactionsBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "inventoryTransactionDefinationsListTOTALS": {
      "properties": {
        "TOTAL": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListTOTALSTOTAL"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqInternalissuedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalissuedon.year}"
        }
      },
      "title": "internalissuedon",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIES": {
      "properties": {
        "recurdocumententry": {
          "items": {
            "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIESRecurdocumententry"
          },
          "type": "array"
        }
      },
      "title": "ENTRIES",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "title": "RECALLS",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllObject": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-displayName": "Base Currency",
          "x-samplevalue": "USD"
        },
        "currency": {
          "type": "string",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "datecreated": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllDatedue"
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Exchange Rate",
          "x-samplevalue": 1
        },
        "exchratedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllExchratedate"
        },
        "haschange": {
          "type": "boolean",
          "x-displayName": "Has Change",
          "x-samplevalue": false
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Key",
          "x-samplevalue": 939
        },
        "message": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Message",
          "x-samplevalue": 121212
        },
        "paymentbondreceived": {
          "type": "boolean",
          "x-displayName": "Payment Bond Received",
          "x-samplevalue": false
        },
        "paymentbondrequired": {
          "type": "boolean",
          "x-displayName": "Payment Bond Required",
          "x-samplevalue": false
        },
        "paymentstatus": {
          "type": "string",
          "x-displayName": "Payment Status",
          "x-samplevalue": "Open"
        },
        "payto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllPayto"
        },
        "performancebondreceived": {
          "type": "boolean",
          "x-displayName": "Performance Bond Received",
          "x-samplevalue": false
        },
        "performancebondrequired": {
          "type": "boolean",
          "x-displayName": "Performance Bond Required",
          "x-samplevalue": false
        },
        "potransitems": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllPotransitems"
        },
        "referenceno": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Reference No",
          "x-samplevalue": 1212
        },
        "returnto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllReturnto"
        },
        "shippingmethod": {
          "type": "string",
          "x-displayName": "Shipping Method",
          "x-samplevalue": "roads"
        },
        "supdocid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Sup Doc Id",
          "x-samplevalue": 12
        },
        "termname": {
          "type": "string",
          "x-displayName": "Term Name",
          "x-samplevalue": "Net 30"
        },
        "transactionid": {
          "type": "string",
          "x-displayName": "Transaction Id",
          "x-samplevalue": "Purchase Order-PO0011"
        },
        "transactionstate": {
          "type": "string",
          "x-displayName": "Transaction State",
          "x-samplevalue": "Pending"
        },
        "transactiontype": {
          "type": "string",
          "x-displayName": "Transaction Type",
          "x-samplevalue": "Purchase Order"
        },
        "vendordocno": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Vendor Doc No",
          "x-samplevalue": 21212
        },
        "vendorid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Vendor Id",
          "x-samplevalue": 20001
        },
        "whenmodified": {
          "type": "string",
          "x-displayName": "When Modified",
          "x-samplevalue": "11/14/2018 05:09:26"
        }
      },
      "title": "purchasingTransactionsLegacyGetAll",
      "type": "object"
    },
    "apBillsPatchRes": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "3055"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APBILL",
      "type": "object"
    },
    "purchaseOrdersListHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 799
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Converted"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "01/31/2017"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/24/2017 16:10:59"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 798
        },
        "SOURCEDOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        }
      },
      "type": "object"
    },
    "apBillsPatchReq": {
      "properties": {
        "ACTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "APBILLITEMS": {
          "$ref": "#/definitions/apBillsPatchReqAPBILLITEMS"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ONHOLD": {
          "type": "boolean",
          "x-alias": "isOnHold",
          "x-samplevalue": true
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDID": {
          "type": "string",
          "x-alias": "purchase-order.id",
          "x-samplevalue": "string"
        },
        "RECPAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "APBILL",
      "type": "object"
    },
    "updateAllocationsALLOCATIONENTRIES": {
      "properties": {
        "ALLOCATIONENTRY": {
          "items": {
            "$ref": "#/definitions/updateAllocationsALLOCATIONENTRIESALLOCATIONENTRY"
          },
          "type": "array"
        }
      },
      "title": "ALLOCATIONENTRIES",
      "type": "object"
    },
    "projectsListCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "apBillsListAPBILLITEMSApbillitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 97
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6225
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Internet"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "BILLABLE": {
          "type": "boolean",
          "x-alias": "lines[*].billableStatus",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 330
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "IT"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "DETAILID": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-04-15"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6225
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Internet"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Payable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "PRENTRYOFFSETACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 52
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 151
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RELEASETOPAY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "RGLDIM169562_10007": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20028
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Verizon Business"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:29:12Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-11T17:09:04Z"
        }
      },
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Sales only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchasingPriceListsListObject": {
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATEFROM",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATETO",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2030-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Base Price List PO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-displayName": "SALEPURCHASE",
          "x-samplevalue": "Purchasing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqBillto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "billto",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchResp": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "InventoryTransactionLegacyPatchResp",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "vendorsPatchReqDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsPatchReqDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDonotshipbeforedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.year}"
        }
      },
      "title": "donotshipbeforedate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqReturnto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{returnto.contactname}"
        }
      },
      "title": "returnto",
      "type": "object"
    },
    "customersGETByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY": {
      "properties": {
        "ENTRYDATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "departmentGroupsListObject": {
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-displayName": "CONDITION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-displayName": "CONDITIONTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-displayName": "DIMGRPCOMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GROUPTYPE": {
          "type": "string",
          "x-displayName": "GROUPTYPE",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ID": {
          "type": "string",
          "x-displayName": "ID",
          "x-samplevalue": "Dept-Cost Centers",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-displayName": "MEMBERFILTERS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERS": {
          "$ref": "#/definitions/departmentGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Cost Center Departments",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTTO": {
          "type": "string",
          "x-displayName": "RESTRICTTO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SORTFIELD": {
          "type": "string",
          "x-displayName": "SORTFIELD",
          "x-samplevalue": "DEPARTMENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SORTORDER": {
          "type": "string",
          "x-displayName": "SORTORDER",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "customerTypesById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "customerTypesById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Banking",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENT": {
          "$ref": "#/definitions/customerTypesListPARENT"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "createContractResponse": {
      "properties": {
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CTRC-1320"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 730
        }
      },
      "title": "createContractResponse",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CONTRACT",
      "type": "object"
    },
    "savingsAccountsGetByIdResCHECKINFOCONTACT": {
      "properties": {
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Sage Intacct"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "raju(Btestsaving)"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/savingsAccountsGetByIdResCHECKINFOCONTACTMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        }
      },
      "title": "CHECKINFOCONTACT",
      "type": "object"
    },
    "inventoryTransactionDefinationsListTOTALSTOTAL": {
      "properties": {
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "Q_QV": {
          "type": "string",
          "x-samplevalue": "Quantity & Value"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 135
        },
        "SIGN": {
          "type": "string",
          "x-samplevalue": "Add"
        },
        "TOTALID": {
          "type": "string",
          "x-samplevalue": "ONHAND"
        }
      },
      "type": "object"
    },
    "salesReceiptsListObject": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-14T07:06:09.694Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BANKACCOUNTCURR": {
          "type": "string",
          "x-displayName": "BANKACCOUNTCURR",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-displayName": "BANKACCOUNTID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTNAME": {
          "type": "string",
          "x-displayName": "BANKACCOUNTNAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPOSITDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "DEPOSITDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-09-14",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPOSITTO": {
          "type": "string",
          "x-displayName": "DEPOSITTO",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-displayName": "DESCRIPTION2",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-displayName": "EXCHANGE_RATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "IMPLIEDLOCATION": {
          "type": "string",
          "x-displayName": "IMPLIEDLOCATION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OTHERRECEIPTSENTRIES": {
          "$ref": "#/definitions/salesReceiptsListOTHERRECEIPTSENTRIES"
        },
        "PARENTPAYMENT": {
          "type": "string",
          "x-displayName": "PARENTPAYMENT",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMETHOD": {
          "type": "string",
          "x-displayName": "PAYMETHOD",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "type": "string",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECON_DATE": {
          "type": "string",
          "x-displayName": "RECON_DATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "type": "string",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UNDEPACCTNO": {
          "type": "string",
          "x-displayName": "UNDEPACCTNO",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-09-14",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "vendorsAdvancedPostRes": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3722
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "VENDOR",
      "type": "object"
    },
    "orderEntryTransactionsLists_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionsLists_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "string"
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "type": "string"
        },
        "TERM_NAME": {
          "type": "string"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "XSLTEMPLATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 57
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUPOEGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "arAdjustmentsPostReq": {
      "properties": {
        "action": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "adjustmentno": {
          "type": "string",
          "x-samplevalue": "Pymt-108"
        },
        "aradjustmentitems": {
          "$ref": "#/definitions/aradjustmentitemsCMPostReq"
        },
        "basecurr": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "batchkey": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "datecreated": {
          "$ref": "#/definitions/datecreatedCMPost"
        },
        "dateposted": {
          "$ref": "#/definitions/datepostedCMPost"
        },
        "description": {
          "type": "string",
          "x-samplevalue": ""
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "exchratedate": {
          "$ref": "#/definitions/exchratedateCMPost"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "TEST"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "A22"
        },
        "invoiceno": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "nogl": {
          "type": "string",
          "x-samplevalue": "dd"
        }
      },
      "required": [
        "customerid",
        "datecreated",
        "aradjustmentitems"
      ],
      "title": "arAdjustmentsPostReq",
      "type": "object"
    },
    "salesOrdersListCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "savingsAccountsGetByIdRes": {
      "properties": {
        "ACHCOMPANYID": {
          "type": "string"
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "testsaving"
        },
        "BANKACCOUNTNO": {
          "type": "string"
        },
        "BANKACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "savings"
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "updated"
        },
        "BRANCHID": {
          "type": "string"
        },
        "CHECKINFOCONTACT": {
          "$ref": "#/definitions/savingsAccountsGetByIdResCHECKINFOCONTACT"
        },
        "CHECKLAYOUT": {
          "$ref": "#/definitions/savingsAccountsGetByIdResCHECKLAYOUT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUTOFFDATE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/savingsAccountsGetByIdResFINANCIALDATA"
        },
        "FORWFPM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FRACTIONALROUTINGNO": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "type": "string"
        },
        "INPBAL": {
          "type": "string"
        },
        "INPDATE": {
          "type": "string"
        },
        "INTERESTEARNEDACCOUNTLABEL": {
          "type": "string"
        },
        "INTERESTEARNEDGLACCOUNT": {
          "type": "string"
        },
        "LASTRECONCILEDBALANCE": {
          "type": "string"
        },
        "LASTRECONCILEDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/savingsAccountsGetByIdResMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "NAMEONTHEACCOUNT": {
          "type": "string"
        },
        "NEXTCHECK": {
          "type": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-samplevalue": "Unrestricted"
        },
        "OUTSOURCECHECK": {
          "type": "string"
        },
        "PHONE": {
          "type": "string"
        },
        "PMCHECKTEMPLATEID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 69
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string"
        },
        "ROUTINGNO": {
          "type": "string"
        },
        "SERVICECHARGEACCOUNTLABEL": {
          "type": "string"
        },
        "SERVICECHARGEGLACCOUNT": {
          "type": "string"
        },
        "SHARECHECKNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-03T14:59:25Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-03T15:34:42Z"
        },
        "WPBACCOUNTNAME": {
          "type": "string"
        },
        "WPBBANK": {
          "type": "string"
        },
        "WPBBANKACCOUNTID": {
          "type": "string"
        },
        "WPBDATAPROVIDER": {
          "type": "string"
        },
        "WPBLASTBANKFEEDDATE": {
          "type": "string"
        },
        "WPBLASTTRANSACTIONSRECEIVED": {
          "type": "string"
        },
        "WPBREFRESHSTATUS": {
          "type": "string"
        },
        "WPBSTATUS": {
          "type": "string"
        }
      },
      "title": "savingsAccountsGetByIdRes",
      "type": "object"
    },
    "purchasingTransactionEntriesGetAllITEM": {
      "properties": {
        "BUYTOORDER": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "itemUpdateWAREHOUSEINFOITEMWAREHOUSEINFOITEMWAREHOUSEVENDORENTRIES": {
      "properties": {
        "ECONOMIC_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "FORECAST_DEMAND_IN_LEAD_TIME": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "LEAD_TIME": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "MIN_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "PREFERRED_VENDOR": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "STOCKNO": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "checkingAccountsByIdFINANCIALDATA": {
      "properties": {
        "APJOURNAL": {
          "type": "string",
          "x-samplevalue": "CDJ"
        },
        "ARJOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "DISABLEIET": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "RECONMODE": {
          "type": "string",
          "x-samplevalue": "Manual"
        }
      },
      "title": "FINANCIALDATA",
      "type": "object"
    },
    "vendorsGetByIDRETURNTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsListsCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLSTATACCTRANGESACCTRANGE": {
      "properties": {
        "RANGEFROM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RANGETO": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "ACCTRANGE",
      "type": "object"
    },
    "creditMemosGetByIdSHIPTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqContractstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{contractstartdate.year}"
        }
      },
      "title": "contractstartdate",
      "type": "object"
    },
    "createAccountGroupGLSTATACCTRANGESACCTRANGE": {
      "properties": {
        "RANGEFROM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RANGETO": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "NAME",
        "MEMBERTYPE",
        "RANGEFROM",
        "RANGETO",
        "CHILDNAME",
        "CATEGORYNAME"
      ],
      "title": "ACCTRANGE",
      "type": "object"
    },
    "checkingAccountsListFINANCIALDATA": {
      "properties": {
        "APJOURNAL": {
          "type": "string",
          "x-samplevalue": "CDJ"
        },
        "ARJOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "DISABLEIET": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "RECONMODE": {
          "type": "string",
          "x-samplevalue": "Manual"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/OrderEntryTransactionLegacyListSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "employeesByIdCONTACT_LIST_INFO": {
      "properties": {
        "employeeentitycontacts": {
          "items": {
            "$ref": "#/definitions/employeesByIdCONTACT_LIST_INFOEmployeeentitycontacts"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsListINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqSubtotalsSubtotalCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPostReqSubtotalsSubtotalCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "depositsGetListObject": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "mm/dd/yyyy hh:mm:ss",
          "x-samplevalue": "04/20/2018 08:29:44",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BANKNAME": {
          "type": "string",
          "x-displayName": "BANKNAME",
          "x-samplevalue": "Teampay",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "boolean",
          "x-displayName": "CLEARED",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPOSITID": {
          "type": "string",
          "x-displayName": "DEPOSITID",
          "x-samplevalue": "Deposit Slip 04/20/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "fff",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-displayName": "FINANCIALENTITY",
          "x-samplevalue": "Teampay",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "2873"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 1
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "s",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "type": "string",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2861",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "cd",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORD_URL": {
          "type": "string",
          "x-displayName": "RECORD_URL",
          "x-samplevalue": "https:customer.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSALDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "REVERSALDATE",
          "x-mask": "MM/dd/yyyy",
          "x-samplevalue": "05/01/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSALKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REVERSALKEY",
          "x-samplevalue": 2873,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSEDDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "REVERSEDDATE",
          "x-mask": "MM/dd/yyyy",
          "x-samplevalue": "05/01/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REVERSEDKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "Draft",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": "1000",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": "1000",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "x-vendor-objectname": "Depostis",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "2305--Deferred Revenue Contra"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Deferred Revenue Contra"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "AP/AR"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "title": "AR_ACCOUNT",
      "type": "object"
    },
    "createUserUSERINFOUSERLOCATIONS": {
      "properties": {
        "LOCATIONID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            "",
            ""
          ]
        }
      },
      "title": "USERLOCATIONS",
      "type": "object"
    },
    "locationsGetByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "1740 Wazee St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 80202
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "accountGroupsByIdGLCATGRPSGlcoacatmember": {
      "properties": {
        "CATEGORYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 806
        },
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "Payroll Expense"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 57
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "glcoacatmember",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusKitstatus": {
      "properties": {
        "deferralstatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "deliverydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusKitstatusDeliverydate"
        },
        "deliverystatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "invoiceprice": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "line_num": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "kitstatus",
      "type": "object"
    },
    "inventoryTransactionsByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "unitOfMeasuresByIdUOMDETAILS": {
      "properties": {
        "uomdetail": {
          "items": {
            "$ref": "#/definitions/unitOfMeasuresByIdUOMDETAILSUomdetail"
          },
          "type": "array"
        }
      },
      "title": "UOMDETAILS",
      "type": "object"
    },
    "journalEntryPostResp": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 79989
        }
      },
      "title": "journalEntryPostResp",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitem": {
      "properties": {
        "billingtemplate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bundlenumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discountpercent": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discsurchargememo": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "dropship": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "fulfillmentstatus": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatus"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdetails": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "linelevelsimpletaxtyp": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "linenum": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacypatchReqUpdateSotransitemsSotransitemNeedByDate"
        },
        "price": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "renewalmacro": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "revrecenddate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemRevrecenddate"
        },
        "revrecstartdate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemRevrecstartdate"
        },
        "revrectemplate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipto": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sourcelinekey": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "taskno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "sotransitem",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqExchratedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{exchratedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{exchratedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{exchratedate.year}"
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "savingsAccountsGetByIdResCHECKLAYOUT": {
      "properties": {
        "BANKACCTALIGN": {
          "type": "string",
          "x-samplevalue": "right"
        },
        "CHECKNOLENGTH": {
          "type": "string"
        },
        "CHECKPAPERFORMAT": {
          "type": "string",
          "x-samplevalue": "top"
        },
        "CHECKPRINTFORMAT": {
          "type": "string",
          "x-samplevalue": "standard"
        },
        "DFLTCNYADDR": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DISPLAYLOCATIONAS": {
          "type": "string",
          "x-samplevalue": "id"
        },
        "MICRTRANSCODE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS32": {
          "type": "string",
          "x-samplevalue": "Position 31"
        },
        "PRINTLINEITEMS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SIGLINE2AMOUNT": {
          "type": "string"
        },
        "SIGNATUREIMAGE1": {
          "type": "string"
        },
        "SIGNATUREIMAGE2": {
          "type": "string"
        },
        "SPACESTOAPPEND": {
          "type": "string"
        },
        "USDTEXT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USESIG1BELOWAMT": {
          "type": "string"
        },
        "USESIG2BELOWAMT": {
          "type": "string"
        },
        "VOIDTEXT": {
          "type": "string"
        }
      },
      "title": "CHECKLAYOUT",
      "type": "object"
    },
    "DebitMemoListAPADJUSTMENTITEMS": {
      "properties": {
        "apadjustmentitem": {
          "items": {
            "$ref": "#/definitions/DebitMemoListAPADJUSTMENTITEMSApadjustmentitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "journalEntryPostReqENTRIESGLENTRYTAXENTRIESTAXENTRY": {
      "properties": {
        "DETAILID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TRX_TAX": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "DETAILID",
        "TRX_TAX"
      ],
      "title": "TAXENTRY",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqCancelafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.year}"
        }
      },
      "title": "cancelafterdate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqNeedbydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{needbydate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{needbydate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{needbydate.year}"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T18:24:31Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 25
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED_TIMESHEETENTRY": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY"
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "100--Small Businesses"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001--10001 - One-Year Contract"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10001--Corley Energy"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "100--Sales"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DISCOUNT": {
          "type": "string"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GENINVOICELINEKEY": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "ITEM": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Machine Learning Core"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Subscriptions"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "100--Machine Learning Core"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string",
          "x-samplevalue": "Contract line 1, billing schedule date 01/01/2015"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10024": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententrySHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "sodocumententry",
      "type": "object"
    },
    "checkingAccountsListRESTRICTEDLOCATIONS": {
      "properties": {
        "LOCATIONID": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "x-samplevalue": [
            500
          ]
        }
      },
      "type": "object"
    },
    "locationGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "locationGroupsById",
      "type": "object",
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITION"
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITIONTYPE"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/locationGroupsListCONTACTINFO"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DIMGRPCOMP"
        },
        "GROUPTYPE": {
          "type": "string",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GROUPTYPE"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "Location-110",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ID"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEMBERFILTERS"
        },
        "MEMBERS": {
          "$ref": "#/definitions/locationGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "San Francisco",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RESTRICTTO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESTRICTTO"
        },
        "SORTFIELD": {
          "type": "string",
          "x-samplevalue": "LOCATIONID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTFIELD"
        },
        "SORTORDER": {
          "type": "string",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTORDER"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "journalsByIdUSERINFO": {
      "properties": {
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "admin"
        }
      },
      "title": "USERINFO",
      "type": "object"
    },
    "warehousesPostCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Stish"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqScheduledcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.year}"
        }
      },
      "title": "scheduledcompletiondate",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDINVGL_ACCOUNTSINVGL_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "1400--Inventory"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "Products"
        },
        "LINE_NO": {
          "type": "string"
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "INV"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "title": "INVGL_ACCOUNT",
      "type": "object"
    },
    "projectsListBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "projectsListSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "journalEntryPostReqENTRIESGLENTRY": {
      "properties": {
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DOCUMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SPLIT": {
          "items": {
            "$ref": "#/definitions/journalEntryPostReqENTRIESGLENTRYSPLIT"
          },
          "type": "array"
        },
        "TAXENTRIES": {
          "$ref": "#/definitions/journalEntryPostReqENTRIESGLENTRYTAXENTRIES"
        },
        "TRX_AMOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TR_TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "ACCOUNTNO",
        "TRX_AMOUNT",
        "TR_TYPE"
      ],
      "title": "GLENTRY",
      "type": "object"
    },
    "customersGETByIdDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Tyrell Corp."
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersGETByIdDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Tyrell Corp."
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "departmentsListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTTITLE": {
          "type": "string",
          "x-displayName": "CUSTTITLE",
          "x-samplevalue": "SAiSatish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": 320,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": 101,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SUPERVISORKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-displayName": "SUPERVISORNAME",
          "x-samplevalue": "Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TITLE": {
          "type": "string",
          "x-displayName": "TITLE",
          "x-samplevalue": "Finance",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "departmentGroupsByIdResMEMBERSDepartmentgrpmember": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin"
        },
        "DEPARTMENTSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "departmentgrpmember",
      "type": "object"
    },
    "inventoryTransactionEntriesListWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string",
          "x-samplevalue": "WH1"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Warehouse 1"
        }
      },
      "type": "object"
    },
    "itemsPostWAREHOUSEINFOITEMWAREHOUSEINFO": {
      "properties": {
        "ENABLE_REPLENISHMENT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ITEMWAREHOUSEVENDORENTRIES": {
          "items": {
            "$ref": "#/definitions/itemsPostWAREHOUSEINFOITEMWAREHOUSEINFOITEMWAREHOUSEVENDORENTRIES"
          },
          "type": "array"
        },
        "MAX_ORDER_QTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REORDER_POINT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].reOrderPoint",
          "x-samplevalue": 0
        },
        "REORDER_QTY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].reOrderQuantity",
          "x-samplevalue": 0
        },
        "REPLENISHMENT_METHOD": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "SAFETY_STOCK": {
          "format": "int32",
          "type": "integer",
          "x-alias": "locations[*].safetyStockUnits",
          "x-samplevalue": 0
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-alias": "locations[*].id",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdSUBTOTALSSodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        }
      },
      "title": "sodocumentsubtotals",
      "type": "object"
    },
    "entitiesListIEPAYABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "expenseReportsListObject": {
      "properties": {
        "ACKMESSAGEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "APPROVEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BANKACKNOWLEDGED": {
          "type": "string"
        },
        "BANKFILEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BATCHCREATED": {
          "type": "string",
          "x-samplevalue": "12/07/2016",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHNAME": {
          "type": "string",
          "x-samplevalue": "Expenses - 100: 2017/08/22 13:32:28:8592 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLBACKTEMPLATEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLTOPAYTOKEY": {
          "type": "string"
        },
        "CHECKFORMAT": {
          "type": "string"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string"
        },
        "COMMENTS": {
          "type": "string"
        },
        "CONFMESSAGEKEY": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string"
        },
        "CUSTFIELD1": {
          "type": "string"
        },
        "CUSTFIELD10": {
          "type": "string"
        },
        "CUSTFIELD100": {
          "type": "string"
        },
        "CUSTFIELD11": {
          "type": "string"
        },
        "CUSTFIELD12": {
          "type": "string"
        },
        "CUSTFIELD13": {
          "type": "string"
        },
        "CUSTFIELD14": {
          "type": "string"
        },
        "CUSTFIELD15": {
          "type": "string"
        },
        "CUSTFIELD16": {
          "type": "string"
        },
        "CUSTFIELD17": {
          "type": "string"
        },
        "CUSTFIELD18": {
          "type": "string"
        },
        "CUSTFIELD19": {
          "type": "string"
        },
        "CUSTFIELD2": {
          "type": "string"
        },
        "CUSTFIELD20": {
          "type": "string"
        },
        "CUSTFIELD21": {
          "type": "string"
        },
        "CUSTFIELD22": {
          "type": "string"
        },
        "CUSTFIELD23": {
          "type": "string"
        },
        "CUSTFIELD24": {
          "type": "string"
        },
        "CUSTFIELD25": {
          "type": "string"
        },
        "CUSTFIELD26": {
          "type": "string"
        },
        "CUSTFIELD27": {
          "type": "string"
        },
        "CUSTFIELD28": {
          "type": "string"
        },
        "CUSTFIELD29": {
          "type": "string"
        },
        "CUSTFIELD3": {
          "type": "string"
        },
        "CUSTFIELD30": {
          "type": "string"
        },
        "CUSTFIELD31": {
          "type": "string"
        },
        "CUSTFIELD32": {
          "type": "string"
        },
        "CUSTFIELD33": {
          "type": "string"
        },
        "CUSTFIELD34": {
          "type": "string"
        },
        "CUSTFIELD35": {
          "type": "string"
        },
        "CUSTFIELD36": {
          "type": "string"
        },
        "CUSTFIELD37": {
          "type": "string"
        },
        "CUSTFIELD38": {
          "type": "string"
        },
        "CUSTFIELD39": {
          "type": "string"
        },
        "CUSTFIELD4": {
          "type": "string"
        },
        "CUSTFIELD40": {
          "type": "string"
        },
        "CUSTFIELD41": {
          "type": "string"
        },
        "CUSTFIELD42": {
          "type": "string"
        },
        "CUSTFIELD43": {
          "type": "string"
        },
        "CUSTFIELD44": {
          "type": "string"
        },
        "CUSTFIELD45": {
          "type": "string"
        },
        "CUSTFIELD46": {
          "type": "string"
        },
        "CUSTFIELD47": {
          "type": "string"
        },
        "CUSTFIELD48": {
          "type": "string"
        },
        "CUSTFIELD49": {
          "type": "string"
        },
        "CUSTFIELD5": {
          "type": "string"
        },
        "CUSTFIELD50": {
          "type": "string"
        },
        "CUSTFIELD51": {
          "type": "string"
        },
        "CUSTFIELD52": {
          "type": "string"
        },
        "CUSTFIELD53": {
          "type": "string"
        },
        "CUSTFIELD54": {
          "type": "string"
        },
        "CUSTFIELD55": {
          "type": "string"
        },
        "CUSTFIELD56": {
          "type": "string"
        },
        "CUSTFIELD57": {
          "type": "string"
        },
        "CUSTFIELD58": {
          "type": "string"
        },
        "CUSTFIELD59": {
          "type": "string"
        },
        "CUSTFIELD6": {
          "type": "string"
        },
        "CUSTFIELD60": {
          "type": "string"
        },
        "CUSTFIELD61": {
          "type": "string"
        },
        "CUSTFIELD62": {
          "type": "string"
        },
        "CUSTFIELD63": {
          "type": "string"
        },
        "CUSTFIELD64": {
          "type": "string"
        },
        "CUSTFIELD65": {
          "type": "string"
        },
        "CUSTFIELD66": {
          "type": "string"
        },
        "CUSTFIELD67": {
          "type": "string"
        },
        "CUSTFIELD68": {
          "type": "string"
        },
        "CUSTFIELD69": {
          "type": "string"
        },
        "CUSTFIELD7": {
          "type": "string"
        },
        "CUSTFIELD70": {
          "type": "string"
        },
        "CUSTFIELD71": {
          "type": "string"
        },
        "CUSTFIELD72": {
          "type": "string"
        },
        "CUSTFIELD73": {
          "type": "string"
        },
        "CUSTFIELD74": {
          "type": "string"
        },
        "CUSTFIELD75": {
          "type": "string"
        },
        "CUSTFIELD76": {
          "type": "string"
        },
        "CUSTFIELD77": {
          "type": "string"
        },
        "CUSTFIELD78": {
          "type": "string"
        },
        "CUSTFIELD79": {
          "type": "string"
        },
        "CUSTFIELD8": {
          "type": "string"
        },
        "CUSTFIELD80": {
          "type": "string"
        },
        "CUSTFIELD81": {
          "type": "string"
        },
        "CUSTFIELD82": {
          "type": "string"
        },
        "CUSTFIELD83": {
          "type": "string"
        },
        "CUSTFIELD84": {
          "type": "string"
        },
        "CUSTFIELD85": {
          "type": "string"
        },
        "CUSTFIELD86": {
          "type": "string"
        },
        "CUSTFIELD87": {
          "type": "string"
        },
        "CUSTFIELD88": {
          "type": "string"
        },
        "CUSTFIELD89": {
          "type": "string"
        },
        "CUSTFIELD9": {
          "type": "string"
        },
        "CUSTFIELD90": {
          "type": "string"
        },
        "CUSTFIELD91": {
          "type": "string"
        },
        "CUSTFIELD92": {
          "type": "string"
        },
        "CUSTFIELD93": {
          "type": "string"
        },
        "CUSTFIELD94": {
          "type": "string"
        },
        "CUSTFIELD95": {
          "type": "string"
        },
        "CUSTFIELD96": {
          "type": "string"
        },
        "CUSTFIELD97": {
          "type": "string"
        },
        "CUSTFIELD98": {
          "type": "string"
        },
        "CUSTFIELD99": {
          "type": "string"
        },
        "CUSTMESSAGEID": {
          "type": "string"
        },
        "DELIVERYMETHOD": {
          "type": "string"
        },
        "DEPTKEY": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Lunch with client (non-billable)"
        },
        "DESCRIPTION2": {
          "type": "string"
        },
        "DOCNUMBER": {
          "type": "string"
        },
        "EEXPENSESITEMS": {
          "$ref": "#/definitions/expenseReportsListEEXPENSESITEMS"
        },
        "EMPENTITY": {
          "type": "string",
          "x-samplevalue": "E176"
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "FINANCIALENTITY": {
          "type": "string"
        },
        "HASPOSTEDREVREC": {
          "type": "string"
        },
        "HEADER_CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10075--Capsule"
        },
        "HEADER_EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "HEADER_ITEMID": {
          "type": "string",
          "x-samplevalue": "420--Billable Expenses"
        },
        "HEADER_PROJECTID": {
          "type": "string",
          "x-samplevalue": "1004--Capsule Customization"
        },
        "IMPLIEDLOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "INCLUSIVETAX": {
          "type": "string"
        },
        "ITEMS": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "LOCENTITY": {
          "type": "string"
        },
        "MAXPAYACTDATE": {
          "type": "string"
        },
        "MAX_LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "6.EE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NOGL": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "NR_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NR_TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ONHOLD": {
          "type": "string"
        },
        "PARENTPAYMENT": {
          "type": "string"
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "PAYMETHODKEY": {
          "type": "string"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1497
        },
        "PRXBATCHKEY": {
          "type": "string"
        },
        "RECON_DATE": {
          "type": "string"
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "ER0002"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ei",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECPAYMENTDATE": {
          "type": "string"
        },
        "REL1": {
          "type": "string"
        },
        "REL10": {
          "type": "string"
        },
        "REL100": {
          "type": "string"
        },
        "REL11": {
          "type": "string"
        },
        "REL12": {
          "type": "string"
        },
        "REL13": {
          "type": "string"
        },
        "REL14": {
          "type": "string"
        },
        "REL15": {
          "type": "string"
        },
        "REL16": {
          "type": "string"
        },
        "REL17": {
          "type": "string"
        },
        "REL18": {
          "type": "string"
        },
        "REL19": {
          "type": "string"
        },
        "REL2": {
          "type": "string"
        },
        "REL20": {
          "type": "string"
        },
        "REL21": {
          "type": "string"
        },
        "REL22": {
          "type": "string"
        },
        "REL23": {
          "type": "string"
        },
        "REL24": {
          "type": "string"
        },
        "REL25": {
          "type": "string"
        },
        "REL26": {
          "type": "string"
        },
        "REL27": {
          "type": "string"
        },
        "REL28": {
          "type": "string"
        },
        "REL29": {
          "type": "string"
        },
        "REL3": {
          "type": "string"
        },
        "REL30": {
          "type": "string"
        },
        "REL31": {
          "type": "string"
        },
        "REL32": {
          "type": "string"
        },
        "REL33": {
          "type": "string"
        },
        "REL34": {
          "type": "string"
        },
        "REL35": {
          "type": "string"
        },
        "REL36": {
          "type": "string"
        },
        "REL37": {
          "type": "string"
        },
        "REL38": {
          "type": "string"
        },
        "REL39": {
          "type": "string"
        },
        "REL4": {
          "type": "string"
        },
        "REL40": {
          "type": "string"
        },
        "REL41": {
          "type": "string"
        },
        "REL42": {
          "type": "string"
        },
        "REL43": {
          "type": "string"
        },
        "REL44": {
          "type": "string"
        },
        "REL45": {
          "type": "string"
        },
        "REL46": {
          "type": "string"
        },
        "REL47": {
          "type": "string"
        },
        "REL48": {
          "type": "string"
        },
        "REL49": {
          "type": "string"
        },
        "REL5": {
          "type": "string"
        },
        "REL50": {
          "type": "string"
        },
        "REL51": {
          "type": "string"
        },
        "REL52": {
          "type": "string"
        },
        "REL53": {
          "type": "string"
        },
        "REL54": {
          "type": "string"
        },
        "REL55": {
          "type": "string"
        },
        "REL56": {
          "type": "string"
        },
        "REL57": {
          "type": "string"
        },
        "REL58": {
          "type": "string"
        },
        "REL59": {
          "type": "string"
        },
        "REL6": {
          "type": "string"
        },
        "REL60": {
          "type": "string"
        },
        "REL61": {
          "type": "string"
        },
        "REL62": {
          "type": "string"
        },
        "REL63": {
          "type": "string"
        },
        "REL64": {
          "type": "string"
        },
        "REL65": {
          "type": "string"
        },
        "REL66": {
          "type": "string"
        },
        "REL67": {
          "type": "string"
        },
        "REL68": {
          "type": "string"
        },
        "REL69": {
          "type": "string"
        },
        "REL7": {
          "type": "string"
        },
        "REL70": {
          "type": "string"
        },
        "REL71": {
          "type": "string"
        },
        "REL72": {
          "type": "string"
        },
        "REL73": {
          "type": "string"
        },
        "REL74": {
          "type": "string"
        },
        "REL75": {
          "type": "string"
        },
        "REL76": {
          "type": "string"
        },
        "REL77": {
          "type": "string"
        },
        "REL78": {
          "type": "string"
        },
        "REL79": {
          "type": "string"
        },
        "REL8": {
          "type": "string"
        },
        "REL80": {
          "type": "string"
        },
        "REL81": {
          "type": "string"
        },
        "REL82": {
          "type": "string"
        },
        "REL83": {
          "type": "string"
        },
        "REL84": {
          "type": "string"
        },
        "REL85": {
          "type": "string"
        },
        "REL86": {
          "type": "string"
        },
        "REL87": {
          "type": "string"
        },
        "REL88": {
          "type": "string"
        },
        "REL89": {
          "type": "string"
        },
        "REL9": {
          "type": "string"
        },
        "REL90": {
          "type": "string"
        },
        "REL91": {
          "type": "string"
        },
        "REL92": {
          "type": "string"
        },
        "REL93": {
          "type": "string"
        },
        "REL94": {
          "type": "string"
        },
        "REL95": {
          "type": "string"
        },
        "REL96": {
          "type": "string"
        },
        "REL97": {
          "type": "string"
        },
        "REL98": {
          "type": "string"
        },
        "REL99": {
          "type": "string"
        },
        "REQUESTID": {
          "type": "string",
          "x-samplevalue": "e979028bea437c14c6dc8a89bc320979"
        },
        "SCHOPKEY": {
          "type": "string"
        },
        "SHIPTORETURNTOKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "1004IN"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "type": "string"
        },
        "TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "VENDENTITY": {
          "type": "string"
        },
        "VENDORACCTNOKEY": {
          "type": "string"
        },
        "VERSION": {
          "type": "string",
          "x-samplevalue": "2017/08/22 13:32:28.755334000"
        },
        "WHENAPPROVED": {
          "type": "string",
          "x-samplevalue": "08/22/2017",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENBANKCONFIRMED": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07"
        },
        "WHENDISCOUNT": {
          "type": "string"
        },
        "WHENDUE": {
          "type": "string"
        },
        "WHENMODIFIED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-08-22",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "exchangerateType": {
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ID",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ISDEFAULT": {
          "type": "boolean",
          "x-displayName": "ISDEFAULT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORD_URL": {
          "type": "string",
          "x-displayName": "RECORD_URL",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "title": "exchangerateType",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "ID"
      ],
      "x-vendor-objectname": "EXCHANGERATETYPES"
    },
    "itemTaxGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "itemTaxGroupsById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "GROUPTYPE": {
          "type": "string",
          "x-samplevalue": "Item",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GROUPTYPE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Satish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 122,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "customersPATCHRequestCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "arAccountLabelsResTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdDatecreated": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-displayName": "Month",
          "x-samplevalue": "07"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2019
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqENTITY_PROPSENTITY_PROP": {
      "properties": {
        "ENABLEOVERRIDETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENTITY_NAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRESERVE_SEQNUM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "ENTITY_PROP",
      "type": "object"
    },
    "warehousesListLOC": {
      "properties": {
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "NGP-12--Nagpur"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISOFFSET": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "AR_ACCOUNT",
      "type": "object"
    },
    "itemUpdateWAREHOUSEINFO": {
      "properties": {
        "ITEMWAREHOUSEINFO": {
          "$ref": "#/definitions/itemUpdateWAREHOUSEINFOITEMWAREHOUSEINFO"
        }
      },
      "type": "object"
    },
    "unitOfMeasuresByIdUOMDETAILSUomdetail": {
      "properties": {
        "ABBREVIATION": {
          "type": "string"
        },
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPNAME": {
          "type": "string",
          "x-samplevalue": "Count"
        },
        "GRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ISBASE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NUMDECIMALS": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Dozen"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "uomdetail",
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqExternalapprovedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.year}"
        }
      },
      "title": "externalapprovedon",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/orderEntryTransactionDefinitionsByIdAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "AR_ACCOUNTS",
      "type": "object"
    },
    "unitOfMeasuresListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "INVUOM": {
          "type": "string",
          "x-displayName": "INVUOM",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ISSYSTEM": {
          "type": "boolean",
          "x-displayName": "ISSYSTEM",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Count",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OEUOM": {
          "type": "string",
          "x-displayName": "OEUOM",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "POUOM": {
          "type": "string",
          "x-displayName": "POUOM",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UOMDETAILS": {
          "$ref": "#/definitions/unitOfMeasuresListUOMDETAILS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "billsPaymentsGetById": {
      "properties": {
        "ACKMESSAGEKEY": {
          "type": "string",
          "x-displayName": "ACKMESSAGEKEY"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:22:35Z"
        },
        "BANKACKNOWLEDGED": {
          "type": "string",
          "x-displayName": "BANKACKNOWLEDGED"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string"
        },
        "BATCHTITLE": {
          "type": "string",
          "x-displayName": "BATCHTITLE",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch"
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string",
          "x-displayName": "CLRDATE"
        },
        "CONFMESSAGEKEY": {
          "type": "string",
          "x-displayName": "CONFMESSAGEKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY"
        },
        "CUSTOMERDUE": {
          "type": "string",
          "x-displayName": "CUSTOMERDUE"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME"
        },
        "DELIVERYMETHOD": {
          "type": "string",
          "x-displayName": "DELIVERYMETHOD"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string"
        },
        "DOCUMENTNUMBER": {
          "type": "string",
          "x-displayName": "DOCUMENTNUMBER"
        },
        "FINANCIALACCOUNT": {
          "type": "string",
          "x-displayName": "FINANCIALACCOUNT"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA"
        },
        "MEMO": {
          "type": "string",
          "x-displayName": "MEMO",
          "x-samplevalue": "Rent 2015 Location 120"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP"
        },
        "NR_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TOTALENTERED",
          "x-samplevalue": 0
        },
        "NR_TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TRX_TOTALENTERED",
          "x-samplevalue": 0
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": false
        },
        "PAYMENTAMOUNT": {
          "format": "double",
          "type": "number",
          "x-displayName": "PAYMENTAMOUNT",
          "x-samplevalue": 6850.62
        },
        "PAYMENTDATE": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "PAYMENTTRXAMOUNT": {
          "format": "double",
          "type": "number",
          "x-displayName": "PAYMENTTRXAMOUNT",
          "x-samplevalue": 6850.62
        },
        "PAYMENTTYPE": {
          "type": "string",
          "x-displayName": "PAYMENTTYPE"
        },
        "POSTINGDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "POSTINGDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 1
        },
        "PRENTRY": {
          "$ref": "#/definitions/paymentsListPRENTRY"
        },
        "PRXBATCHKEY": {
          "type": "string",
          "x-displayName": "PRXBATCHKEY"
        },
        "RECEIPTDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "RECEIPTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        },
        "RECON_DATE": {
          "type": "string",
          "x-displayName": "RECON_DATE"
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "VI0001"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pi"
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "A"
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "T"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMKEY",
          "x-samplevalue": 3
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "Net 30"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 6850.62
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0
        },
        "TRXTOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRXTOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-samplevalue": "V20008"
        },
        "VENDORACCTNOKEY": {
          "type": "string",
          "x-displayName": "VENDORACCTNOKEY"
        },
        "WHENBANKCONFIRMED": {
          "type": "string",
          "x-displayName": "WHENBANKCONFIRMED"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-displayName": "WHENDISCOUNT"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "DebitMemoListAPADJUSTMENTITEMSApadjustmentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 96
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6220
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Office Supplies"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -100
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DETAILID": {
          "type": "string"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-15"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6220
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Office Supplies"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Payable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3051
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12296
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pa"
        },
        "RGLDIM169562_10008": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -100
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20003
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "classGroupsByIdMEMBERS": {
      "properties": {
        "classgrpmember": {
          "$ref": "#/definitions/classGroupsByIdMEMBERSClassgrpmember"
        }
      },
      "title": "MEMBERS",
      "type": "object"
    },
    "locationGroupsListMEMBERS": {
      "properties": {
        "locationgrpmember": {
          "$ref": "#/definitions/locationGroupsListMEMBERSLocationgrpmember"
        }
      },
      "type": "object"
    },
    "warehousesGetByIdCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "33Across"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "warehousesPostLOC": {
      "properties": {
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "L1234"
        }
      },
      "title": "LOC",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReq": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "billto": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqBillto"
        },
        "createdfrom": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerponumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqCustomfields"
        },
        "datecreated": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqDateposted"
        },
        "documentno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "exchratedate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqExchratedate"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacypatchReqNeedByDate"
        },
        "origdocdate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqOrigdocdate"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shippingmethod": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipto": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqShipto"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "taxsolutionid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "termname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "trackingnumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updatesotransitems": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitems"
        },
        "updatesubtotals": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesubtotals"
        },
        "vsoepricelist": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "OrdersEntryTransactionLegacyPatchReq",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "locationsGetByIdIERECEIVABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "title": "IERECEIVABLE",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemRevrecstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "revrecstartdate",
      "type": "object"
    },
    "ledgerAccountsAdvancedPATCHRequest": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-conditionally-required-description": "Required if RECORDNO is not given",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160"
        },
        "ACCOUNTTYPE": {
          "type": "string",
          "x-alias": "accCategory",
          "x-displayName": "ACCOUNTTYPE",
          "x-samplevalue": "incomestatement"
        },
        "ALTERNATIVEACCOUNT": {
          "type": "string",
          "x-displayName": "ALTERNATIVEACCOUNT",
          "x-samplevalue": "None"
        },
        "CATEGORY": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "CATEGORY",
          "x-samplevalue": "Finance Charges Expense"
        },
        "CLOSINGACCOUNTNO": {
          "format": "int64",
          "type": "integer",
          "x-displayName": "CLOSINGACCOUNTNO",
          "x-samplevalue": 3100
        },
        "CLOSINGTYPE": {
          "type": "string",
          "x-displayName": "CLOSINGTYPE",
          "x-samplevalue": "closing account"
        },
        "NORMALBALANCE": {
          "type": "string",
          "x-alias": "tranType",
          "x-displayName": "NORMALBALANCE",
          "x-samplevalue": "credit"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "id",
          "x-conditionally-required-description": "Required if ACCOUNTNO is not given",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2"
        },
        "REQUIRECLASS": {
          "type": "boolean",
          "x-displayName": "REQUIRECLASS",
          "x-samplevalue": false
        },
        "REQUIRECONTRACT": {
          "type": "boolean",
          "x-displayName": "REQUIRECONTRACT",
          "x-samplevalue": false
        },
        "REQUIRECUSTOMER": {
          "type": "boolean",
          "x-displayName": "REQUIRECUSTOMER",
          "x-samplevalue": false
        },
        "REQUIREDEPT": {
          "type": "boolean",
          "x-alias": "requireDept",
          "x-displayName": "REQUIREDEPT",
          "x-samplevalue": false
        },
        "REQUIREEMPLOYEE": {
          "type": "boolean",
          "x-displayName": "REQUIREEMPLOYEE",
          "x-samplevalue": false
        },
        "REQUIREGLDIM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "REQUIREITEM": {
          "type": "boolean",
          "x-displayName": "REQUIREITEM",
          "x-samplevalue": false
        },
        "REQUIRELOC": {
          "type": "boolean",
          "x-alias": "requireLoc",
          "x-displayName": "REQUIRELOC",
          "x-samplevalue": false
        },
        "REQUIREPROJECT": {
          "type": "boolean",
          "x-displayName": "REQUIREPROJECT",
          "x-samplevalue": false
        },
        "REQUIREVENDOR": {
          "type": "boolean",
          "x-displayName": "REQUIREVENDOR",
          "x-samplevalue": false
        },
        "REQUIREWAREHOUSE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "active"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "accName",
          "x-displayName": "TITLE",
          "x-samplevalue": "Satish"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "journalsListUSERINFO": {
      "properties": {
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "admin"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdSUBTOTALS": {
      "properties": {
        "sorecursubtotals": {
          "items": {
            "$ref": "#/definitions/recurringOrderEntryTransactionsByIdSUBTOTALSSorecursubtotals"
          },
          "type": "array"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "vendorsListCONTACTTO1099MAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosGetByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosGetByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/creditMemosGetByIdSHIPTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "creditMemosGetByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 796
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "vendorTypesById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "vendorTypesById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099BOX"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099TYPE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Utilities",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENT": {
          "$ref": "#/definitions/vendorTypesListPARENT"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "vendorsListObject": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-displayName": "ACCOUNTLABELKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "AMEX_BANK_ACCOUNT_ADDRESS_ID": {
          "type": "string",
          "x-displayName": "AMEX_BANK_ACCOUNT_ADDRESS_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AMEX_BANK_ACCOUNT_ID": {
          "type": "string",
          "x-displayName": "AMEX_BANK_ACCOUNT_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "APACCOUNT": {
          "type": "string",
          "x-displayName": "APACCOUNT",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "APACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "APACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-displayName": "BILLINGTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CARDSTATE": {
          "type": "string",
          "x-displayName": "CARDSTATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CHECKENABLED": {
          "type": "boolean",
          "x-displayName": "CHECKENABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "COMMENTS": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/vendorsListCONTACTINFO"
        },
        "CONTACTKEY1099": {
          "type": "string",
          "x-displayName": "CONTACTKEY1099",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACTTO1099": {
          "$ref": "#/definitions/vendorsListCONTACTTO1099"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/vendorsListDISPLAYCONTACT"
        },
        "DISPLAYCONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DISPLAYCONTACTKEY",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DISPLAYTERMDISCOUNT": {
          "type": "string",
          "x-displayName": "DISPLAYTERMDISCOUNT",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISPLOCACCTNOCHECK": {
          "type": "boolean",
          "x-displayName": "DISPLOCACCTNOCHECK",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DONOTCUTCHECK": {
          "type": "string",
          "x-displayName": "DONOTCUTCHECK",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "V20001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILEPAYMENTSERVICE": {
          "type": "string",
          "x-displayName": "FILEPAYMENTSERVICE",
          "x-samplevalue": "NONE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGRPKEY": {
          "type": "string",
          "x-displayName": "GLGRPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ISOWNER": {
          "type": "boolean",
          "x-displayName": "ISOWNER",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "OEPRCLSTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTNOTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNOTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ONETIME": {
          "type": "string",
          "x-displayName": "ONETIME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ONHOLD": {
          "type": "string",
          "x-displayName": "ONHOLD",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OUTSOURCEACH": {
          "type": "boolean",
          "x-displayName": "OUTSOURCEACH",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OUTSOURCEACHSTATE": {
          "type": "string",
          "x-displayName": "OUTSOURCEACHSTATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OUTSOURCECARD": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECARD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OUTSOURCECARDOVERRIDE": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECARDOVERRIDE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OUTSOURCECHECK": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECHECK",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "OUTSOURCECHECKSTATE": {
          "type": "string",
          "x-displayName": "OUTSOURCECHECKSTATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OWNER": {
          "$ref": "#/definitions/vendorsListOWNER"
        },
        "PARENTID": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-alias": "parent.name",
          "x-displayName": "PARENTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYDATEVALUE": {
          "type": "string",
          "x-displayName": "PAYDATEVALUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-displayName": "PAYMENTPRIORITY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMETHODREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMETHODREC",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYTO": {
          "$ref": "#/definitions/vendorsListPAYTO"
        },
        "PAYTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "PAYTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PMPLUSEMAIL": {
          "type": "string",
          "x-displayName": "PMPLUSEMAIL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PMPLUSFAX": {
          "type": "string",
          "x-displayName": "PMPLUSFAX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PMPLUSREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "PMPLUSREMITTANCETYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICELIST": {
          "type": "string",
          "x-displayName": "PRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-displayName": "PRICESCHEDULE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRIMARYCONTACTKEY": {
          "type": "string",
          "x-displayName": "PRIMARYCONTACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "R10047": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "R10047",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RDEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RDEPARTMENT",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3722,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RETURNTO": {
          "$ref": "#/definitions/vendorsListRETURNTO"
        },
        "RETURNTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "RETURNTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMSKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMSKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMVALUE": {
          "type": "string",
          "x-displayName": "TERMVALUE",
          "x-samplevalue": "::#30#:O:",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 183,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORACCOUNTNO": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTNO",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORACCOUNTOUTSOURCEACH": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTOUTSOURCEACH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORACCTNOKEY": {
          "type": "string",
          "x-displayName": "VENDORACCTNOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORACHACCOUNTID": {
          "type": "string",
          "x-displayName": "VENDORACHACCOUNTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDOR_AMEX_CARD_AFFILIATE_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_CARD_AFFILIATE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDOR_AMEX_CD_AFFILIATE_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_CD_AFFILIATE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDOR_AMEX_ORGANIZATION_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_ORGANIZATION_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDOR_AMEX_ORG_ADDRESS_ID": {
          "type": "string",
          "x-displayName": "VENDOR_AMEX_ORG_ADDRESS_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "VENDTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDTYPE1099TYPE": {
          "type": "string",
          "x-displayName": "VENDTYPE1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDTYPEKEY",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WIREACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "WIREACCOUNTNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WIREACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "WIREACCOUNTTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WIREBANKNAME": {
          "type": "string",
          "x-displayName": "WIREBANKNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WIREBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "WIREBANKROUTINGNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WIREENABLED": {
          "type": "boolean",
          "x-displayName": "WIREENABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "2305--Deferred Revenue Contra"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Deferred Revenue Contra"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "AP/AR"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLARADJUSTMENTITEMS": {
      "properties": {
        "aradjustmentitem": {
          "items": {
            "$ref": "#/definitions/creditMemosAdvancedGETALLARADJUSTMENTITEMSAradjustmentitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "achBankConfigurationsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "achBankConfigurationsById",
      "type": "object",
      "properties": {
        "ACHBANKID": {
          "type": "string",
          "x-samplevalue": "100SVB",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACHBANKID"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESTINATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 121140399,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESTINATIONID"
        },
        "DESTINATIONNAME": {
          "type": "string",
          "x-samplevalue": "Silicon Valley Bank",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESTINATIONNAME"
        },
        "EOFMARKER": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EOFMARKER"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "ORIGINID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1928374650,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ORIGINID"
        },
        "ORIGINNAME": {
          "type": "string",
          "x-samplevalue": "NewCo",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ORIGINNAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REFERENCECODE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REFERENCECODE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "employeesListCONTACT_LIST_INFOEmployeeentitycontactsCONTACT": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Yeganeh, Selma"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententrySHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "exchangeRateObjectById": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "FROM_CURRENCY": {
          "type": "string",
          "x-samplevalue": "INR"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "TO_CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "TYPENAME": {
          "type": "string",
          "x-samplevalue": "Testpollupdate"
        },
        "TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "09/27/2019 03:14:55"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "09/27/2019 03:14:55"
        }
      },
      "title": "exchangeRateObjectById",
      "x-has-customfields": "false",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "inventoryTransactionsListsSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "chargeCardAccountsListMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "21 Drydock Ave"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Boston"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "MA"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "02110"
        }
      },
      "type": "object"
    },
    "apBillsPostReqAPBILLITEMS": {
      "properties": {
        "APBILLITEM": {
          "items": {
            "$ref": "#/definitions/apBillsPostReqAPBILLITEMSAPBILLITEM"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "employeesListCONTACT_LIST_INFOEmployeeentitycontactsEMPLOYEE": {
      "properties": {
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        }
      },
      "type": "object"
    },
    "expenseReportsById": {
      "properties": {
        "ACKMESSAGEKEY": {
          "type": "string"
        },
        "APPROVEDBY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z"
        },
        "BANKACKNOWLEDGED": {
          "type": "string"
        },
        "BANKFILEKEY": {
          "type": "string"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BATCHCREATED": {
          "type": "string",
          "x-samplevalue": "12/07/2016"
        },
        "BATCHNAME": {
          "type": "string",
          "x-samplevalue": "Expenses - 100: 2017/08/22 13:32:28:8592 Batch"
        },
        "BILLBACKTEMPLATEKEY": {
          "type": "string"
        },
        "BILLTOPAYTOKEY": {
          "type": "string"
        },
        "CHECKFORMAT": {
          "type": "string"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string"
        },
        "COMMENTS": {
          "type": "string"
        },
        "CONFMESSAGEKEY": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTENTITY": {
          "type": "string"
        },
        "CUSTFIELD1": {
          "type": "string"
        },
        "CUSTFIELD10": {
          "type": "string"
        },
        "CUSTFIELD100": {
          "type": "string"
        },
        "CUSTFIELD11": {
          "type": "string"
        },
        "CUSTFIELD12": {
          "type": "string"
        },
        "CUSTFIELD13": {
          "type": "string"
        },
        "CUSTFIELD14": {
          "type": "string"
        },
        "CUSTFIELD15": {
          "type": "string"
        },
        "CUSTFIELD16": {
          "type": "string"
        },
        "CUSTFIELD17": {
          "type": "string"
        },
        "CUSTFIELD18": {
          "type": "string"
        },
        "CUSTFIELD19": {
          "type": "string"
        },
        "CUSTFIELD2": {
          "type": "string"
        },
        "CUSTFIELD20": {
          "type": "string"
        },
        "CUSTFIELD21": {
          "type": "string"
        },
        "CUSTFIELD22": {
          "type": "string"
        },
        "CUSTFIELD23": {
          "type": "string"
        },
        "CUSTFIELD24": {
          "type": "string"
        },
        "CUSTFIELD25": {
          "type": "string"
        },
        "CUSTFIELD26": {
          "type": "string"
        },
        "CUSTFIELD27": {
          "type": "string"
        },
        "CUSTFIELD28": {
          "type": "string"
        },
        "CUSTFIELD29": {
          "type": "string"
        },
        "CUSTFIELD3": {
          "type": "string"
        },
        "CUSTFIELD30": {
          "type": "string"
        },
        "CUSTFIELD31": {
          "type": "string"
        },
        "CUSTFIELD32": {
          "type": "string"
        },
        "CUSTFIELD33": {
          "type": "string"
        },
        "CUSTFIELD34": {
          "type": "string"
        },
        "CUSTFIELD35": {
          "type": "string"
        },
        "CUSTFIELD36": {
          "type": "string"
        },
        "CUSTFIELD37": {
          "type": "string"
        },
        "CUSTFIELD38": {
          "type": "string"
        },
        "CUSTFIELD39": {
          "type": "string"
        },
        "CUSTFIELD4": {
          "type": "string"
        },
        "CUSTFIELD40": {
          "type": "string"
        },
        "CUSTFIELD41": {
          "type": "string"
        },
        "CUSTFIELD42": {
          "type": "string"
        },
        "CUSTFIELD43": {
          "type": "string"
        },
        "CUSTFIELD44": {
          "type": "string"
        },
        "CUSTFIELD45": {
          "type": "string"
        },
        "CUSTFIELD46": {
          "type": "string"
        },
        "CUSTFIELD47": {
          "type": "string"
        },
        "CUSTFIELD48": {
          "type": "string"
        },
        "CUSTFIELD49": {
          "type": "string"
        },
        "CUSTFIELD5": {
          "type": "string"
        },
        "CUSTFIELD50": {
          "type": "string"
        },
        "CUSTFIELD51": {
          "type": "string"
        },
        "CUSTFIELD52": {
          "type": "string"
        },
        "CUSTFIELD53": {
          "type": "string"
        },
        "CUSTFIELD54": {
          "type": "string"
        },
        "CUSTFIELD55": {
          "type": "string"
        },
        "CUSTFIELD56": {
          "type": "string"
        },
        "CUSTFIELD57": {
          "type": "string"
        },
        "CUSTFIELD58": {
          "type": "string"
        },
        "CUSTFIELD59": {
          "type": "string"
        },
        "CUSTFIELD6": {
          "type": "string"
        },
        "CUSTFIELD60": {
          "type": "string"
        },
        "CUSTFIELD61": {
          "type": "string"
        },
        "CUSTFIELD62": {
          "type": "string"
        },
        "CUSTFIELD63": {
          "type": "string"
        },
        "CUSTFIELD64": {
          "type": "string"
        },
        "CUSTFIELD65": {
          "type": "string"
        },
        "CUSTFIELD66": {
          "type": "string"
        },
        "CUSTFIELD67": {
          "type": "string"
        },
        "CUSTFIELD68": {
          "type": "string"
        },
        "CUSTFIELD69": {
          "type": "string"
        },
        "CUSTFIELD7": {
          "type": "string"
        },
        "CUSTFIELD70": {
          "type": "string"
        },
        "CUSTFIELD71": {
          "type": "string"
        },
        "CUSTFIELD72": {
          "type": "string"
        },
        "CUSTFIELD73": {
          "type": "string"
        },
        "CUSTFIELD74": {
          "type": "string"
        },
        "CUSTFIELD75": {
          "type": "string"
        },
        "CUSTFIELD76": {
          "type": "string"
        },
        "CUSTFIELD77": {
          "type": "string"
        },
        "CUSTFIELD78": {
          "type": "string"
        },
        "CUSTFIELD79": {
          "type": "string"
        },
        "CUSTFIELD8": {
          "type": "string"
        },
        "CUSTFIELD80": {
          "type": "string"
        },
        "CUSTFIELD81": {
          "type": "string"
        },
        "CUSTFIELD82": {
          "type": "string"
        },
        "CUSTFIELD83": {
          "type": "string"
        },
        "CUSTFIELD84": {
          "type": "string"
        },
        "CUSTFIELD85": {
          "type": "string"
        },
        "CUSTFIELD86": {
          "type": "string"
        },
        "CUSTFIELD87": {
          "type": "string"
        },
        "CUSTFIELD88": {
          "type": "string"
        },
        "CUSTFIELD89": {
          "type": "string"
        },
        "CUSTFIELD9": {
          "type": "string"
        },
        "CUSTFIELD90": {
          "type": "string"
        },
        "CUSTFIELD91": {
          "type": "string"
        },
        "CUSTFIELD92": {
          "type": "string"
        },
        "CUSTFIELD93": {
          "type": "string"
        },
        "CUSTFIELD94": {
          "type": "string"
        },
        "CUSTFIELD95": {
          "type": "string"
        },
        "CUSTFIELD96": {
          "type": "string"
        },
        "CUSTFIELD97": {
          "type": "string"
        },
        "CUSTFIELD98": {
          "type": "string"
        },
        "CUSTFIELD99": {
          "type": "string"
        },
        "CUSTMESSAGEID": {
          "type": "string"
        },
        "DELIVERYMETHOD": {
          "type": "string"
        },
        "DEPTKEY": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Lunch with client (non-billable)"
        },
        "DESCRIPTION2": {
          "type": "string"
        },
        "DOCNUMBER": {
          "type": "string"
        },
        "EEXPENSESITEMS": {
          "$ref": "#/definitions/expenseReportsByIdEEXPENSESITEMS"
        },
        "EMPENTITY": {
          "type": "string",
          "x-samplevalue": "E176"
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "FINANCIALENTITY": {
          "type": "string"
        },
        "HASPOSTEDREVREC": {
          "type": "string"
        },
        "HEADER_CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10075--Capsule"
        },
        "HEADER_EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "HEADER_ITEMID": {
          "type": "string",
          "x-samplevalue": "420--Billable Expenses"
        },
        "HEADER_PROJECTID": {
          "type": "string",
          "x-samplevalue": "1004--Capsule Customization"
        },
        "IMPLIEDLOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "INCLUSIVETAX": {
          "type": "string"
        },
        "ITEMS": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "LOCENTITY": {
          "type": "string"
        },
        "MAXPAYACTDATE": {
          "type": "string"
        },
        "MAX_LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "6.EE"
        },
        "NOGL": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "NR_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NR_TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ONHOLD": {
          "type": "string"
        },
        "PARENTPAYMENT": {
          "type": "string"
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "PAYMETHODKEY": {
          "type": "string"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1497
        },
        "PRXBATCHKEY": {
          "type": "string"
        },
        "RECON_DATE": {
          "type": "string"
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "ER0002"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ei"
        },
        "RECPAYMENTDATE": {
          "type": "string"
        },
        "REL1": {
          "type": "string"
        },
        "REL10": {
          "type": "string"
        },
        "REL100": {
          "type": "string"
        },
        "REL11": {
          "type": "string"
        },
        "REL12": {
          "type": "string"
        },
        "REL13": {
          "type": "string"
        },
        "REL14": {
          "type": "string"
        },
        "REL15": {
          "type": "string"
        },
        "REL16": {
          "type": "string"
        },
        "REL17": {
          "type": "string"
        },
        "REL18": {
          "type": "string"
        },
        "REL19": {
          "type": "string"
        },
        "REL2": {
          "type": "string"
        },
        "REL20": {
          "type": "string"
        },
        "REL21": {
          "type": "string"
        },
        "REL22": {
          "type": "string"
        },
        "REL23": {
          "type": "string"
        },
        "REL24": {
          "type": "string"
        },
        "REL25": {
          "type": "string"
        },
        "REL26": {
          "type": "string"
        },
        "REL27": {
          "type": "string"
        },
        "REL28": {
          "type": "string"
        },
        "REL29": {
          "type": "string"
        },
        "REL3": {
          "type": "string"
        },
        "REL30": {
          "type": "string"
        },
        "REL31": {
          "type": "string"
        },
        "REL32": {
          "type": "string"
        },
        "REL33": {
          "type": "string"
        },
        "REL34": {
          "type": "string"
        },
        "REL35": {
          "type": "string"
        },
        "REL36": {
          "type": "string"
        },
        "REL37": {
          "type": "string"
        },
        "REL38": {
          "type": "string"
        },
        "REL39": {
          "type": "string"
        },
        "REL4": {
          "type": "string"
        },
        "REL40": {
          "type": "string"
        },
        "REL41": {
          "type": "string"
        },
        "REL42": {
          "type": "string"
        },
        "REL43": {
          "type": "string"
        },
        "REL44": {
          "type": "string"
        },
        "REL45": {
          "type": "string"
        },
        "REL46": {
          "type": "string"
        },
        "REL47": {
          "type": "string"
        },
        "REL48": {
          "type": "string"
        },
        "REL49": {
          "type": "string"
        },
        "REL5": {
          "type": "string"
        },
        "REL50": {
          "type": "string"
        },
        "REL51": {
          "type": "string"
        },
        "REL52": {
          "type": "string"
        },
        "REL53": {
          "type": "string"
        },
        "REL54": {
          "type": "string"
        },
        "REL55": {
          "type": "string"
        },
        "REL56": {
          "type": "string"
        },
        "REL57": {
          "type": "string"
        },
        "REL58": {
          "type": "string"
        },
        "REL59": {
          "type": "string"
        },
        "REL6": {
          "type": "string"
        },
        "REL60": {
          "type": "string"
        },
        "REL61": {
          "type": "string"
        },
        "REL62": {
          "type": "string"
        },
        "REL63": {
          "type": "string"
        },
        "REL64": {
          "type": "string"
        },
        "REL65": {
          "type": "string"
        },
        "REL66": {
          "type": "string"
        },
        "REL67": {
          "type": "string"
        },
        "REL68": {
          "type": "string"
        },
        "REL69": {
          "type": "string"
        },
        "REL7": {
          "type": "string"
        },
        "REL70": {
          "type": "string"
        },
        "REL71": {
          "type": "string"
        },
        "REL72": {
          "type": "string"
        },
        "REL73": {
          "type": "string"
        },
        "REL74": {
          "type": "string"
        },
        "REL75": {
          "type": "string"
        },
        "REL76": {
          "type": "string"
        },
        "REL77": {
          "type": "string"
        },
        "REL78": {
          "type": "string"
        },
        "REL79": {
          "type": "string"
        },
        "REL8": {
          "type": "string"
        },
        "REL80": {
          "type": "string"
        },
        "REL81": {
          "type": "string"
        },
        "REL82": {
          "type": "string"
        },
        "REL83": {
          "type": "string"
        },
        "REL84": {
          "type": "string"
        },
        "REL85": {
          "type": "string"
        },
        "REL86": {
          "type": "string"
        },
        "REL87": {
          "type": "string"
        },
        "REL88": {
          "type": "string"
        },
        "REL89": {
          "type": "string"
        },
        "REL9": {
          "type": "string"
        },
        "REL90": {
          "type": "string"
        },
        "REL91": {
          "type": "string"
        },
        "REL92": {
          "type": "string"
        },
        "REL93": {
          "type": "string"
        },
        "REL94": {
          "type": "string"
        },
        "REL95": {
          "type": "string"
        },
        "REL96": {
          "type": "string"
        },
        "REL97": {
          "type": "string"
        },
        "REL98": {
          "type": "string"
        },
        "REL99": {
          "type": "string"
        },
        "REQUESTID": {
          "type": "string",
          "x-samplevalue": "e979028bea437c14c6dc8a89bc320979"
        },
        "SCHOPKEY": {
          "type": "string"
        },
        "SHIPTORETURNTOKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "1004IN"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "type": "string"
        },
        "TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "VENDENTITY": {
          "type": "string"
        },
        "VENDORACCTNOKEY": {
          "type": "string"
        },
        "VERSION": {
          "type": "string",
          "x-samplevalue": "2017/08/22 13:32:28.755334000"
        },
        "WHENAPPROVED": {
          "type": "string",
          "x-samplevalue": "08/22/2017"
        },
        "WHENBANKCONFIRMED": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07"
        },
        "WHENDISCOUNT": {
          "type": "string"
        },
        "WHENDUE": {
          "type": "string"
        },
        "WHENMODIFIED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-08-22"
        },
        "WHENPAID": {
          "type": "string"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07"
        }
      },
      "title": "expenseReportsById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "inventoryTransactionDefinationsListObject": {
      "properties": {
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Receipt",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Warehouse",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-samplevalue": "WH1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Beginning Balance",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Beginning Balance",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListENTITY_PROPS"
        },
        "FIXED_MESG": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "RECALLS": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Internal"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "INBB"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListSUBTOTALS"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TOTALS": {
          "$ref": "#/definitions/inventoryTransactionDefinationsListTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "G"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity and Value"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Use the default warehouse"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-21T05:11:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-21T05:11:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "contractGetByIdBILLTO": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "newClass": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "C1234"
        },
        "CUSTOMFIELDS": {
          "type": "string",
          "x-samplevalue": "#"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "DESC"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "hello world"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "12"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        }
      },
      "required": [
        "CLASSID",
        "NAME"
      ],
      "title": "newClass",
      "type": "object"
    },
    "updateArAccountLabel": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "GLACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "4010"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "title": "updateArAccountLabel",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "recurringOrderEntryTransactionsCONTACT": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionEntriesByIDITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "title": "RENEWALMACRO",
      "type": "object"
    },
    "entitiesListCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqExecutedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{executedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{executedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{executedon.year}"
        }
      },
      "title": "executedon",
      "type": "object"
    },
    "employeesListEMPLOYEE_POSITIONSKILLEmployeepositionskill": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        },
        "EMPLOYEEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 194
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "POSITIONSKILLKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "POSITIONSKILLNAME": {
          "type": "string",
          "x-samplevalue": "Consultant"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 24
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsListRETURNTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "exchangeRateCreateEXCHANGERATEENTRIESEXCHANGERATEENTRY": {
      "properties": {
        "EFFECTIVE_START_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECIPROCAL_RATE": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "EXCHANGERATEENTRY",
      "type": "object"
    },
    "patchAllocationsResp": {
      "properties": {
        "ALLOCATIONID": {
          "type": "string",
          "x-samplevalue": "95333"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "8"
        }
      },
      "title": "patchAllocationsResp",
      "type": "object",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ALLOCATION"
    },
    "foldersGetByIdResResponseOperationResultDataSupdocfolder": {
      "properties": {
        "createdby": {
          "type": "string",
          "x-samplevalue": "emma"
        },
        "creationdate": {
          "type": "string",
          "x-samplevalue": "06/25/2018"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "churros test case"
        },
        "lastmodified": {
          "type": "string",
          "x-samplevalue": "06/25/2018"
        },
        "lastmodifiedby": {
          "type": "string",
          "x-samplevalue": "emma"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cloned"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "title": "supdocfolder",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqRECALLS": {
      "properties": {
        "RECALL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqRECALLSRECALL"
          },
          "type": "array"
        }
      },
      "title": "RECALLS",
      "type": "object"
    },
    "locationsListSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "1740 Wazee St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 80202
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "userGroupsListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCR": {
          "type": "string",
          "x-displayName": "DESCR",
          "x-samplevalue": "Non Accounting Users",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Non Accounting Users",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "inventoryTransactionsListsHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsListsHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "vendorsGetByIDPAYTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsGetByIDPAYTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXGROUP": {
          "type": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "contractListDISPLAYCONTACT": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemNeedbydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{needbydate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{needbydate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{needbydate.year}"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDTOTALS": {
      "properties": {
        "TOTAL": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDTOTALSTOTAL"
        }
      },
      "title": "TOTALS",
      "type": "object"
    },
    "customersPATCHResponse": {
      "properties": {
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "123"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CUSTOMER",
      "type": "object"
    },
    "salesOrdersGetByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "customer.contact.firstName"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "customer.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersGetByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "customer.contact.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "salesOrdersListSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "locationUpdateLOCATIONCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Smith, John"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqTOTALSTOTAL": {
      "properties": {
        "Q_QV": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SIGN": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TOTALID": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "TOTAL",
      "type": "object"
    },
    "checkingAccountsByIdCHECKINFOCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "creditMemosGetByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosGetByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "CONTACT",
      "type": "object"
    },
    "inventoryControlPriceListsListObject": {
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATEFROM",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-displayName": "DATETO",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2100-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Base Price List",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-displayName": "SALEPURCHASE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "warehousesPatch": {
      "properties": {
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Stish"
            }
          },
          "$ref": "#/definitions/warehousesPostCONTACTINFO"
        },
        "ENABLE_REPLENISHMENT": {
          "default": true,
          "description": "Enable replenishment. Use true to enable, otherwise use false. (Default: true)",
          "type": "boolean",
          "x-samplevalue": true
        },
        "LOC": {
          "properties": {
            "LOCATIONID": {
              "type": "string",
              "x-samplevalue": "L1234"
            }
          },
          "$ref": "#/definitions/warehousesPostLOC"
        },
        "MANAGERID": {
          "description": "Manager employee ID",
          "type": "string",
          "x-reference-objectname": "employee",
          "x-samplevalue": "Penny, Emma"
        },
        "NAME": {
          "description": "Warehouse name",
          "type": "string",
          "x-name": true,
          "x-samplevalue": "Warehouse"
        },
        "PARENTID": {
          "description": "Parent warehouse ID",
          "type": "string",
          "x-reference-objectname": "warehouse",
          "x-samplevalue": "YK-WH"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Stish"
            }
          },
          "$ref": "#/definitions/warehousesPostSHIPTO"
        },
        "STATUS": {
          "default": "active",
          "description": "Warehouse status. Use active for Active otherwise use inactive for Inactive (Default: active)",
          "enum": [
            "active",
            "inactive"
          ],
          "type": "string",
          "x-samplevalue": "active"
        },
        "USEDINGL": {
          "default": true,
          "description": "Used in GL. Use false for No,true for Yes. (Default: true)",
          "type": "boolean",
          "x-samplevalue": true
        },
        "WAREHOUSEID": {
          "description": "Warehouse ID to create",
          "type": "string",
          "x-samplevalue": "YK-WH1"
        }
      },
      "title": "warehousesPatch",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "apBillsListAPBILLITEMS": {
      "properties": {
        "apbillitem": {
          "items": {
            "$ref": "#/definitions/apBillsListAPBILLITEMSApbillitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqReturnto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{returnto.contactname}"
        }
      },
      "title": "returnto",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqScheduledcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{scheduledcompletiondate.year}"
        }
      },
      "title": "scheduledcompletiondate",
      "type": "object"
    },
    "apAccountLabelsListObject": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL",
          "x-samplevalue": "0w78u42i",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFRRACCOUNTNO": {
          "type": "string",
          "x-displayName": "DEFRRACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFRRACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "DEFRRACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "3bbzugt7",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLACCOUNTNO",
          "x-samplevalue": 5332,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "GLACCOUNTTITLE",
          "x-samplevalue": "asdfasfaws",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ISTAX": {
          "type": "boolean",
          "x-displayName": "ISTAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 27,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "REVRECTEMPLKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECTEMPLTITLE": {
          "type": "string",
          "x-displayName": "REVRECTEMPLTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "type": "boolean",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXABLE": {
          "type": "boolean",
          "x-displayName": "TAXABLE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXAUTHORITYKEY": {
          "type": "string",
          "x-displayName": "TAXAUTHORITYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXCODE": {
          "type": "string",
          "x-displayName": "TAXCODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXGROUP": {
          "$ref": "#/definitions/apAccountLabelsListTAXGROUP"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "objectNamePatchReq": {
      "properties": {
        "objectField": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "objectNamePatchReq",
      "type": "object"
    },
    "checkingAccountsListCHECKLAYOUT": {
      "properties": {
        "BANKACCTALIGN": {
          "type": "string",
          "x-samplevalue": "right"
        },
        "CHECKNOLENGTH": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CHECKPAPERFORMAT": {
          "type": "string",
          "x-samplevalue": "top"
        },
        "CHECKPRINTFORMAT": {
          "type": "string",
          "x-samplevalue": "standard"
        },
        "COMPANY_LOGO": {
          "type": "string"
        },
        "DFLTCNYADDR": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DISPLAYLOCATIONAS": {
          "type": "string",
          "x-samplevalue": "id"
        },
        "MICRTRANSCODE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS32": {
          "type": "string",
          "x-samplevalue": "Position 31"
        },
        "PRINTCNYLOGO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PRINTLINEITEMS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SIGLINE2AMOUNT": {
          "type": "string"
        },
        "SIGNATUREIMAGE1": {
          "type": "string"
        },
        "SIGNATUREIMAGE2": {
          "type": "string"
        },
        "SPACESTOAPPEND": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "USDTEXT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USECNYADDRESS": {
          "type": "string",
          "x-samplevalue": "C"
        },
        "USESECONDSIGNATURECHECKS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USESIG1BELOWAMT": {
          "type": "string"
        },
        "USESIG2BELOWAMT": {
          "type": "string"
        },
        "VOIDTEXT": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUPINCOMEACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "objectNamePatchRes": {
      "properties": {
        "success": {
          "type": "string",
          "x-samplevalue": "true"
        }
      },
      "title": "objectNamePatchRes",
      "type": "object"
    },
    "creditCardFeesListCREDITCARDFEEENTRIESCreditcardfeeentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason"
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdPotransitems": {
      "properties": {
        "potransitem": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdPotransitemsPotransitem"
          },
          "type": "array"
        }
      },
      "title": "potransitems",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-displayName": "Month",
          "x-samplevalue": "07"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2019
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "postBillsPayments": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APPYMT",
      "type": "object"
    },
    "itemUpdateVENDORINFOITEMVENDOR": {
      "properties": {
        "ECONOMIC_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "FORECAST_DEMAND_IN_LEAD_TIME": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "LEAD_TIME": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "MIN_ORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "PREFERRED_VENDOR": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "STOCKNO": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VENDORID": {
          "type": "string",
          "x-alias": [
            {
              "alias": "vendor.id",
              "path": "VENDORINFO.ITEMVENDOR[*].VENDORID | [0]"
            }
          ],
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqBillto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "billto",
      "type": "object"
    },
    "DebitMemoByIdAPADJUSTMENTITEMS": {
      "properties": {
        "apadjustmentitem": {
          "items": {
            "$ref": "#/definitions/DebitMemoByIdAPADJUSTMENTITEMSApadjustmentitem"
          },
          "type": "array"
        }
      },
      "title": "APADJUSTMENTITEMS",
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "savingsAccountsGetAllRespCHECKINFOCONTACT": {
      "properties": {
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Sage Intacct"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "raju(Btestsaving)"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/savingsAccountsGetAllRespCHECKINFOCONTACTMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersPATCHRequestSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "entitiesByIdSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/entitiesByIdSHIPTOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "purchaseOrdersListTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemPromiseddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{promiseddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{promiseddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{promiseddate.year}"
        }
      },
      "title": "promiseddate",
      "type": "object"
    },
    "createAccountGroupGLACCTGRPSGLACCTGRPMEMBER": {
      "properties": {
        "CHILDNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "GLACCTGRPMEMBER",
      "type": "object"
    },
    "entitiesByIdLOCATIONENTITY": {
      "properties": {
        "LOCATIONTYPE": {
          "type": "string",
          "x-samplevalue": "N"
        }
      },
      "title": "LOCATIONENTITY",
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string",
          "x-samplevalue": "cewe"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Warehouse12"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{datecreated.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{datecreated.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{datecreated.year}"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "salesOrdersGetByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "billingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersGetByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "journalEntryPatchReqENTRIES": {
      "properties": {
        "GLENTRY": {
          "items": {
            "$ref": "#/definitions/journalEntryPatchReqENTRIESGLENTRY"
          },
          "type": "array"
        }
      },
      "title": "ENTRIES",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDonotshipafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipafterdate.year}"
        }
      },
      "title": "donotshipafterdate",
      "type": "object"
    },
    "createUser": {
      "properties": {
        "ADMIN": {
          "type": "string",
          "x-samplevalue": "false"
        },
        "CONTACTINFO": {
          "properties": {
            "EMAIL1": {
              "type": "string",
              "x-samplevalue": "jsmith@example.com",
              "x-sub-format": "email"
            },
            "FIRSTNAME": {
              "type": "string",
              "x-samplevalue": "Smith"
            },
            "LASTNAME": {
              "type": "string",
              "x-samplevalue": "John"
            }
          },
          "$ref": "#/definitions/createUserUSERINFOCONTACTINFO"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "John Smith"
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOGINID": {
          "type": "string",
          "x-samplevalue": "jsmith"
        },
        "SSO_ENABLED": {
          "type": "string",
          "x-samplevalue": "true"
        },
        "SSO_FEDERATED_ID": {
          "type": "string",
          "x-samplevalue": "jsmith"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "USERDEPARTMENTS": {
          "properties": {
            "DEPARTMENTID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/createUserUSERINFOUSERDEPARTMENTS"
        },
        "USERLOCATIONS": {
          "properties": {
            "LOCATIONID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/createUserUSERINFOUSERLOCATIONS"
        },
        "USERTERRITORIES": {
          "properties": {
            "TERRITORYID": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-samplevalue": [
                "",
                ""
              ]
            }
          },
          "$ref": "#/definitions/createUserUSERINFOUSERTERRITORIES"
        },
        "USERTYPE": {
          "type": "string",
          "x-samplevalue": "business user"
        }
      },
      "title": "createUser",
      "type": "object"
    },
    "InventoryTransactionLegacyGetByIdIctransitemsIctransitem": {
      "properties": {
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "customerid": {
          "type": "string"
        },
        "customfields": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "employeeid": {
          "type": "string"
        },
        "itemdesc": {
          "type": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "SAM001"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1536
        },
        "locationid": {
          "type": "string"
        },
        "projectid": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "taskid": {
          "type": "string"
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "cewe"
        }
      },
      "title": "ictransitem",
      "type": "object"
    },
    "vendorsListOWNER": {
      "properties": {
        "ACCOUNTLABEL": {
          "$ref": "#/definitions/vendorsListOWNERACCOUNTLABEL"
        },
        "EQGLACCOUNT": {
          "type": "string"
        },
        "EQGLACCOUNTLABEL": {
          "type": "string"
        },
        "HOLDDIST": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersListEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taxdetailsGetById": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Massachusetts Sales Tax"
        },
        "DETAILID": {
          "type": "string",
          "x-samplevalue": "MA-SalesTax"
        },
        "GLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2110
        },
        "INCLUDE": {
          "type": "string",
          "x-samplevalue": "Full Amount"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "MAXTAX": {
          "type": "string"
        },
        "MAXTAXABLE": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MINTAX": {
          "type": "string"
        },
        "MINTAXABLE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXAUTHORITY": {
          "type": "string",
          "x-samplevalue": "MADOR"
        },
        "TAXTYPE": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "TAXUID": {
          "type": "string"
        },
        "VALUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.25
        }
      },
      "title": "taxdetailsGetById",
      "x-primary-key": [
        "DETAILID"
      ],
      "x-vendor-objectname": "TAXDTAILS",
      "type": "object"
    },
    "itemUpdateLANDEDCOSTINFOITEMLANDEDCOST": {
      "properties": {
        "ACTIVE": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "METHOD": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "VALUE": {
          "type": "string",
          "x-alias": [
            {
              "alias": "landedCost",
              "path": "LANDEDCOSTINFO.ITEMLANDEDCOST[*].VALUE | [0]"
            }
          ],
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "exchratedateCMPost": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "31"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "03"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2010"
        }
      },
      "title": "exchratedateCMPost",
      "type": "object",
      "x-has-customfields": false
    },
    "apBillsGetById": {
      "properties": {
        "APBILLITEMS": {
          "$ref": "#/definitions/apBillsGetByIdAPBILLITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:29:12Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 998
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "DESCRIPTION2": {
          "type": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "string"
        },
        "DUE_IN_DAYS": {
          "type": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "string"
        },
        "EXCHRATE": {
          "type": "string"
        },
        "EXCHRATEDATE": {
          "type": "string"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "FINANCIALENTITY": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "INCLUSIVETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USARAJUTest"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "3.AP"
        },
        "ONHOLD": {
          "type": "boolean",
          "x-alias": "isOnHold",
          "x-samplevalue": true
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PAYTO": {
          "$ref": "#/definitions/apBillsGetByIdPAYTO"
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Verizon(V20028)"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "RECORDID": {
          "type": "string",
          "x-alias": "purchase-order.id",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "3055"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RECPAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Verizon(V20028)"
        },
        "RICKY_CUSTOM": {
          "type": "string"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 670
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 998
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "Paid"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": 3
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "string"
        },
        "TERMVALUE": {
          "type": "string",
          "x-samplevalue": "::#30#:O:"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 0
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": 3535.93
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_ENTITYDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 107669.3
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDOR": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "20028--Verizon Business"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "string"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Verizon Business"
        },
        "VENDTYPE1099TYPE": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-alias": "discountDate"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-11T17:09:04Z"
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-alias": "lastPaidDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-05-15"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "departmentGroupsByIdRes": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "departmentGroupsByIdRes",
      "type": "object",
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITION"
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITIONTYPE"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DIMGRPCOMP"
        },
        "GROUPTYPE": {
          "type": "string",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GROUPTYPE"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "Dept-Cost Centers",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ID"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEMBERFILTERS"
        },
        "MEMBERS": {
          "$ref": "#/definitions/departmentGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Cost Center Departments",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RESTRICTTO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESTRICTTO"
        },
        "SORTFIELD": {
          "type": "string",
          "x-samplevalue": "DEPARTMENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTFIELD"
        },
        "SORTORDER": {
          "type": "string",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTORDER"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqSubstantialcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.year}"
        }
      },
      "title": "substantialcompletiondate",
      "type": "object"
    },
    "warehousesPostSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Stish"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "AR_ACCOUNTS",
      "type": "object"
    },
    "inventoryTransactionsByIdHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "08/06/2019"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:42"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1546
        },
        "SOURCEDOCUMENTID": {
          "type": "string"
        }
      },
      "title": "dochistory",
      "type": "object"
    },
    "orderEntryTransactionsListsSUBTOTALS": {
      "properties": {
        "sodocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/orderEntryTransactionsListsSUBTOTALSSodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "projectsGetByIdCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatus": {
      "properties": {
        "deferralstatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "deliverydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusDeliverydate"
        },
        "deliverystatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "kitstatus": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusKitstatus"
        }
      },
      "title": "fulfillmentstatus",
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqSUBTOTALSSUBTOTAL"
          },
          "type": "array"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "orderEntryTransactionsListsTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "vendorsPatchReqRETURNTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "warehousesResponse": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "warehousesResponse",
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "WAREHOUSE",
      "type": "object"
    },
    "projectUpdatePROJECTSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "invoicesAdvancedListObject": {
      "properties": {
        "ARINVOICEITEMS": {
          "$ref": "#/definitions/invoicesAdvancedListARINVOICEITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "1970-01-01T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLBACKTEMPLATEKEY": {
          "type": "string",
          "x-displayName": "BILLBACKTEMPLATEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/invoicesAdvancedListBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOPAYTOCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLTOPAYTOKEY": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOPAYTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/invoicesAdvancedListCONTACT"
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTMESSAGE": {
          "$ref": "#/definitions/invoicesAdvancedListCUSTMESSAGE"
        },
        "CUSTMESSAGEID": {
          "type": "string",
          "x-displayName": "CUSTMESSAGEID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMER": {
          "type": "string",
          "x-displayName": "CUSTOMER",
          "x-samplevalue": "N2N001--n2N Commerce, Inc.",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "customer.id",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "N2N001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "n2N Commerce, Inc.",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "Print",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-displayName": "DESCRIPTION2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DUE_IN_DAYS": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DUE_IN_DAYS",
          "x-samplevalue": 3454,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENTRY": {
          "type": "string",
          "x-displayName": "ENTRY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-displayName": "EXCHANGE_RATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "type": "string",
          "x-displayName": "EXCHRATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-displayName": "HASPOSTEDREVREC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HIBEN": {
          "type": "string",
          "x-displayName": "HIBEN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "4.AR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "HISTORY - 2010-3-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDID",
          "x-samplevalue": 207948,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "ri",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RSEMINAR_REGISTRATION": {
          "type": "string",
          "x-displayName": "RSEMINAR_REGISTRATION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/invoicesAdvancedListSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTOCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTORETURNTOCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTORETURNTOKEY": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTORETURNTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMKEY": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-displayName": "TERMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-displayName": "TERMNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERMVALUE": {
          "type": "string",
          "x-displayName": "TERMVALUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 53389.7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 53389.7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountPaid",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_ENTITYDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "TRX_ENTITYDUE",
          "x-samplevalue": 53389.7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 53389.7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 53389.7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-displayName": "WHENDISCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-03-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-03-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrderEntryTransactionLegacyListObject": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "billto": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListBillto"
        },
        "createdfrom": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "customerid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1006,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "customerponumber": {
          "type": "string",
          "x-samplevalue": "34",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "customfields": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "datecreated": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListDateposted"
        },
        "dateprinted": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "documentnumber": {
          "type": "string",
          "x-samplevalue": "ARIN-2289",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "exchratedate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListExchratedate"
        },
        "exchratetype": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "exchratetypeid": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1241
        },
        "message": {
          "type": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyListNeedByDate"
        },
        "paymentstatus": {
          "type": "string",
          "x-samplevalue": "Open"
        },
        "project": {
          "type": "string"
        },
        "prrecordkey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4730
        },
        "referenceno": {
          "type": "string"
        },
        "shippingmethod": {
          "type": "string"
        },
        "shipto": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListShipto"
        },
        "sotransitems": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitems"
        },
        "subtotals": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSubtotals"
        },
        "supdocid": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "taxsolutionid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "termname": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "totaldue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "totalentered": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "totalpaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "trackingnumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "transactionid": {
          "type": "string",
          "x-samplevalue": "Sales Invoice-ARIN-2289",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "transactionstate": {
          "type": "string",
          "x-samplevalue": "Pending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "Sales Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "trx_totaldue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "trx_totalentered": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "trx_totalpaid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "vsoepricelist": {
          "type": "string",
          "x-samplevalue": "PL Name",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "whenmodified": {
          "type": "string",
          "x-samplevalue": "04/29/2019 16:33:27",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "title": "OrderEntryTransactionLegacyList",
      "type": "object",
      "x-primary-key": [
        "transactionid"
      ]
    },
    "InventoryTransactionLegacyListDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "06"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "08"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "billsPaymentsUpdateAPPYMTDETAILSAPPYMTDETAIL": {
      "properties": {
        "ADJUSTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADJUSTMENTENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADVANCEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADVANCEKEYENTRY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DISCOUNTDATE": {
          "format": "date-time",
          "type": "string",
          "x-alias": "lines[*].discountDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "INLINEENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "INLINEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "POSADJENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "POSADJKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].bill[*].id",
          "x-samplevalue": 0
        },
        "TRX_ADJUSTMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_INLINEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_POSTEDADVANCEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "updateFile": {
      "properties": {
        "attachments": {
          "$ref": "#/definitions/updateFileAttachments"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "My new descriptsion"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "9701769423"
        },
        "supdocname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updateFile",
      "type": "object"
    },
    "depositsRetrive": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-has-customfields": false,
      "title": "depositsRetrive",
      "type": "object",
      "x-vendor-objectname": "Depostis",
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-samplevalue": "04/20/2018 08:29:44",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED",
          "x-mask": "mm/dd/yyyy hh:mm:ss"
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "Teampay",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BANKNAME"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "CLEARED": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLEARED"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DEPOSITID": {
          "type": "string",
          "x-samplevalue": "Deposit Slip 04/20/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPOSITID"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "fff",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "Teampay",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FINANCIALENTITY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-samplevalue": "2873",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "s",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RAWSTATE"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "2861",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cd",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "RECORD_URL": {
          "type": "string",
          "x-samplevalue": "https:customer.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORD_URL"
        },
        "REVERSALDATE": {
          "format": "date",
          "type": "string",
          "x-samplevalue": "05/01/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSALDATE",
          "x-mask": "MM/dd/yyyy"
        },
        "REVERSALKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2873,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSALKEY"
        },
        "REVERSEDDATE": {
          "format": "date",
          "type": "string",
          "x-samplevalue": "05/01/2018",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSEDDATE",
          "x-mask": "MM/dd/yyyy"
        },
        "REVERSEDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSEDKEY"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Draft",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "TOTALENTERED": {
          "type": "string",
          "x-samplevalue": "1000",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-samplevalue": "1000",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED",
          "x-mask": "MM/dd/yyyy"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED",
          "x-mask": "mm/dd/yyyy hh:mm:ss"
        }
      }
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Purchase only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "createUserUSERINFOUSERDEPARTMENTS": {
      "properties": {
        "DEPARTMENTID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            "",
            ""
          ]
        }
      },
      "title": "USERDEPARTMENTS",
      "type": "object"
    },
    "salesOrdersListTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListTOTALS": {
      "properties": {
        "TOTAL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "classGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "classGroupsById",
      "type": "object",
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITION"
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONDITIONTYPE"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DIMGRPCOMP"
        },
        "GROUPTYPE": {
          "type": "string",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GROUPTYPE"
        },
        "ID": {
          "type": "string",
          "x-samplevalue": "Segment-Small",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ID"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEMBERFILTERS"
        },
        "MEMBERS": {
          "$ref": "#/definitions/classGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RESTRICTTO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESTRICTTO"
        },
        "SORTFIELD": {
          "type": "string",
          "x-samplevalue": "CLASSID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTFIELD"
        },
        "SORTORDER": {
          "type": "string",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SORTORDER"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "recurringBillsListAPRECURBILLENTRY": {
      "properties": {
        "aprecurbillentry": {
          "$ref": "#/definitions/recurringBillsListAPRECURBILLENTRYAprecurbillentry"
        }
      },
      "type": "object"
    },
    "createApAccountLabel": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "Travel Expenses"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Travel Expenses"
        },
        "GLACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "6080"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "required": [
        "ACCOUNTLABEL",
        "DESCRIPTION",
        "GLACCOUNTNO"
      ],
      "title": "createApAccountLabel",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyListNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "purchaseOrdersListSUBTOTALSPodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        }
      },
      "type": "object"
    },
    "journalEntryPatchReq": {
      "properties": {
        "BASELOCATION_NO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BATCH_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BATCH_TITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRIES": {
          "$ref": "#/definitions/journalEntryPatchReqENTRIES"
        },
        "HISTORY_COMMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "REFERENCENO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "REVERSEDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXIMPLICATIONS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATCONTACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATCUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VATVENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "journalEntryPatchReq",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitems": {
      "properties": {
        "potransitem": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitem"
          },
          "type": "array"
        }
      },
      "title": "potransitems",
      "type": "object"
    },
    "inventoryTransactionsListsSUBTOTALS": {
      "properties": {
        "invdocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsListsSUBTOTALSInvdocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllPotransitemsPotransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetAllPotransitemsPotransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllPotransitemsPotransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-displayName": "Custom Field Name",
          "x-samplevalue": "GLDIMCHANNEL"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "locationsGetByIdIEPAYABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "title": "IEPAYABLE",
      "type": "object"
    },
    "employeesByIdEMPLOYEE_POSITIONSKILLEmployeepositionskill": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        },
        "EMPLOYEEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 194
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "POSITIONSKILLKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "POSITIONSKILLNAME": {
          "type": "string",
          "x-samplevalue": "Consultant"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 24
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "getAllocationsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "getAllocationsById",
      "type": "object",
      "properties": {
        "ALLOCATIONENTRIES": {
          "$ref": "#/definitions/allocationsListALLOCATIONENTRIES"
        },
        "ALLOCATIONID": {
          "type": "string",
          "x-displayName": "ALLOCATIONID",
          "x-samplevalue": "Department Allocation",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Department Allocation",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TYPE": {
          "type": "string",
          "x-displayName": "TYPE",
          "x-samplevalue": "Percentage",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      }
    },
    "inventoryTransactionDefinationsListINVGL_ACCOUNTSINVGL_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "1400--Inventory"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "Products"
        },
        "LINE_NO": {
          "type": "string"
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "INV"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "projectsGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "projectsGetById",
      "type": "object",
      "properties": {
        "ACTUALAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACTUALAMOUNT"
        },
        "ACTUALQTY": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 759.5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACTUALQTY"
        },
        "APPROVEDQTY": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 759.5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "APPROVEDQTY"
        },
        "BEGINDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BEGINDATE"
        },
        "BILLABLEAPPODEFAULT": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLABLEAPPODEFAULT"
        },
        "BILLABLEEXPDEFAULT": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLABLEEXPDEFAULT"
        },
        "BILLINGOVERMAX": {
          "type": "string",
          "x-samplevalue": "Do nothing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGOVERMAX"
        },
        "BILLINGPRICING": {
          "type": "string",
          "x-samplevalue": "Billing rate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGPRICING"
        },
        "BILLINGRATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGRATE"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGTYPE"
        },
        "BILLTO": {
          "$ref": "#/definitions/projectsListBILLTO"
        },
        "BILLTOKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOKEY"
        },
        "BUDGETAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETAMOUNT"
        },
        "BUDGETEDCOST": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETEDCOST"
        },
        "BUDGETID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETID"
        },
        "BUDGETKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETKEY"
        },
        "BUDGETQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETQTY"
        },
        "CLASSID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSID"
        },
        "CLASSKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSKEY"
        },
        "CLASSNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSNAME"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/projectsListCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTKEY"
        },
        "CONTRACTAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTAMOUNT"
        },
        "CONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID"
        },
        "CONTRACTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERKEY"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "CUSTUSERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTUSERID"
        },
        "CUSTUSERKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTUSERKEY"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPARTMENTID"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPARTMENTNAME"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Project for indirect time such as PTO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "ENDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENDDATE"
        },
        "ESTQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ESTQTY"
        },
        "EXCLUDEEXPENSES": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCLUDEEXPENSES"
        },
        "EXPENSEPRICING": {
          "type": "string",
          "x-samplevalue": "Cost plus fee",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSEPRICING"
        },
        "EXPENSERATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSERATE"
        },
        "INVOICECURRENCY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICECURRENCY"
        },
        "INVOICEMESSAGE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICEMESSAGE"
        },
        "INVOICEWITHPARENT": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVOICEWITHPARENT"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONID"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONNAME"
        },
        "MANAGERCONTACTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MANAGERCONTACTNAME"
        },
        "MANAGERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MANAGERID"
        },
        "MANAGERKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MANAGERKEY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "saisatish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "OAKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OAKEY"
        },
        "OBSPERCENTCOMPLETE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OBSPERCENTCOMPLETE"
        },
        "PARENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PARENTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTKEY"
        },
        "PARENTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTNAME"
        },
        "PERCENTCOMPLETE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PERCENTCOMPLETE"
        },
        "POAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POAMOUNT"
        },
        "POAPPRICING": {
          "type": "string",
          "x-samplevalue": "Cost plus fee",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POAPPRICING"
        },
        "POAPRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POAPRATE"
        },
        "PONUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PONUMBER"
        },
        "PQNUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PQNUMBER"
        },
        "PREVENTAPPO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PREVENTAPPO"
        },
        "PREVENTEXPENSE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PREVENTEXPENSE"
        },
        "PREVENTGENINVOICE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PREVENTGENINVOICE"
        },
        "PREVENTTIMESHEET": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PREVENTTIMESHEET"
        },
        "PROJECTCATEGORY": {
          "type": "string",
          "x-samplevalue": "Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTCATEGORY"
        },
        "PROJECTDEPTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTDEPTKEY"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "OVH1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTID"
        },
        "PROJECTLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTLOCATIONKEY"
        },
        "PROJECTSTATUS": {
          "type": "string",
          "x-samplevalue": "3 - In progress",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTSTATUS"
        },
        "PROJECTSTATUSKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTSTATUSKEY"
        },
        "PROJECTTYPE": {
          "type": "string",
          "x-samplevalue": "21 - Overhead",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTTYPE"
        },
        "PROJECTTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTTYPEKEY"
        },
        "QARROWKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "QARROWKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REMAININGQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REMAININGQTY"
        },
        "SALESCONTACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALESCONTACTID"
        },
        "SALESCONTACTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALESCONTACTKEY"
        },
        "SALESCONTACTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALESCONTACTNAME"
        },
        "SFDCKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SFDCKEY"
        },
        "SHIPTO": {
          "$ref": "#/definitions/projectsListSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOKEY"
        },
        "SONUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SONUMBER"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "TERMNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMNAME"
        },
        "TERMSKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMSKEY"
        },
        "USERRESTRICTIONS": {
          "type": "string",
          "x-samplevalue": "Any User",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERRESTRICTIONS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "itemUpdateTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "attachment": {
      "properties": {
        "attachmentdata": {
          "type": "string"
        },
        "attachmentname": {
          "type": "string"
        },
        "attachmenttype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "paymentsLegacyApplyPostReqArpaymentitemsArpaymentitem": {
      "properties": {
        "amount": {
          "description": "Amount to apply. This must be less than or equal to",
          "format": "double",
          "type": "number",
          "x-samplevalue": 1234.56
        },
        "invoicekey": {
          "description": "Transaction record number to apply payment to",
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1220
        }
      },
      "required": [
        "amount",
        "invoicekey"
      ],
      "title": "arpaymentitem",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqSubstantialcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{substantialcompletiondate.year}"
        }
      },
      "title": "substantialcompletiondate",
      "type": "object"
    },
    "orderEntryTransactionsByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "checkingAccountsByIdMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "Level 6, Block 4 Dundrum Town Centre 16"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Sandyford Rd"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Dundrum"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "Ireland"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "IE"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "Dublin 18"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "projectsPROJECTBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "CONTACTNAME"
      ],
      "title": "BILLTO",
      "type": "object"
    },
    "InventoryTransactionLegacyListObject": {
      "properties": {
        "createdfrom": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "customfields": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "datecreated": {
          "$ref": "#/definitions/InventoryTransactionLegacyListDatecreated"
        },
        "dateprinted": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ictransitems": {
          "$ref": "#/definitions/InventoryTransactionLegacyListIctransitems"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "message": {
          "type": "string"
        },
        "referenceno": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "subtotals": {
          "$ref": "#/definitions/InventoryTransactionLegacyListSubtotals"
        },
        "transactionid": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "transactionstate": {
          "type": "string",
          "x-samplevalue": "Pending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "whenmodified": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:42",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "title": "InventoryTransactionLegacyList",
      "type": "object",
      "x-primary-key": [
        "transactionid"
      ]
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "title": "BILLINGSCHEDULEENTRY",
      "type": "object"
    },
    "DebitMemoByIdPAYTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "createAccountGroupGLACCTGRPS": {
      "properties": {
        "GLACCTGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLACCTGRPSGLACCTGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLACCTGRPS",
      "type": "object"
    },
    "itemsGetByIdUOMPOUOMDETAIL": {
      "properties": {
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-alias": "purchaseUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "vendorsPostReqCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "customersPATCHRequestDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersPATCHRequestDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatus": {
      "properties": {
        "deferralstatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "deliverydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusDeliverydate"
        },
        "deliverystatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "kitstatus": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusKitstatus"
        }
      },
      "title": "fulfillmentstatus",
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string",
          "x-samplevalue": "cewe"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Warehouse12"
        }
      },
      "type": "object"
    },
    "ledgerAccountsAdvancedPOSTResponse": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "GLACCOUNT",
      "type": "object"
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "DebitMemoListPAYTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqSchedulestartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{schedulestartdate.year}"
        }
      },
      "title": "schedulestartdate",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIES": {
      "properties": {
        "sodocumententry": {
          "items": {
            "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "creditCardChargesById": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:52Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREDITCARDFEEENTRIES": {
          "$ref": "#/definitions/creditCardChargesByIdCREDITCARDFEEENTRIES"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "PMX-CARD-01"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1449
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "RECORDID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "REVERSALDATE": {
          "type": "string"
        },
        "REVERSALKEY": {
          "type": "string"
        },
        "REVERSEDDATE": {
          "type": "string"
        },
        "REVERSEDKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "SUPDOCID": {
          "type": "string"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-10-09"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENPAID": {
          "type": "string"
        }
      },
      "title": "creditCardChargesById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqExternalsignedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.year}"
        }
      },
      "title": "externalsignedon",
      "type": "object"
    },
    "reportingPeriodsPatchRes": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Calendar Year Ended December 2014"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 65
        }
      },
      "title": "reportingPeriodsPatchRes",
      "x-vendor-objectname": "REPORTINGPERIOD",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "reportingPeriodsPatchReq": {
      "properties": {
        "BUDGETING": {
          "type": "string",
          "x-samplevalue": "true"
        },
        "END_DATE": {
          "type": "string",
          "x-samplevalue": "01/31/2017"
        },
        "HEADER1": {
          "type": "string",
          "x-samplevalue": "Month Ended"
        },
        "HEADER2": {
          "type": "string",
          "x-samplevalue": "January 2017"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Month Ended January 2017"
        },
        "START_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2017"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "title": "reportingPeriodsPatchReq",
      "type": "object"
    },
    "inventoryTransactionsByIdSUBTOTALS": {
      "properties": {
        "invdocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsByIdSUBTOTALSInvdocumentsubtotals"
          },
          "type": "array"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusKitstatus": {
      "properties": {
        "deferralstatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "deliverydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusKitstatusDeliverydate"
        },
        "deliverystatus": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "invoiceprice": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "line_num": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "kitstatus",
      "type": "object"
    },
    "vendorsGetByIDCONTACTTO1099MAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "purchasingTransactionDefinitionsById",
      "type": "object",
      "properties": {
        "BUDGETING": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUDGETING"
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DATETYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATETYPE"
        },
        "END_DATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "END_DATE"
        },
        "HEADER1": {
          "type": "string",
          "x-samplevalue": "Month Ending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HEADER1"
        },
        "HEADER2": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HEADER2"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Next Month",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORD"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "START_DATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "START_DATE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "vendorTypesListPARENT": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "type": "object"
    },
    "projects": {
      "properties": {
        "BEGINDATE": {
          "type": "string",
          "x-samplevalue": "Begin date in formatmm/dd/yyyy"
        },
        "BILLABLEAPPODEFAULT": {
          "type": "string",
          "x-samplevalue": "Billable AP/purchasing. Usefalsefor No,truefor Yes. (Default:false)"
        },
        "BILLABLEEXPDEFAULT": {
          "type": "string",
          "x-samplevalue": "Billable employee expense. Usefalsefor No,truefor Yes. (Default:false)"
        },
        "BILLINGPRICING": {
          "type": "string",
          "x-samplevalue": "Labor pricing option"
        },
        "BILLINGRATE": {
          "type": "string",
          "x-samplevalue": "Labor pricing default rate"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-samplevalue": "Billing type"
        },
        "BILLTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectsPROJECTBILLTO"
        },
        "BUDGETAMOUNT": {
          "type": "string",
          "x-samplevalue": "Budgeted billing amount"
        },
        "BUDGETEDCOST": {
          "type": "string",
          "x-samplevalue": "Budgeted cost"
        },
        "BUDGETID": {
          "type": "string",
          "x-samplevalue": "GL budget ID"
        },
        "BUDGETQTY": {
          "type": "string",
          "x-samplevalue": "Budgeted duration"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "Class ID"
        },
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectsPROJECTCONTACTINFO"
        },
        "CONTRACTAMOUNT": {
          "type": "string",
          "x-samplevalue": "Contract amount"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "Currency code"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "Customer ID"
        },
        "CUSTUSERID": {
          "type": "string",
          "x-samplevalue": "External user ID"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "Department ID"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Description"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "Reference number"
        },
        "ENDDATE": {
          "type": "string",
          "x-samplevalue": "End date in formatmm/dd/yyyy"
        },
        "EXPENSEPRICING": {
          "type": "string",
          "x-samplevalue": "Expense pricing option"
        },
        "EXPENSERATE": {
          "type": "string",
          "x-samplevalue": "Expense pricing default rate"
        },
        "INVOICECURRENCY": {
          "type": "string",
          "x-samplevalue": "Invoice currency code"
        },
        "INVOICEMESSAGE": {
          "type": "string",
          "x-samplevalue": "Invoice message"
        },
        "INVOICEWITHPARENT": {
          "type": "string",
          "x-samplevalue": "Usefalsefor No,truefor Yes. (Default:false)"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "Location ID"
        },
        "MANAGERID": {
          "type": "string",
          "x-samplevalue": "Project manager employee ID"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Name"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "Parent project ID"
        },
        "POAMOUNT": {
          "type": "string",
          "x-samplevalue": "Purchase order amount"
        },
        "POAPPRICING": {
          "type": "string",
          "x-samplevalue": "AP/purchasing pricing option"
        },
        "POAPRATE": {
          "type": "string",
          "x-samplevalue": "AP/purchasing pricing default rate"
        },
        "PONUMBER": {
          "type": "string",
          "x-samplevalue": "Purchase order number"
        },
        "PQNUMBER": {
          "type": "string",
          "x-samplevalue": "Purchase quote number"
        },
        "PROJECTCATEGORY": {
          "type": "string",
          "x-samplevalue": "Project category"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "Project ID to create. Required if company does not use auto-numbering."
        },
        "PROJECTSTATUS": {
          "type": "string",
          "x-samplevalue": "Project status"
        },
        "PROJECTTYPE": {
          "type": "string",
          "x-samplevalue": "Project type"
        },
        "PROJECT_RULES": {
          "type": "string",
          "x-samplevalue": "Transaction rules for project. MultiplePROJECT_RULESelements may be passed."
        },
        "SALESCONTACTID": {
          "type": "string",
          "x-samplevalue": "Sales contact employee ID"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectsPROJECTSHIPTO"
        },
        "SONUMBER": {
          "type": "string",
          "x-samplevalue": "Sales order number"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "Status. Useactivefor Active otherwise useinactivefor Inactive. (Default:active)"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "Attachments ID"
        },
        "TERMNAME": {
          "type": "string",
          "x-samplevalue": "Payment term"
        },
        "USERRESTRICTIONS": {
          "type": "string",
          "x-samplevalue": "User restrictions"
        }
      },
      "required": [
        "NAME",
        "PROJECTCATEGORY"
      ],
      "title": "projects",
      "type": "object"
    },
    "departmentGroupsListMEMBERS": {
      "properties": {
        "departmentgrpmember": {
          "items": {
            "$ref": "#/definitions/departmentGroupsListMEMBERSDepartmentgrpmember"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqExternalsignedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{externalsignedon.year}"
        }
      },
      "title": "externalsignedon",
      "type": "object"
    },
    "employeesByIdCONTACT_LIST_INFOEmployeeentitycontacts": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "PRIMARY ADDRESS"
        },
        "CONTACT": {
          "$ref": "#/definitions/employeesByIdCONTACT_LIST_INFOEmployeeentitycontactsCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEE": {
          "$ref": "#/definitions/employeesByIdCONTACT_LIST_INFOEmployeeentitycontactsEMPLOYEE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 195
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "createAccountGroupGLACCTRANGES": {
      "properties": {
        "ACCTRANGE": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLACCTRANGESACCTRANGE"
          },
          "type": "array"
        }
      },
      "title": "GLACCTRANGES",
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DEPARTMENTNAME": {
          "type": "string"
        },
        "DEPTKEY": {
          "type": "string"
        },
        "DISCOUNT": {
          "type": "string"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Products"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "SAM001--SAM TEST ITEM"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1536
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "I"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        }
      },
      "title": "invdocumententry",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "type": "string"
        }
      },
      "title": "INVGL_ACCOUNTS",
      "type": "object"
    },
    "unitOfMeasuresListUOMDETAILSUomdetail": {
      "properties": {
        "ABBREVIATION": {
          "type": "string"
        },
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPNAME": {
          "type": "string",
          "x-samplevalue": "Count"
        },
        "GRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ISBASE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NUMDECIMALS": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Dozen"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "arAdjustmentsPostResp": {
      "properties": {
        "key": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Key",
          "x-samplevalue": 28079
        },
        "status": {
          "type": "string",
          "x-displayName": "Status",
          "x-samplevalue": "success"
        }
      },
      "title": "arAdjustmentsPostResp",
      "type": "object"
    },
    "customerTypesListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Banking",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENT": {
          "$ref": "#/definitions/customerTypesListPARENT"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchaseOrdersListBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "itemsListUOMINVUOMDETAIL": {
      "properties": {
        "UNIT": {
          "type": "string",
          "x-alias": "inventoryStockUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "inventoryTransactionsById": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string"
        },
        "ADJ": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        },
        "BACKORDER": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLTO": {
          "$ref": "#/definitions/inventoryTransactionsByIdBILLTO"
        },
        "BILLTOKEY": {
          "type": "string"
        },
        "CLOSED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CONTACT": {
          "$ref": "#/definitions/inventoryTransactionsByIdCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATEDFROM": {
          "type": "string"
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DATEPRINTED": {
          "type": "string"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-samplevalue": "OTHER"
        },
        "DOCPARID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "ENTGLGROUP": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/inventoryTransactionsByIdEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "HISTORY": {
          "$ref": "#/definitions/inventoryTransactionsByIdHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string"
        },
        "INVDOCUMENTENTRIES": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIES"
        },
        "INVOICERUNKEY": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MESSAGE": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NOTE": {
          "type": "string"
        },
        "PONUMBER": {
          "type": "string"
        },
        "PRINTED": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "PRINTEDBY": {
          "type": "string"
        },
        "PRINTEDUSERID": {
          "type": "string"
        },
        "PRINVBATCHKEY": {
          "type": "string"
        },
        "PRRECORDKEY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "RENEWEDDOC": {
          "type": "string"
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "SCHOPKEY": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/inventoryTransactionsByIdSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SHIPVIA": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/inventoryTransactionsByIdSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string"
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERM": {
          "$ref": "#/definitions/inventoryTransactionsByIdTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity"
        },
        "USEDASCONTRACT": {
          "type": "string"
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "USERID": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "VENDORDOCNO": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/inventoryTransactionsByIdWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-06"
        },
        "WHENDUE": {
          "type": "string"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-06T07:41:42Z"
        },
        "WHENPOSTED": {
          "type": "string"
        },
        "_DOCPAR": {
          "$ref": "#/definitions/inventoryTransactionsById_DOCPAR"
        }
      },
      "title": "inventoryTransactionsById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchaseOrdersGetByIdSUBTOTALSPodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        }
      },
      "type": "object"
    },
    "locationGroupsByIdCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationGroupsByIdCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemRevrecenddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "revrecenddate",
      "type": "object"
    },
    "classGroupsListObject": {
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-displayName": "CONDITION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-displayName": "CONDITIONTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-displayName": "DIMGRPCOMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GROUPTYPE": {
          "type": "string",
          "x-displayName": "GROUPTYPE",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ID": {
          "type": "string",
          "x-displayName": "ID",
          "x-samplevalue": "Segment-Small",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-displayName": "MEMBERFILTERS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERS": {
          "$ref": "#/definitions/classGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTTO": {
          "type": "string",
          "x-displayName": "RESTRICTTO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SORTFIELD": {
          "type": "string",
          "x-displayName": "SORTFIELD",
          "x-samplevalue": "CLASSID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SORTORDER": {
          "type": "string",
          "x-displayName": "SORTORDER",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-29T16:23:14Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "BILLED_TIMESHEETENTRY": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY"
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10045--Dharma Initiative"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "DEFERREVENUE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Services"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DISCOUNT": {
          "type": "string",
          "x-alias": "lines[*].discountAmount"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 831
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GENINVOICELINEKEY": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Project Fee"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "415--Project Fee"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 2000
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "1009--Dharma Initiative Customization (SO0013)"
        },
        "PROJECTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative Customization (SO0013)"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 2170
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-31"
        },
        "REVRECSTARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01"
        },
        "REVRECTEMPLATE": {
          "type": "string",
          "x-samplevalue": "POC Task Estimated Hours"
        },
        "REVRECTEMPLATEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "RGLDIM169562_10024": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SCMMACROLINK": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententrySHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "TASKKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "TASKNAME": {
          "type": "string",
          "x-samplevalue": "1 - Task 1"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string",
          "x-alias": "lines[*].taxAmount"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 2000
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UNIT": {
          "type": "string",
          "x-alias": "lines[*].product.salesUom",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "journalEntryPostReqENTRIES": {
      "properties": {
        "GLENTRY": {
          "items": {
            "$ref": "#/definitions/journalEntryPostReqENTRIESGLENTRY"
          },
          "type": "array"
        }
      },
      "title": "ENTRIES",
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitems": {
      "properties": {
        "sotransitem": {
          "items": {
            "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitemsSotransitem"
          },
          "type": "array"
        }
      },
      "title": "sotransitems",
      "type": "object"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "foldersGetAllResObject": {
      "properties": {
        "supdocfolder": {
          "items": {
            "$ref": "#/definitions/foldersGetAllResSupdocfolder"
          },
          "type": "array"
        }
      },
      "title": "foldersGetAllRes",
      "type": "object"
    },
    "createAllocationsPostReqALLOCATIONENTRIES": {
      "properties": {
        "ALLOCATIONENTRY": {
          "items": {
            "$ref": "#/definitions/createAllocationsPostReqALLOCATIONENTRIESALLOCATIONENTRY"
          },
          "type": "array"
        }
      },
      "title": "ALLOCATIONENTRIES",
      "type": "object"
    },
    "reportingPeriodsListObject": {
      "properties": {
        "BUDGETING": {
          "type": "boolean",
          "x-displayName": "BUDGETING",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DATETYPE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DATETYPE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "END_DATE": {
          "type": "string",
          "x-displayName": "END_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HEADER1": {
          "type": "string",
          "x-displayName": "HEADER1",
          "x-samplevalue": "Month Ending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "HEADER2": {
          "type": "string",
          "x-displayName": "HEADER2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Next Month",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORD",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "START_DATE": {
          "type": "string",
          "x-displayName": "START_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionsListsBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "vendorsPatchReqDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ZIP": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdCUSTOMERCREDITCARD": {
      "properties": {
        "CARDID": {
          "type": "string"
        }
      },
      "title": "CUSTOMERCREDITCARD",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqDateposted": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIES": {
      "properties": {
        "podocumententry": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententry"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Salem"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "OR"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 97301
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISOFFSET": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "AR_ACCOUNT",
      "type": "object"
    },
    "warehousesPatchResponse": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 58
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "CE-Ware"
        }
      },
      "title": "warehousesPatchResponse",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "WAREHOUSE",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "checkingAccountsByIdRESTRICTEDLOCATIONS": {
      "properties": {
        "LOCATIONID": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "x-samplevalue": [
            500
          ]
        }
      },
      "title": "RESTRICTEDLOCATIONS",
      "type": "object"
    },
    "orderEntryTransactionsByIdPAYMENTS": {
      "properties": {
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DOCHDRKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCNO": {
          "type": "string",
          "x-samplevalue": "IN0001"
        },
        "DOCUMENTNUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2398
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "C10001"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "PAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 511
        },
        "PAYMENTTYPE": {
          "type": "string",
          "x-samplevalue": "Printed Check"
        },
        "POSTINGDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "RECEIPTDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "rp"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "VIEWPAYMENT": {
          "type": "string",
          "x-samplevalue": "rp"
        }
      },
      "title": "PAYMENTS",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "itemsListITEMGLGROUPINVENTORYACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "paymentsLegacyApplyPostReqArpaymentitems": {
      "properties": {
        "arpaymentitem": {
          "items": {
            "$ref": "#/definitions/paymentsLegacyApplyPostReqArpaymentitemsArpaymentitem"
          },
          "type": "array"
        }
      },
      "title": "arpaymentitems",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-29T16:23:14Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "BILLED_TIMESHEETENTRY": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY"
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10045--Dharma Initiative"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "DEFERREVENUE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Services"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DISCOUNT": {
          "type": "string",
          "x-alias": "lines[*].discountAmount"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 831
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GENINVOICELINEKEY": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Project Fee"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "415--Project Fee"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 2000
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "1009--Dharma Initiative Customization (SO0013)"
        },
        "PROJECTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative Customization (SO0013)"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 2170
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-31"
        },
        "REVRECSTARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01"
        },
        "REVRECTEMPLATE": {
          "type": "string",
          "x-samplevalue": "POC Task Estimated Hours"
        },
        "REVRECTEMPLATEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "RGLDIM169562_10024": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SCMMACROLINK": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententrySHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "TASKKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "TASKNAME": {
          "type": "string",
          "x-samplevalue": "1 - Task 1"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string",
          "x-alias": "lines[*].taxAmount"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 2000
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "UNIT": {
          "type": "string",
          "x-alias": "lines[*].product.salesUom",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/salesOrdersListSODOCUMENTENTRIESSodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "billsPaymentsDetailsObject": {
      "properties": {
        "ADJUSTMENTAMOUNT": {
          "type": "string",
          "x-displayName": "ADJUSTMENTAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADJUSTMENTENTRYKEY": {
          "type": "string",
          "x-displayName": "ADJUSTMENTENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADJUSTMENTKEY": {
          "type": "string",
          "x-displayName": "ADJUSTMENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADVANCEENTRYKEY": {
          "type": "string",
          "x-displayName": "ADVANCEENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADVANCEKEY": {
          "type": "string",
          "x-displayName": "ADVANCEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCOUNTAMOUNT": {
          "type": "string",
          "x-displayName": "DISCOUNTAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNTDATE": {
          "type": "string",
          "x-displayName": "DISCOUNTDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNTENTRYKEY": {
          "type": "string",
          "x-displayName": "DISCOUNTENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNTKEY": {
          "type": "string",
          "x-displayName": "DISCOUNTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ENTRYKEY",
          "x-samplevalue": 11940,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "INLINEAMOUNT": {
          "type": "string",
          "x-displayName": "INLINEAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INLINEENTRYKEY": {
          "type": "string",
          "x-displayName": "INLINEENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INLINEKEY": {
          "type": "string",
          "x-displayName": "INLINEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMENTAMOUNT",
          "x-samplevalue": 50,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-10-25",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMENTENTRYKEY",
          "x-samplevalue": 12274,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMENTKEY",
          "x-samplevalue": 3039,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "POSADJENTRYKEY": {
          "type": "string",
          "x-displayName": "POSADJENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POSADJKEY": {
          "type": "string",
          "x-displayName": "POSADJKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POSTEDADVANCEAMOUNT": {
          "type": "string",
          "x-displayName": "POSTEDADVANCEAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POSTEDADVANCEENTRYKEY": {
          "type": "string",
          "x-displayName": "POSTEDADVANCEENTRYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POSTEDADVANCEKEY": {
          "type": "string",
          "x-displayName": "POSTEDADVANCEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDKEY",
          "x-samplevalue": 2858,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 72,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_ADJUSTMENTAMOUNT": {
          "type": "string",
          "x-displayName": "TRX_ADJUSTMENTAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_DISCOUNTAMOUNT": {
          "type": "string",
          "x-displayName": "TRX_DISCOUNTAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_INLINEAMOUNT": {
          "type": "string",
          "x-displayName": "TRX_INLINEAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_PAYMENTAMOUNT",
          "x-samplevalue": 50,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_POSTEDADVANCEAMOUNT": {
          "type": "string",
          "x-displayName": "TRX_POSTEDADVANCEAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqContractenddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{contractenddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{contractenddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{contractenddate.year}"
        }
      },
      "title": "contractenddate",
      "type": "object"
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "apGetAccountLabelsResTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "invoicesAdvancedGETByIdCUSTMESSAGE": {
      "properties": {
        "MESSAGE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "createAllocationsPostReqALLOCATIONENTRIESALLOCATIONENTRY": {
      "properties": {
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VALUE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "VALUE"
      ],
      "title": "ALLOCATIONENTRY",
      "type": "object"
    },
    "locationsLOCATIONCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Smith, John"
        }
      },
      "required": [
        "CONTACTNAME"
      ],
      "title": "CONTACTINFO",
      "type": "object"
    },
    "entitiesListObject": {
      "properties": {
        "BUSINESSDAYS": {
          "type": "string",
          "x-displayName": "BUSINESSDAYS",
          "x-samplevalue": "MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/entitiesListCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-displayName": "CONTACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTTITLE": {
          "type": "string",
          "x-displayName": "CUSTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENABLELEGALCONTACT": {
          "type": "boolean",
          "x-displayName": "ENABLELEGALCONTACT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENDDATE": {
          "type": "string",
          "x-displayName": "ENDDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "900--Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITYRECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ENTITYRECORDNO",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FEDERALID": {
          "type": "string",
          "x-displayName": "FEDERALID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FIRSTMONTH": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "FIRSTMONTH",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FIRSTMONTHTAX": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "FIRSTMONTHTAX",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FOOTNOTETEXT": {
          "type": "string",
          "x-displayName": "FOOTNOTETEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HAS_IE_RELATION": {
          "type": "boolean",
          "x-displayName": "HAS_IE_RELATION",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "IEPAYABLE": {
          "$ref": "#/definitions/entitiesListIEPAYABLE"
        },
        "IEPAYABLEACCTKEY": {
          "type": "string",
          "x-displayName": "IEPAYABLEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "IERECEIVABLE": {
          "$ref": "#/definitions/entitiesListIERECEIVABLE"
        },
        "IERECEIVABLEACCTKEY": {
          "type": "string",
          "x-displayName": "IERECEIVABLEACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ISELIMINATIONENTITY": {
          "type": "boolean",
          "x-displayName": "ISELIMINATIONENTITY",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ISROOT": {
          "type": "string",
          "x-displayName": "ISROOT",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LEGALADDRESS1": {
          "type": "string",
          "x-displayName": "LEGALADDRESS1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALADDRESS2": {
          "type": "string",
          "x-displayName": "LEGALADDRESS2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALCITY": {
          "type": "string",
          "x-displayName": "LEGALCITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALCOUNTRY": {
          "type": "string",
          "x-displayName": "LEGALCOUNTRY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALNAME": {
          "type": "string",
          "x-displayName": "LEGALNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALSTATE": {
          "type": "string",
          "x-displayName": "LEGALSTATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LEGALZIPCODE": {
          "type": "string",
          "x-displayName": "LEGALZIPCODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONENTITY": {
          "$ref": "#/definitions/entitiesListLOCATIONENTITY"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 900,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MARKETING_TEXT": {
          "type": "string",
          "x-displayName": "MARKETING_TEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MESSAGE_TEXT": {
          "type": "string",
          "x-displayName": "MESSAGE_TEXT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REPORTPRINTAS": {
          "type": "string",
          "x-displayName": "REPORTPRINTAS",
          "x-samplevalue": "Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RESERVEAMT": {
          "type": "string",
          "x-displayName": "RESERVEAMT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/entitiesListSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-displayName": "SHIPTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STARTDATE": {
          "type": "string",
          "x-displayName": "STARTDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STARTOPEN": {
          "format": "date",
          "type": "string",
          "x-displayName": "STARTOPEN",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1970-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORID": {
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPERVISORKEY": {
          "type": "string",
          "x-displayName": "SUPERVISORKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-displayName": "SUPERVISORNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "type": "string",
          "x-displayName": "VENDORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WEEKENDS": {
          "type": "string",
          "x-displayName": "WEEKENDS",
          "x-samplevalue": "SUNDAY,SATURDAY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WEEKSTART": {
          "type": "string",
          "x-displayName": "WEEKSTART",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqDatedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDTOTALSTOTAL": {
      "properties": {
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "Q_QV": {
          "type": "string",
          "x-samplevalue": "Quantity & Value"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 135
        },
        "SIGN": {
          "type": "string",
          "x-samplevalue": "Add"
        },
        "TOTALID": {
          "type": "string",
          "x-samplevalue": "ONHAND"
        }
      },
      "title": "TOTAL",
      "type": "object"
    },
    "checkingAccountsListCHECKINFOCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "getAllocationsByIdALLOCATIONENTRIESAllocationentry": {
      "properties": {
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASS": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CLASSSTATUS": {
          "type": "string"
        },
        "CONTRACT": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CUSTDIM_10002": {
          "type": "string"
        },
        "CUSTOMER": {
          "type": "string"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "CUSTOMERSTATUS": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "100--Sales"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DEPTSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "EMPLOYEE": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EMPLOYEESTATUS": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMSTATUS": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "100--USA"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "LOCBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "LOCSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECT": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PROJECTSTATUS": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "RGLDIM169562_10033": {
          "type": "string"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "VENDOR": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "VENDORSTATUS": {
          "type": "string"
        },
        "WAREHOUSEID": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "allocationentry",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqSubtotalsSubtotalCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "paymentsLegacyReversePostReqDatereversed": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "08"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2020"
        }
      },
      "title": "datereversed",
      "type": "object"
    },
    "datepostedCMPost": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "31"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "03"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2010"
        }
      },
      "title": "datepostedCMPost",
      "type": "object",
      "x-has-customfields": false
    },
    "ccTransactionsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "ccTransactionsById",
      "type": "object",
      "properties": {
        "AUWHENCREATED": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "CCTRANSACTIONENTRIES": {
          "$ref": "#/definitions/ccTransactionsListCCTRANSACTIONENTRIES"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLEARED"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION2"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHANGE_RATE"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_DATE"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FINANCIALENTITY"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTKEY"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCHKEY"
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RAWSTATE"
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "RECORD_URL": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORD_URL"
        },
        "REVERSALDATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSALDATE"
        },
        "REVERSALKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSALKEY"
        },
        "REVERSEDDATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSEDDATE"
        },
        "REVERSEDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVERSEDKEY"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALPAID"
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALPAID"
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENPAID": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-14T09:15:15.968Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPAID"
        }
      }
    },
    "locationUpdateLOCATIONSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Smith, Jane"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "createAccountGroupGLSTATACCTRANGES": {
      "properties": {
        "ACCTRANGE": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLSTATACCTRANGESACCTRANGE"
          },
          "type": "array"
        }
      },
      "title": "GLSTATACCTRANGES",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemDeliverto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{deliverto.contactname}"
        }
      },
      "title": "deliverto",
      "type": "object"
    },
    "BulkUploadResponse": {
      "description": "BulkLoad response of bulk download.",
      "properties": {
        "id": {
          "description": "Id of the bulk job",
          "type": "string"
        },
        "instanceId": {
          "description": "Instance Id of the bulk job",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "title": "RENEWALMACRO",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "{aisle}"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "{bin}"
        },
        "itemexpiration": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "{lotno}"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "{quantity}"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "{row}"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "{serialno}"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "contractListObject": {
      "properties": {
        "ADVBILLBY": {
          "type": "string",
          "x-displayName": "ADVBILLBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADVBILLBYTYPE": {
          "type": "string",
          "x-displayName": "ADVBILLBYTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BEGINDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "BEGINDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLINGFREQUENCY": {
          "type": "string",
          "x-displayName": "BILLINGFREQUENCY",
          "x-samplevalue": "Monthly",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLINGHOLD": {
          "type": "boolean",
          "x-displayName": "BILLINGHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/contractListBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CANCELDATE": {
          "type": "string",
          "x-displayName": "CANCELDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-samplevalue": "CN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTTYPE": {
          "type": "string",
          "x-displayName": "CONTRACTTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTTYPEKEY": {
          "type": "string",
          "x-displayName": "CONTRACTTYPEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CRHOLD": {
          "type": "boolean",
          "x-displayName": "CRHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-displayName": "DEPARTMENTNAME",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/contractListDISPLAYCONTACT"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-displayName": "EMPLOYEEDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-displayName": "EMPLOYEEID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-displayName": "EMPLOYEENAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "ENDDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE",
          "x-samplevalue": "Intacct Daily Rate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXPENSEHOLD": {
          "type": "boolean",
          "x-displayName": "EXPENSEHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLDIMCHANNEL",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 110,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "San Francisco",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEAPRCLIST": {
          "type": "string",
          "x-displayName": "MEAPRCLIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "10001 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRCLIST": {
          "type": "string",
          "x-displayName": "PRCLIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-displayName": "PROJECTDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-displayName": "PROJECTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWAL": {
          "type": "boolean",
          "x-displayName": "RENEWAL",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RENEWALADVBILLBY": {
          "type": "string",
          "x-displayName": "RENEWALADVBILLBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWALADVBILLBYTYPE": {
          "type": "string",
          "x-displayName": "RENEWALADVBILLBYTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWALMACRO": {
          "type": "string",
          "x-displayName": "RENEWALMACRO",
          "x-samplevalue": "60 days no increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWEDCONTRACTID": {
          "type": "string",
          "x-displayName": "RENEWEDCONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWTERMLENGTH": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RENEWTERMLENGTH",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWTERMPERIOD": {
          "type": "string",
          "x-displayName": "RENEWTERMPERIOD",
          "x-samplevalue": "Months",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVENUEHOLD": {
          "type": "boolean",
          "x-displayName": "REVENUEHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RGLDIM169562_10034": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RGLDIM169562_10034",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/contractListSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTOCONTACTNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "Renewed",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TIMESHEETAGGREGATION": {
          "type": "string",
          "x-displayName": "TIMESHEETAGGREGATION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-displayName": "VENDORDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "type": "string",
          "x-displayName": "VENDORID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "itemsListTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "chargeCardAccountsByIdMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "21 Drydock Ave"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Boston"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "MA"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "02110"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "recurringOrderEntryTransactionsWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "classGroupsByIdMEMBERSClassgrpmember": {
      "properties": {
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "CLASSKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CLASSSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "classgrpmember",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemDateconfirmed": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{dateconfirmed.year}"
        }
      },
      "title": "dateconfirmed",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReq": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ALLOWEDITDELIVERTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ALLOWEDITSHIPTO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CREDITLIMITCHECK": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENABLEOVERRIDETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqENTITY_PROPS"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqINVGL_ACCOUNTS"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "OVERRIDE_PRICE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "POSTTOGL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRESERVE_SEQNUM": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "RECALLS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqRECALLS"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOWTITLE3": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SHOW_TOTALS": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqSUBTOTALS"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "TOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsPatchReqTOTALS"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "purchasingTransactionDefinitionsPatchReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "PODOCUMENTPARAMS",
      "type": "object"
    },
    "contactsPOSTRequest": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DISCOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MAILADDRESS": {
          "properties": {
            "ADDRESS1": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "ADDRESS2": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "CITY": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "COUNTRY": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "COUNTRYCODE": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "LATITUDE": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "LONGITUDE": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "STATE": {
              "type": "string",
              "x-samplevalue": "string"
            },
            "ZIP": {
              "format": "int32",
              "type": "integer",
              "x-samplevalue": 0
            }
          },
          "$ref": "#/definitions/contactsPOSTRequestCONTACTMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRICELIST": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRICELISTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRICESCHEDULEKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TAXID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-08-21T08:04:21.639Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-08-21T08:04:21.639Z"
        }
      },
      "required": [
        "CONTACTNAME",
        "PRINTAS"
      ],
      "title": "contactsPOSTRequest",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchRes": {
      "properties": {
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "39"
        }
      },
      "title": "purchasingTransactionDefinitionsPatchRes",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "PODOCUMENTPARAMS"
    },
    "salesOrdersGetByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "shippingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersGetByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "contractListBILLTO": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReq": {
      "properties": {
        "actualcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqActualcompletiondate"
        },
        "actualstartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqActualstartdate"
        },
        "basecurr": {
          "type": "string",
          "x-samplevalue": "{basecurr}",
          "x-required": true
        },
        "cancelafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqCancelafterdate"
        },
        "contractenddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqContractenddate"
        },
        "contractstartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqContractstartdate"
        },
        "createdfrom": {
          "type": "string",
          "x-samplevalue": "{createdfrom}"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "{currency}",
          "x-required": true
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{customfields}"
        },
        "datecreated": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDatecreated",
          "x-required": true
        },
        "datedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDateposted"
        },
        "deliverto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDeliverto"
        },
        "documentno": {
          "type": "string",
          "x-samplevalue": "{documentno}"
        },
        "donotshipafterdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDonotshipafterdate"
        },
        "donotshipbeforedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqDonotshipbeforedate"
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "{exchrate}"
        },
        "exchratedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqExchratedate"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "{exchratetype}"
        },
        "exclusions": {
          "type": "string",
          "x-samplevalue": "{exclusions}"
        },
        "executedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqExecutedon"
        },
        "externalapprovedby": {
          "type": "string",
          "x-samplevalue": "{externalapprovedby}"
        },
        "externalapprovedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqExternalapprovedon"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "{externalid}"
        },
        "externalrefno": {
          "type": "string",
          "x-samplevalue": "{externalrefno}"
        },
        "externalsignedby": {
          "type": "string",
          "x-samplevalue": "{externalsignedby}"
        },
        "externalsignedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqExternalsignedon"
        },
        "externalverbalby": {
          "type": "string",
          "x-samplevalue": "{externalverbalby}"
        },
        "inclusions": {
          "type": "string",
          "x-samplevalue": "{inclusions}"
        },
        "internalapprovedby": {
          "type": "string",
          "x-samplevalue": "{internalapprovedby}"
        },
        "internalapprovedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqInternalapprovedon"
        },
        "internalinitiatedby": {
          "type": "string",
          "x-samplevalue": "{internalinitiatedby}"
        },
        "internalissuedby": {
          "type": "string",
          "x-samplevalue": "{internalissuedby}"
        },
        "internalissuedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqInternalissuedon"
        },
        "internalrefno": {
          "type": "string",
          "x-samplevalue": "{internalrefno}"
        },
        "internalsignedby": {
          "type": "string",
          "x-samplevalue": "{internalsignedby}"
        },
        "internalsignedon": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqInternalsignedon"
        },
        "internalsource": {
          "type": "string",
          "x-samplevalue": "{internalsource}"
        },
        "internalsourcerefno": {
          "type": "string",
          "x-samplevalue": "{internalsourcerefno}"
        },
        "internalverbalby": {
          "type": "string",
          "x-samplevalue": "{internalverbalby}"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "{message}"
        },
        "needbydate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqNeedbydate"
        },
        "noticetoproceed": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqNoticetoproceed"
        },
        "paymentbondamount": {
          "type": "string",
          "x-samplevalue": "{paymentbondamount}"
        },
        "paymentbondreceived": {
          "type": "string",
          "x-samplevalue": "{paymentbondreceived}"
        },
        "paymentbondrequired": {
          "type": "string",
          "x-samplevalue": "{paymentbondrequired}"
        },
        "paymentsuretycompany": {
          "type": "string",
          "x-samplevalue": "{paymentsuretycompany}"
        },
        "payto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPayto",
          "x-required": true
        },
        "performancebondamount": {
          "type": "string",
          "x-samplevalue": "{performancebondamount}"
        },
        "performancebondreceived": {
          "type": "string",
          "x-samplevalue": "{performancebondreceived}"
        },
        "performancebondrequired": {
          "type": "string",
          "x-samplevalue": "{performancebondrequired}"
        },
        "performancesuretycompany": {
          "type": "string",
          "x-samplevalue": "{performancesuretycompany}"
        },
        "potransitems": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitems",
          "x-required": true
        },
        "promiseddate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPromiseddate"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "{referenceno}"
        },
        "responsedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqResponsedue"
        },
        "returnto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqReturnto",
          "x-required": true
        },
        "revisedcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqRevisedcompletiondate"
        },
        "scheduledcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqScheduledcompletiondate"
        },
        "scheduleimpact": {
          "type": "string",
          "x-samplevalue": "{scheduleimpact}"
        },
        "schedulestartdate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqSchedulestartdate"
        },
        "scope": {
          "type": "string",
          "x-samplevalue": "{scope}"
        },
        "shippingmethod": {
          "type": "string",
          "x-samplevalue": "{shippingmethod}"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "{state}"
        },
        "substantialcompletiondate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqSubstantialcompletiondate"
        },
        "subtotals": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPostReqSubtotals"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "{supdocid}"
        },
        "termname": {
          "type": "string",
          "x-samplevalue": "{termname}"
        },
        "terms": {
          "type": "string",
          "x-samplevalue": "{terms}"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "{transactiontype}",
          "x-required": true
        },
        "vendordocno": {
          "type": "string",
          "x-samplevalue": "{vendordocno}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}",
          "x-required": true
        }
      },
      "title": "purchasingTransactionsLegacyPostReq",
      "type": "object",
      "required": [
        "basecurr",
        "currency",
        "datecreated",
        "payto",
        "potransitems",
        "returnto",
        "transactiontype",
        "vendorid"
      ]
    },
    "checkingAccountsListMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "Level 6, Block 4 Dundrum Town Centre 16"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Sandyford Rd"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Dundrum"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "Ireland"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "IE"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "Dublin 18"
        }
      },
      "type": "object"
    },
    "exchangeRateCreate": {
      "properties": {
        "EXCHANGERATEENTRIES": {
          "$ref": "#/definitions/exchangeRateCreateEXCHANGERATEENTRIES"
        },
        "FROM_CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TO_CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TYPENAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "TYPENAME",
        "TO_CURRENCY",
        "FROM_CURRENCY"
      ],
      "title": "exchangeRateCreate",
      "type": "object"
    },
    "creditCardFeesListCREDITCARDFEEENTRIES": {
      "properties": {
        "creditcardfeeentry": {
          "items": {
            "$ref": "#/definitions/creditCardFeesListCREDITCARDFEEENTRIESCreditcardfeeentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUPCOGSACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "cogsAccount"
        }
      },
      "type": "object"
    },
    "checkingAccountsListCHECKINFOCONTACT": {
      "properties": {
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "NewCo3-abortnyk"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "ING(B500_ING)"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/checkingAccountsListCHECKINFOCONTACTMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "classesById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "classesById",
      "type": "object",
      "properties": {
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSID"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PARENTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTKEY"
        },
        "PARENTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTNAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "invoicesAdvancedGETByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdSHIPTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsById_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionsById_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "string"
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "type": "string"
        },
        "TERM_NAME": {
          "type": "string"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "XSLTEMPLATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 57
        }
      },
      "title": "_DOCPAR",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "{aisle}"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "{bin}"
        },
        "itemexpiration": {
          "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "{lotno}"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "{quantity}"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "{row}"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "{serialno}"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "savingsAccountsGetAllRespCHECKLAYOUT": {
      "properties": {
        "BANKACCTALIGN": {
          "type": "string",
          "x-samplevalue": "right"
        },
        "CHECKNOLENGTH": {
          "type": "string"
        },
        "CHECKPAPERFORMAT": {
          "type": "string",
          "x-samplevalue": "top"
        },
        "CHECKPRINTFORMAT": {
          "type": "string",
          "x-samplevalue": "standard"
        },
        "DFLTCNYADDR": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DISPLAYLOCATIONAS": {
          "type": "string",
          "x-samplevalue": "id"
        },
        "MICRTRANSCODE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS32": {
          "type": "string",
          "x-samplevalue": "Position 31"
        },
        "PRINTLINEITEMS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SIGLINE2AMOUNT": {
          "type": "string"
        },
        "SIGNATUREIMAGE1": {
          "type": "string"
        },
        "SIGNATUREIMAGE2": {
          "type": "string"
        },
        "SPACESTOAPPEND": {
          "type": "string"
        },
        "USDTEXT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USESIG1BELOWAMT": {
          "type": "string"
        },
        "USESIG2BELOWAMT": {
          "type": "string"
        },
        "VOIDTEXT": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "foldersPostRes": {
      "properties": {
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 79
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "foldersPostRes",
      "type": "object"
    },
    "InventoryTransactionLegacyListSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string"
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "customerid": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "employeeid": {
          "type": "string"
        },
        "itemid": {
          "type": "string"
        },
        "locationid": {
          "type": "string"
        },
        "percentval": {
          "type": "string"
        },
        "projectid": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "itemGlGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "itemGlGroupsById",
      "type": "object",
      "properties": {
        "COGSACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "COGSACCTKEY"
        },
        "COGSACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "COGSACCTNO"
        },
        "COGSACCTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "COGSACCTTITLE"
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFAULTREVRECTEMPLKEY"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFERREDREVACCTKEY"
        },
        "DEFERREDREVACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFERREDREVACCTNO"
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFERREDREVACCTTITLE"
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSEACCTKEY"
        },
        "EXPENSEACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSEACCTNO"
        },
        "EXPENSEACCTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSEACCTTITLE"
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INCOMEACCTKEY"
        },
        "INCOMEACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INCOMEACCTNO"
        },
        "INCOMEACCTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INCOMEACCTTITLE"
        },
        "INVACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVACCTKEY"
        },
        "INVACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVACCTNO"
        },
        "INVACCTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVACCTTITLE"
        },
        "ISSYSTEM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISSYSTEM"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Computers",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETOEGLACCOUNTKEY"
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETPOGLACCOUNTKEY"
        },
        "OFF_OEGLACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFF_OEGLACCOUNTNO"
        },
        "OFF_OEGLACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFF_OEGLACCOUNTTITLE"
        },
        "OFF_POGLACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFF_POGLACCOUNTNO"
        },
        "OFF_POGLACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFF_POGLACCOUNTTITLE"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REVRECTEMPLID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVRECTEMPLID"
        },
        "WHENCREATED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      }
    },
    "foldersPostReq": {
      "properties": {
        "folderDescription": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "parentFolderName": {
          "type": "string"
        }
      },
      "required": [
        "folderName"
      ],
      "x-primary-key": [
        "folderName"
      ],
      "x-vendor_objectname": "supdocfolder",
      "type": "object"
    },
    "foldersGetByIdResResponseOperation": {
      "properties": {
        "authentication": {
          "$ref": "#/definitions/foldersGetByIdResResponseOperationAuthentication"
        },
        "result": {
          "$ref": "#/definitions/foldersGetByIdResResponseOperationResult"
        }
      },
      "title": "operation",
      "type": "object"
    },
    "purchaseOrdersListSUBTOTALS": {
      "properties": {
        "podocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersListSUBTOTALSPodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "recurringBillsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "recurringBillsById",
      "type": "object",
      "properties": {
        "APRECURBILLENTRY": {
          "$ref": "#/definitions/recurringBillsListAPRECURBILLENTRY"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-24T03:21:37Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTDESC"
        },
        "CONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID"
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Rent 2015 Location 120",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "ENDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENDDATE"
        },
        "ENTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20008,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITY"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATE"
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATEDATE"
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATETYPE"
        },
        "EXECCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXECCOUNT"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXTERNALURL"
        },
        "INTERVAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INTERVAL"
        },
        "LASTEXECDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LASTEXECDATE"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODULEKEY"
        },
        "NEXTEXECDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NEXTEXECDATE"
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYTOCONTACTNAME"
        },
        "PRBATCH": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCH"
        },
        "PRBATCHKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCHKEY"
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "Vendor Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "REPEATBY": {
          "type": "string",
          "x-samplevalue": "M",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REPEATBY"
        },
        "REPEATCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REPEATCOUNT"
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RETURNTOCONTACTNAME"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 661,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SCHOPKEY"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STARTDATE"
        },
        "STATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPDOCID"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMKEY"
        },
        "TERMNAME": {
          "type": "string",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMNAME"
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERKEY"
        },
        "USERNAME": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERNAME"
        },
        "VENDOR": {
          "type": "string",
          "x-samplevalue": "20008--Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDOR"
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20008,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      }
    },
    "OrderEntryTransactionLegacyListSotransitemsSotransitem": {
      "properties": {
        "billingtemplate": {
          "type": "string"
        },
        "bundlenumber": {
          "type": "string"
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "type": "string"
        },
        "customfields": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "discountpercent": {
          "type": "string"
        },
        "discsurchargememo": {
          "type": "string"
        },
        "dochdrno": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1241
        },
        "docid": {
          "type": "string"
        },
        "dropship": {
          "type": "string"
        },
        "employeeid": {
          "type": "string"
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "exchratedate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitemsSotransitemExchratedate"
        },
        "exchratetype": {
          "type": "string"
        },
        "grossamount": {
          "type": "string"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "Wireless Access Points"
        },
        "itemid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 904
        },
        "line_no": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "linesubtotals": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitemsSotransitemLinesubtotals"
        },
        "locationid": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        },
        "multiplier": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyListSotransitemsSotransitemNeedByDate"
        },
        "price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "projectid": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "recordno": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1232
        },
        "renewalmacro": {
          "type": "string"
        },
        "retailprice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "revrecenddate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitemsSotransitemRevrecenddate"
        },
        "revrecstartdate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitemsSotransitemRevrecstartdate"
        },
        "revrectemplate": {
          "type": "string"
        },
        "sourcedocumententrytkey": {
          "type": "string"
        },
        "sourcedocumentid": {
          "type": "string"
        },
        "sourcedocumentkey": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "taskno": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "taxrate": {
          "type": "string"
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "cewe"
        }
      },
      "title": "sotransitem",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "customersAdvancedGETALLSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "locationGroupsByIdCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "vendorsPostReqRETURNTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "creditCardFeeById": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:52Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREDITCARDFEEENTRIES": {
          "$ref": "#/definitions/creditCardFeeByIdCREDITCARDFEEENTRIES"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "PMX-CARD-01"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1449
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "RECORDID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "REVERSALDATE": {
          "type": "string"
        },
        "REVERSALKEY": {
          "type": "string"
        },
        "REVERSEDDATE": {
          "type": "string"
        },
        "REVERSEDKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "SUPDOCID": {
          "type": "string"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-10-09"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENPAID": {
          "type": "string"
        }
      },
      "title": "creditCardFeeById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPayto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{payto.contactname}"
        }
      },
      "title": "payto",
      "type": "object"
    },
    "orderEntryTransactionsByIdHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "01/31/2015"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/09/2017 12:52:00"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SOURCEDOCUMENTID": {
          "type": "string"
        }
      },
      "title": "dochistory",
      "type": "object"
    },
    "customersGETByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersGETByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "customersGETByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersGETByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "type": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "employeesListPERSONALINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "address. postalCode"
        }
      },
      "type": "object"
    },
    "vendorsPostReq": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "APACCOUNT": {
          "type": "string",
          "x-displayName": "APACCOUNT",
          "x-samplevalue": "string"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-displayName": "BILLINGTYPE",
          "x-samplevalue": "string"
        },
        "COMMENTS": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "string"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/vendorsPostReqCONTACTINFO"
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "CUSTOMFIELD1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DISPLAYACCTNOCHECK": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/vendorsPostReqDISPLAYCONTACT"
        },
        "DISPLAYTERMDISCOUNT": {
          "type": "string",
          "x-displayName": "DISPLAYTERMDISCOUNT",
          "x-samplevalue": "string"
        },
        "DONOTCUTCHECK": {
          "type": "string",
          "x-displayName": "DONOTCUTCHECK",
          "x-samplevalue": "string"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "string"
        },
        "HIDEDISPLAYCONTACT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "string"
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "string"
        },
        "ONETIME": {
          "type": "string",
          "x-displayName": "ONETIME",
          "x-samplevalue": "string"
        },
        "ONHOLD": {
          "type": "string",
          "x-displayName": "ONHOLD",
          "x-samplevalue": "string"
        },
        "PARENTID": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTID",
          "x-samplevalue": "string"
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-displayName": "PAYMENTPRIORITY",
          "x-samplevalue": "string"
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY",
          "x-samplevalue": "string"
        },
        "PAYTO": {
          "$ref": "#/definitions/vendorsPostReqPAYTO"
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "string"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "string"
        },
        "RETURNTO": {
          "$ref": "#/definitions/vendorsPostReqRETURNTO"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-samplevalue": "string"
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "string"
        },
        "VENDORACCOUNTNO": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTNO",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116"
        },
        "VENDTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "VENDTYPE",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "DISPLAYCONTACT",
        "NAME"
      ],
      "type": "object"
    },
    "InventoryTransactionLegacyGetByIdSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyGetByIdSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "paymentsLegacyPostReqDatereceived": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "02"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "01"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2020
        }
      },
      "title": "datereceived",
      "type": "object",
      "x-has-customfields": false
    },
    "foldersGetByIdRes": {
      "properties": {
        "response": {
          "$ref": "#/definitions/foldersGetByIdResResponse"
        }
      },
      "title": "foldersGetByIdRes",
      "type": "object"
    },
    "ccTransactionsByIdCCTRANSACTIONENTRIES": {
      "properties": {
        "CCTRANSACTIONENTRY": {
          "items": {
            "$ref": "#/definitions/ccTransactionsByIdCCTRANSACTIONENTRIESCCTRANSACTIONENTRY"
          },
          "type": "array"
        }
      },
      "title": "CCTRANSACTIONENTRIES",
      "type": "object"
    },
    "entitiesById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "entitiesById",
      "type": "object",
      "properties": {
        "BUSINESSDAYS": {
          "type": "string",
          "x-samplevalue": "MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUSINESSDAYS"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/entitiesListCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTENTITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTENTITY"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "CUSTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTTITLE"
        },
        "ENABLELEGALCONTACT": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLELEGALCONTACT"
        },
        "ENDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENDDATE"
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "900--Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITY"
        },
        "ENTITYRECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITYRECORDNO"
        },
        "FEDERALID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FEDERALID"
        },
        "FIRSTMONTH": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIRSTMONTH"
        },
        "FIRSTMONTHTAX": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIRSTMONTHTAX"
        },
        "FOOTNOTETEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FOOTNOTETEXT"
        },
        "HAS_IE_RELATION": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HAS_IE_RELATION"
        },
        "IEPAYABLE": {
          "$ref": "#/definitions/entitiesListIEPAYABLE"
        },
        "IEPAYABLEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IEPAYABLEACCTKEY"
        },
        "IERECEIVABLE": {
          "$ref": "#/definitions/entitiesListIERECEIVABLE"
        },
        "IERECEIVABLEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IERECEIVABLEACCTKEY"
        },
        "ISELIMINATIONENTITY": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISELIMINATIONENTITY"
        },
        "ISROOT": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISROOT"
        },
        "LEGALADDRESS1": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALADDRESS1"
        },
        "LEGALADDRESS2": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALADDRESS2"
        },
        "LEGALCITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALCITY"
        },
        "LEGALCOUNTRY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALCOUNTRY"
        },
        "LEGALNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALNAME"
        },
        "LEGALSTATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALSTATE"
        },
        "LEGALZIPCODE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LEGALZIPCODE"
        },
        "LOCATIONENTITY": {
          "$ref": "#/definitions/entitiesListLOCATIONENTITY"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 900,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONID"
        },
        "MARKETING_TEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MARKETING_TEXT"
        },
        "MESSAGE_TEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MESSAGE_TEXT"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PARENTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REPORTPRINTAS": {
          "type": "string",
          "x-samplevalue": "Elimination - Global",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REPORTPRINTAS"
        },
        "RESERVEAMT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESERVEAMT"
        },
        "SHIPTO": {
          "$ref": "#/definitions/entitiesListSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOKEY"
        },
        "STARTDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STARTDATE"
        },
        "STARTOPEN": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1970-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STARTOPEN"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUPERVISORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORID"
        },
        "SUPERVISORKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORKEY"
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORNAME"
        },
        "TAXID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXID"
        },
        "VENDENTITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDENTITY"
        },
        "VENDORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "WEEKENDS": {
          "type": "string",
          "x-samplevalue": "SUNDAY,SATURDAY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WEEKENDS"
        },
        "WEEKSTART": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WEEKSTART"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "salesOrdersListSUBTOTALS": {
      "properties": {
        "sodocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/salesOrdersListSUBTOTALSSodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPostReqSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqSUBTOTALSSUBTOTAL": {
      "properties": {
        "AMT_PERC": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "APPORTIONED": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DISC_CHARGE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLOFFSETACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISTAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "VALUE": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "SUBTOTAL",
      "type": "object"
    },
    "postARAccountLabelsRes": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "Satish ARAcc"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "14"
        }
      },
      "title": "postARAccountLabelsRes",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ARACCOUNTLABEL"
    },
    "salesOrdersList_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Leave Transaction Open"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Sales Order"
        },
        "DISCOUNT_ON_EXTENDEDPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Sales Order"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPAYMENTS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLEPROJECTACTUALBILLINGS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLERENEWALS": {
          "type": "string",
          "x-samplevalue": "Generate"
        },
        "ENABLEREVREC": {
          "type": "string",
          "x-samplevalue": "Post"
        },
        "ENABLESCHEDULE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_COSTING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_DISCOUNT_CHARGE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/salesOrdersList_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "string"
        },
        "PRCLISTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string",
          "x-samplevalue": "Base Price List"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Sales Orders"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "RENEWONLYCONVERTEDLINE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "REQUIRE_DISCOUNT_MEMO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Sales Orders"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "TERM_NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "G"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetById_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-samplevalue": "Always"
        },
        "ALLOWEDITDELIVERTO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Pay to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Return to"
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-samplevalue": "Deliver to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Leave Transaction Open"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Purchase Order"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Purchase Order"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchaseOrdersGetById_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PRCLISTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string",
          "x-samplevalue": "Base Price List PO"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Purchase Orders"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Purchase Orders"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE3": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "TERM_NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "savingsAccountsGetAllRespCHECKINFOCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "982 Market St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 94102
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqExchratedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{exchratedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{exchratedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{exchratedate.year}"
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "exchangeRateGetListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FROM_CURRENCY": {
          "type": "string",
          "x-samplevalue": "INR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TO_CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TYPENAME": {
          "type": "string",
          "x-samplevalue": "Testpollupdate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "09/27/2019 03:14:55",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "09/27/2019 03:14:55",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-has-customfields": "false",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "entitiesListCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/entitiesListCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryDELIVERTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUPPOGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "employeesById": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "BIRTHDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "dob",
          "x-displayName": "BIRTHDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-samplevalue": "string"
        },
        "CLASSKEY": {
          "type": "string",
          "x-displayName": "CLASSKEY"
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTACTKEY",
          "x-samplevalue": 200
        },
        "CONTACT_LIST_INFO": {
          "$ref": "#/definitions/employeesByIdCONTACT_LIST_INFO"
        },
        "CONTACT_NAME": {
          "type": "string",
          "x-displayName": "CONTACT_NAME",
          "x-samplevalue": "Yeganeh, Selma"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": "string"
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTKEY",
          "x-samplevalue": 2
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-alias": "department.name",
          "x-displayName": "DEPARTMENTTITLE",
          "x-samplevalue": "Services"
        },
        "EARNINGTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EARNINGTYPEKEY",
          "x-samplevalue": 2
        },
        "EARNINGTYPEMETHOD": {
          "type": "string",
          "x-displayName": "EARNINGTYPEMETHOD",
          "x-samplevalue": "H"
        },
        "EARNINGTYPENAME": {
          "type": "string",
          "x-displayName": "EARNINGTYPENAME",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202"
        },
        "EMPLOYEERATE": {
          "$ref": "#/definitions/employeesByIdEMPLOYEERATE"
        },
        "EMPLOYEETYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "EMPLOYEETYPE",
          "x-samplevalue": "string"
        },
        "EMPLOYEETYPE1099TYPE": {
          "type": "string",
          "x-displayName": "EMPLOYEETYPE1099TYPE"
        },
        "EMPLOYEE_POSITIONSKILL": {
          "$ref": "#/definitions/employeesByIdEMPLOYEE_POSITIONSKILL"
        },
        "EMPTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPTYPEKEY",
          "x-samplevalue": 1
        },
        "ENDDATE": {
          "type": "string",
          "x-alias": "releaseDate",
          "x-displayName": "ENDDATE",
          "x-samplevalue": "string"
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "E196"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GENDER": {
          "type": "string",
          "x-alias": "gender",
          "x-displayName": "GENDER",
          "x-samplevalue": "string"
        },
        "GENERIC": {
          "type": "boolean",
          "x-displayName": "GENERIC",
          "x-samplevalue": false
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "string"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 7
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "United Kingdom"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME"
        },
        "MELOCATIONKEY": {
          "type": "string",
          "x-displayName": "MELOCATIONKEY"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": 118
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY"
        },
        "PERSONALINFO": {
          "$ref": "#/definitions/employeesByIdPERSONALINFO"
        },
        "POSTACTUALCOST": {
          "type": "string",
          "x-displayName": "POSTACTUALCOST",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "200"
        },
        "SSN": {
          "format": "int32",
          "type": "string",
          "x-alias": "ssn",
          "x-displayName": "SSN",
          "x-samplevalue": "string"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "hireDate",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPDOCFOLDERKEY": {
          "type": "string",
          "x-displayName": "SUPDOCFOLDERKEY"
        },
        "SUPDOCFOLDERNAME": {
          "type": "string",
          "x-displayName": "SUPDOCFOLDERNAME"
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": "string"
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-displayName": "SUPERVISORNAME",
          "x-samplevalue": "Holdsworth, Allan"
        },
        "TERMINATIONTYPE": {
          "type": "string",
          "x-displayName": "TERMINATIONTYPE",
          "x-samplevalue": "string"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "title",
          "x-displayName": "TITLE",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemexpiration": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "invoicesAdvancedGETByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "entitiesListLOCATIONENTITY": {
      "properties": {
        "LOCATIONTYPE": {
          "type": "string",
          "x-samplevalue": "N"
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLACCTRANGES": {
      "properties": {
        "ACCTRANGE": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLACCTRANGESACCTRANGE"
          },
          "type": "array"
        }
      },
      "title": "GLACCTRANGES",
      "type": "object"
    },
    "OTHERRECEIPTSENTRIES_SalesReceipt_GetById": {
      "properties": {
        "otherreceiptsentry": {
          "items": {
            "$ref": "#/definitions/otherreceiptsentry_SalesReceipt_GetById"
          },
          "type": "array"
        }
      },
      "title": "OTHERRECEIPTSENTRIES",
      "type": "object",
      "x-has-customfields": false
    },
    "OrderEntryTransactionLegacyGetByIdDateposted": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "employeesByIdEMPLOYEERATEEmployeerate": {
      "properties": {
        "BILLINGRATE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.63
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        },
        "EMPLOYEEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 194
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Yeganeh, Selma"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RATEENDDATE": {
          "type": "string"
        },
        "RATESTARTDATE": {
          "type": "string",
          "x-samplevalue": "07/12/2015"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "SALARYRATE": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "paymentsLegacyApplyPostReq": {
      "properties": {
        "arpaymentitems": {
          "$ref": "#/definitions/paymentsLegacyApplyPostReqArpaymentitems"
        },
        "arpaymentkey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1215
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "my memo"
        },
        "overpaydeptid": {
          "type": "string"
        },
        "overpaylocid": {
          "type": "string"
        },
        "paymentdate": {
          "$ref": "#/definitions/paymentsLegacyApplyPostReqPaymentdate"
        }
      },
      "required": [
        "arpaymentkey",
        "paymentdate",
        "arpaymentitems"
      ],
      "title": "paymentsLegacyApplyPostReq",
      "type": "object"
    },
    "paymentsLegacyApplyPostRes": {
      "properties": {
        "arpaymentid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 923
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "paymentsLegacyApplyPostRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "arpaymentid"
      ],
      "x-vendor-objectname": "arpayment",
      "type": "object"
    },
    "itemsGetByIdUOMSOUOMDETAIL": {
      "properties": {
        "CONVFACTOR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNIT": {
          "type": "string",
          "x-alias": "salesUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "locationGroupsListMEMBERSLocationgrpmember": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "LOCATIONSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "patchBillsPaymentsResponse": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APPYMT",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetailsItemdetail"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "vendorsPostReqDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ZIP": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedListARINVOICEITEMS": {
      "properties": {
        "arinvoiceitem": {
          "$ref": "#/definitions/invoicesAdvancedListARINVOICEITEMSArinvoiceitem"
        }
      },
      "type": "object"
    },
    "creditMemosGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "creditMemosGetById",
      "type": "object",
      "properties": {
        "ARADJUSTMENTITEMS": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLARADJUSTMENTITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-11-20T00:48:12Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "BILLTO": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOCONTACTNAME"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOPAYTOCONTACTNAME"
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOPAYTOKEY"
        },
        "CONTACT": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTOMER": {
          "type": "string",
          "x-samplevalue": "10001--Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMER"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "AsasaS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "IN0878",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHANGE_RATE"
        },
        "EXCHRATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATE"
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATEDATE"
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATETYPE"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_DATE"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXTERNALURL"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "4.AR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODULEKEY"
        },
        "PARENTPAYMENT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTPAYMENT"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "Adjustments (USD): 2018/11/19 16:48:12:4799 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCH"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2242,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCHKEY"
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RAWSTATE"
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "ARADJ0004",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2729,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ra",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "SHIPTO": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOCONTACTNAME"
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTORETURNTOCONTACTNAME"
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTORETURNTOKEY"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPDOCID"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALDUE"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALPAID"
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALSELECTED"
        },
        "TRX_ENTITYDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 512,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_ENTITYDUE"
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALDUE"
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALPAID"
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALSELECTED"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "WHENPAID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPAID"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-19",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPOSTED"
        }
      }
    },
    "updateAccountGroupGLACCTGRPS": {
      "properties": {
        "GLACCTGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLACCTGRPSGLACCTGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLACCTGRPS",
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Sales only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "ITEM",
      "type": "object"
    },
    "inventoryTransactionsByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "createFile": {
      "properties": {
        "attachments": {
          "$ref": "#/definitions/createFileAttachments"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "My new descriptsion"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "9701769423"
        },
        "supdocname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "supdocid"
      ],
      "title": "createFile",
      "x-primary-key": [
        "supdocid"
      ],
      "type": "object"
    },
    "contractGetByIdSHIPTO": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "journalEntryPatchReqENTRIESGLENTRYTAXENTRIES": {
      "properties": {
        "TAXENTRY": {
          "items": {
            "$ref": "#/definitions/journalEntryPatchReqENTRIESGLENTRYTAXENTRIESTAXENTRY"
          },
          "type": "array"
        }
      },
      "title": "TAXENTRIES",
      "type": "object"
    },
    "customersPOSTRequestDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "createAccountGroup": {
      "properties": {
        "ASOF": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DBCR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERCLASS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERCUSTOMER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERDEPT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTEREMPLOYEE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERGLDIM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERITEM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERLOC": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERPROJECT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FILTERVENDOR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "GLACCTGRPS": {
          "$ref": "#/definitions/createAccountGroupGLACCTGRPS"
        },
        "GLACCTRANGES": {
          "$ref": "#/definitions/createAccountGroupGLACCTRANGES"
        },
        "GLCATGRPS": {
          "$ref": "#/definitions/createAccountGroupGLCATGRPS"
        },
        "GLCOMPGRPS": {
          "$ref": "#/definitions/createAccountGroupGLCOMPGRPS"
        },
        "GLDIM": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "GLSTATACCTRANGES": {
          "$ref": "#/definitions/createAccountGroupGLSTATACCTRANGES"
        },
        "GLSTATCATGRPS": {
          "$ref": "#/definitions/createAccountGroupGLSTATCATGRPS"
        },
        "ISKPI": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEMBERTYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "NORMAL_BALANCE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TOTALTITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "NAME",
        "MEMBERTYPE",
        "RANGEFROM",
        "RANGETO",
        "CHILDNAME",
        "CATEGORYNAME"
      ],
      "title": "createAccountGroup",
      "type": "object"
    },
    "paymentsGetById": {
      "properties": {
        "ACKMESSAGEKEY": {
          "type": "string",
          "x-displayName": "ACKMESSAGEKEY"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:22:35Z"
        },
        "BANKACKNOWLEDGED": {
          "type": "string",
          "x-displayName": "BANKACKNOWLEDGED"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD"
        },
        "BATCHTITLE": {
          "type": "string",
          "x-displayName": "BATCHTITLE",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch"
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED"
        },
        "CLRDATE": {
          "type": "string",
          "x-displayName": "CLRDATE"
        },
        "CONFMESSAGEKEY": {
          "type": "string",
          "x-displayName": "CONFMESSAGEKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD"
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY"
        },
        "CUSTOMERDUE": {
          "type": "string",
          "x-alias": "totalOutstandingAmount",
          "x-displayName": "CUSTOMERDUE"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "customer.id",
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTOMERNAME"
        },
        "DELIVERYMETHOD": {
          "type": "string",
          "x-displayName": "DELIVERYMETHOD"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Rent 2015 Location 120"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER"
        },
        "DOCUMENTNUMBER": {
          "type": "string",
          "x-displayName": "DOCUMENTNUMBER"
        },
        "FINANCIALACCOUNT": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-displayName": "FINANCIALACCOUNT"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA"
        },
        "MEMO": {
          "type": "string",
          "x-displayName": "MEMO",
          "x-samplevalue": "Rent 2015 Location 120"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP"
        },
        "NR_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TOTALENTERED",
          "x-samplevalue": 0
        },
        "NR_TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TRX_TOTALENTERED",
          "x-samplevalue": 0
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": false
        },
        "PAYMENTAMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "PAYMENTAMOUNT",
          "x-samplevalue": 6850.62
        },
        "PAYMENTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "PAYMENTTRXAMOUNT": {
          "format": "double",
          "type": "number",
          "x-displayName": "PAYMENTTRXAMOUNT",
          "x-samplevalue": 6850.62
        },
        "PAYMENTTYPE": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "PAYMENTTYPE"
        },
        "POSTINGDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "POSTINGDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 1
        },
        "PRENTRY": {
          "$ref": "#/definitions/paymentsGetByIdPRENTRY"
        },
        "PRXBATCHKEY": {
          "type": "string",
          "x-displayName": "PRXBATCHKEY"
        },
        "RECEIPTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentReceiptDate",
          "x-displayName": "RECEIPTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        },
        "RECON_DATE": {
          "type": "string",
          "x-displayName": "RECON_DATE"
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "VI0001"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pi"
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "A"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMKEY",
          "x-samplevalue": 3
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "Net 30"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 6850.62
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0
        },
        "TRXTOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRXTOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 6850.62
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-samplevalue": "V20008"
        },
        "VENDORACCTNOKEY": {
          "type": "string",
          "x-displayName": "VENDORACCTNOKEY"
        },
        "WHENBANKCONFIRMED": {
          "type": "string",
          "x-displayName": "WHENBANKCONFIRMED"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-displayName": "WHENDISCOUNT"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqExternalapprovedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{externalapprovedon.year}"
        }
      },
      "title": "externalapprovedon",
      "type": "object"
    },
    "journalsByIdENTRIESGlentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1231
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Subscriptions"
        },
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BASELOCATION_NAME": {
          "type": "string"
        },
        "BASELOCATION_NO": {
          "type": "string"
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BATCHTITLE": {
          "type": "string",
          "x-samplevalue": "Contract CN0001 Line No. 1 : 01/01/2015 Batch"
        },
        "BATCH_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "BATCH_NUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BILLABLE": {
          "type": "string"
        },
        "BILLED": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "DETAILID": {
          "type": "string"
        },
        "DOCUMENT": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "IETYPE": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "Machine Learning Core"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PARENTGLENTRYKEY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECON_DATE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RGLDIM169562_10003": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted"
        },
        "STATISTICAL": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TAXDETAILKEY": {
          "type": "string"
        },
        "TIMEPERIOD": {
          "type": "string"
        },
        "TMPLENTRYKEY": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TR_TYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNITS": {
          "type": "string"
        },
        "USERNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "08/08/2017 13:40:42"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/08/2017 13:40:42"
        }
      },
      "title": "glentry",
      "type": "object"
    },
    "purchaseOrdersGetByIdSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "shippingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusKitstatusDeliverydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "deliverydate",
      "type": "object"
    },
    "accountsBalanceListGetResObject": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": 3500,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ACCOUNTREC",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "ACCOUNTTITLE",
          "x-samplevalue": "Satish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BOOKID": {
          "type": "string",
          "x-displayName": "BOOKID",
          "x-samplevalue": "605ACCRUAL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTRACTDIMKEY",
          "x-samplevalue": 345,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-samplevalue": "CN0233",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-displayName": "CONTRACTNAME",
          "x-samplevalue": "10233 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "CAD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERDIMKEY",
          "x-samplevalue": 238,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": 10233,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "Advanced Ceramics Research",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-displayName": "DEPARTMENTTITLE",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPLOYEEDIMKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": 202,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-displayName": "EMPLOYEENAME",
          "x-samplevalue": "Horton, Tim",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENDBAL": {
          "format": "double",
          "type": "number",
          "x-displayName": "ENDBAL",
          "x-samplevalue": -46041.69,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORBAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "FORBAL",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLDIMCHANNEL",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ITEMDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ITEMID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-displayName": "ITEMNAME",
          "x-samplevalue": "Machine Learning Core",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONDIMKEY",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "Canada",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONNO",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OPENBAL": {
          "format": "double",
          "type": "number",
          "x-displayName": "OPENBAL",
          "x-samplevalue": -46041.69,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PERIOD": {
          "type": "string",
          "x-displayName": "PERIOD",
          "x-samplevalue": "Month Ended June 2016",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PROJECTDIMKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-displayName": "PROJECTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTADJCREDIT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTADJCREDIT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTADJDEBIT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTADJDEBIT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTCREDIT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTCREDIT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTDEBIT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTDEBIT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORDIMKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORID",
          "x-samplevalue": 20026,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "Microdot Technologies",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "accountsBalanceListGetResObject",
      "type": "object",
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "purchasingTransactionEntriesGetByIdDELIVERTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllReturnto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-displayName": "Contact Name",
          "x-samplevalue": "American Express(V20001)"
        }
      },
      "title": "returnto",
      "type": "object"
    },
    "locationsListIERECEIVABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "arAccountLabelsListObject": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-displayName": "ACCOUNTLABEL",
          "x-samplevalue": "99zt1l5x",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFRRACCOUNTNO": {
          "type": "string",
          "x-displayName": "DEFRRACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFRRACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "DEFRRACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "vzfskab0",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLACCOUNTNO",
          "x-samplevalue": 5332,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "GLACCOUNTTITLE",
          "x-samplevalue": "asdfasfaws",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ISTAX": {
          "type": "boolean",
          "x-displayName": "ISTAX",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "OFFSETGLACCOUNTTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 23,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "REVRECTEMPLKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECTEMPLTITLE": {
          "type": "string",
          "x-displayName": "REVRECTEMPLTITLE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "type": "boolean",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXABLE": {
          "type": "boolean",
          "x-displayName": "TAXABLE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXAUTHORITYKEY": {
          "type": "string",
          "x-displayName": "TAXAUTHORITYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXCODE": {
          "type": "string",
          "x-displayName": "TAXCODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXGROUP": {
          "$ref": "#/definitions/arAccountLabelsListTAXGROUP"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqRECALLSRECALL": {
      "properties": {
        "RECDOCPAR": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "RECALL",
      "type": "object"
    },
    "salesOrdersGetById": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-displayName": "ADDGLBATCHKEY"
        },
        "ADJ": {
          "type": "boolean",
          "x-displayName": "ADJ",
          "x-samplevalue": false
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-29T16:23:14Z"
        },
        "BACKORDER": {
          "type": "string",
          "x-displayName": "BACKORDER",
          "x-samplevalue": "No"
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD"
        },
        "BILLTO": {
          "$ref": "#/definitions/salesOrdersGetByIdBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY",
          "x-samplevalue": 360
        },
        "CLOSED": {
          "type": "boolean",
          "x-displayName": "CLOSED",
          "x-samplevalue": false
        },
        "CNCONTRACTID": {
          "type": "string",
          "x-displayName": "CNCONTRACTID"
        },
        "CNCONTRACTKEY": {
          "type": "string",
          "x-displayName": "CNCONTRACTKEY"
        },
        "CNCONTRACTNAME": {
          "type": "string",
          "x-displayName": "CNCONTRACTNAME"
        },
        "CONTACT": {
          "$ref": "#/definitions/salesOrdersGetByIdCONTACT"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-displayName": "CONTRACTDESC"
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1
        },
        "CREATEDFROM": {
          "type": "string",
          "x-displayName": "CREATEDFROM"
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDUSER",
          "x-samplevalue": 1
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-displayName": "CREATEDUSERID",
          "x-samplevalue": "admin"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD"
        },
        "CUSTREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREC",
          "x-samplevalue": 50
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "customer.id",
          "x-displayName": "CUSTVENDID",
          "x-samplevalue": 10045
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTVENDNAME",
          "x-samplevalue": "Dharma Initiative"
        },
        "DATEPRINTED": {
          "type": "string",
          "x-displayName": "DATEPRINTED"
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Sales Order-SO0013"
        },
        "DOCNO": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNO",
          "x-samplevalue": "SO0013"
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-displayName": "DOCPARCLASS",
          "x-samplevalue": "ORDER"
        },
        "DOCPARID": {
          "type": "string",
          "x-displayName": "DOCPARID",
          "x-samplevalue": "Sales Order"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DOCPARKEY",
          "x-samplevalue": 9
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-displayName": "DOCPAR_IN_OUT",
          "x-samplevalue": "Increase"
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-displayName": "ENTGLGROUP"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-11-01"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/salesOrdersGetByIdEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL"
        },
        "HASADVBILLING": {
          "type": "boolean",
          "x-displayName": "HASADVBILLING",
          "x-samplevalue": false
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-displayName": "HASPOSTEDREVREC",
          "x-samplevalue": "T"
        },
        "HISTORY": {
          "$ref": "#/definitions/salesOrdersGetByIdHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-displayName": "INVBATCHKEY"
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-displayName": "INVOICERUNKEY"
        },
        "INVOICERUN_DESCRIPTION": {
          "type": "string",
          "x-displayName": "INVOICERUN_DESCRIPTION"
        },
        "INVOICERUN_EXPENSEPRICEMARKUP": {
          "type": "string",
          "x-displayName": "INVOICERUN_EXPENSEPRICEMARKUP"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA"
        },
        "MESSAGE": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "MESSAGE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1
        },
        "NOTE": {
          "type": "string",
          "x-displayName": "NOTE"
        },
        "ORIGDOCDATE": {
          "type": "string",
          "x-displayName": "ORIGDOCDATE"
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-displayName": "PAYMENTSTATUS",
          "x-samplevalue": "Open"
        },
        "PONUMBER": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-displayName": "PONUMBER"
        },
        "PRINTED": {
          "type": "string",
          "x-displayName": "PRINTED",
          "x-samplevalue": "No"
        },
        "PRINTEDBY": {
          "type": "string",
          "x-displayName": "PRINTEDBY"
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-displayName": "PRINTEDUSERID"
        },
        "PRINVBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRINVBATCHKEY",
          "x-samplevalue": 14
        },
        "PROJECT": {
          "type": "string",
          "x-displayName": "PROJECT"
        },
        "PROJECTKEY": {
          "type": "string",
          "x-displayName": "PROJECTKEY"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME"
        },
        "PRRECORDKEY": {
          "type": "string",
          "x-displayName": "PRRECORDKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 831
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-displayName": "RENEWEDDOC"
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-displayName": "SALESCONTRACT",
          "x-samplevalue": "N"
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY"
        },
        "SHIPTO": {
          "$ref": "#/definitions/salesOrdersGetByIdSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 360
        },
        "SHIPVIA": {
          "type": "string",
          "x-displayName": "SHIPVIA"
        },
        "SIGN_FLAG": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SIGN_FLAG",
          "x-samplevalue": 1
        },
        "SODOCUMENTENTRIES": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIES"
        },
        "SOURCERECURKEY": {
          "type": "string",
          "x-displayName": "SOURCERECURKEY"
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Converted"
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "subTotal",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": 5000
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/salesOrdersGetByIdSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID"
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": false
        },
        "TERM": {
          "$ref": "#/definitions/salesOrdersGetByIdTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-displayName": "TOTAL",
          "x-samplevalue": 5000
        },
        "TOTALDUE": {
          "type": "string",
          "x-alias": "totalOutstandingAmount",
          "x-displayName": "TOTALDUE"
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "type": "string",
          "x-displayName": "TOTALPAID"
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_SUBTOTAL",
          "x-samplevalue": 5000
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTAL",
          "x-samplevalue": 5000
        },
        "TRX_TOTALDUE": {
          "type": "string",
          "x-displayName": "TRX_TOTALDUE"
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "type": "string",
          "x-displayName": "TRX_TOTALPAID"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No"
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-displayName": "USEDASCONTRACT"
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USER",
          "x-samplevalue": 1
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "admin"
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-displayName": "VENDORDOCNO"
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "VSOEPRCLSTKEY"
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-displayName": "VSOEPRICELIST"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/salesOrdersGetByIdWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-01"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENPOSTED": {
          "type": "string",
          "x-displayName": "WHENPOSTED"
        },
        "_DOCPAR": {
          "$ref": "#/definitions/salesOrdersGetById_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "purchasingTransactionEntriesGetAllObject": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "06/26/2019 07:19:16"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 480,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10453,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "AmerisourceBergen (OE)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Purchase Requisition-PR0036",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1065,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "06/26/2019",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetAllITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Billable Expenses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Reimbursed Expenses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 420,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "Billable Expenses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LINETOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2537,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "P",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SOURCE_DOCID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0010",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SOURCE_DOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 933,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SOURCE_DOCLINEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2406,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "inactive",
          "x-searchable": true
        },
        "TAXABLEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TAXABSVAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20003,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "06/26/2019",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "06/26/2019 07:19:16",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "exchangerateentryObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-readOnly": true,
          "x-samplevalue": 1,
          "x-nullable": true,
          "x-displayName": "CREATEDBY"
        },
        "EFFECTIVE_START_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-01-01",
          "x-nullable": true,
          "x-displayName": "EFFECTIVE_START_DATE"
        },
        "EXCHANGERATEKEY": {
          "format": "int32",
          "type": "integer",
          "x-readOnly": true,
          "x-samplevalue": 6,
          "x-nullable": true,
          "x-displayName": "EXCHANGERATEKEY"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 77,
          "x-nullable": true,
          "x-displayName": "EXCHANGE_RATE"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-readOnly": true,
          "x-samplevalue": 1,
          "x-nullable": true,
          "x-displayName": "MODIFIEDBY"
        },
        "RECIPROCAL_RATE": {
          "type": "string",
          "x-samplevalue": ".01298701",
          "x-nullable": true,
          "x-displayName": "RECIPROCAL_RATE"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-readOnly": true,
          "x-samplevalue": 7,
          "x-nullable": true,
          "x-displayName": "RECORDNO"
        },
        "RECORD_URL": {
          "type": "string",
          "x-nullable": true,
          "x-displayName": "RECORD_URL"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-readOnly": true,
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-nullable": true,
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-readOnly": true,
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-nullable": true,
          "x-displayName": "WHENMODIFIED"
        }
      },
      "title": "exchangerateentryObject",
      "type": "object",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "EXCHANGERATEENTRY"
    },
    "createAccountGroupGLCATGRPS": {
      "properties": {
        "GLACCTGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLCATGRPSGLACCTGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLCATGRPS",
      "type": "object"
    },
    "paymentsListPRENTRYArpaymentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 93
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "Department Allocation 120"
        },
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount",
          "x-samplevalue": 685.06
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREDREVACCTNO": {
          "type": "string"
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "GLOFFSET": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].invoice.id",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RELEASETOPAY": {
          "type": "string"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10013": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "SUBTOTAL": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 685.06
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORACCTNOKEYVERSION": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "usersListCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPPOGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "classesListObject": {
      "properties": {
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-displayName": "PARENTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrderEntryTransactionLegacyListShipto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "Maxwell Warner(C1006)"
        }
      },
      "title": "shipto",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "type": "string"
        }
      },
      "title": "INVGL_ACCOUNTS",
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIES": {
      "properties": {
        "podocumententry": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententry"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchResp": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "OrdersEntryTransactionLegacyPatchResp",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIES": {
      "properties": {
        "sodocumententry": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententry"
        }
      },
      "type": "object"
    },
    "vendorsPostReqDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsPostReqDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententrySHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "creditMemosGetByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosGetByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "recurringOrderEntryTransactionsObject": {
      "properties": {
        "ACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "Bank",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "300_RBC--Royal Bank of Canada",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "AEoIF+7n21gOlIHONQ3DLw==",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "Royal Bank of Canada",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsCONTACT"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-samplevalue": "dasdsfasdf",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12121,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITCARDTYPE": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "CAD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string",
          "x-samplevalue": "C10002",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERBANKACCOUNT": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsCUSTOMERBANKACCOUNT"
        },
        "CUSTOMERBANKACCOUNTKEY": {
          "type": "string"
        },
        "CUSTOMERCREDITCARD": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsCUSTOMERCREDITCARD"
        },
        "CUSTOMERCREDITCARDKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "1--12121"
        },
        "DOCHDRNO": {
          "type": "string"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DOCSTATUS": {
          "type": "string",
          "x-samplevalue": "Active"
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "C10002",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATE": {
          "type": "string",
          "x-samplevalue": ".7555",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-15",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "EXECCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FREQUENCY": {
          "type": "string",
          "x-samplevalue": "Days"
        },
        "GLACCOUNTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLACCTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLACCTTITLE": {
          "type": "string"
        },
        "INTERVAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LASTEXECDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LASTPAYMENTRESULT": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMOKEY": {
          "type": "string"
        },
        "MESSAGE": {
          "type": "string",
          "x-samplevalue": "adasdfasdfsfd",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NEXTEXECDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NOTE": {
          "type": "string"
        },
        "PAYINFULL": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PAYMENTAMOUNT": {
          "type": "string"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "Printed Check",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PONUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECT": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECURDUEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-12-13",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECURPAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECUR_RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REPEATBY": {
          "type": "string",
          "x-samplevalue": "D",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REPEATCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SCHEDULEDCONTACTEMAIL": {
          "type": "string"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3628,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPVIA": {
          "type": "string",
          "x-samplevalue": "roads",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SOURCEDOCUMENT": {
          "type": "string"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-13",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERM": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsTERM"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTAL": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.73,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_SUBTOTAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 42,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDENTITY": {
          "type": "string"
        },
        "VENDORDOCNO": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsWAREHOUSE"
        },
        "WHENMODIFIED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-15",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionsListsSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsListsSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "apGetAccountLabelsRes": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "apGetAccountLabelsRes",
      "type": "object",
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "0w78u42i",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACCOUNTLABEL"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFERREDREVACCTKEY"
        },
        "DEFRRACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFRRACCOUNTNO"
        },
        "DEFRRACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFRRACCOUNTTITLE"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "3bbzugt7",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099BOX"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099TYPE"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5332,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCOUNTNO"
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "asdfasfaws",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLACCOUNTTITLE"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISTAX"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETGLACCOUNTNO"
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OFFSETGLACCOUNTTITLE"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REVRECTEMPLKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVRECTEMPLKEY"
        },
        "REVRECTEMPLTITLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVRECTEMPLTITLE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUBTOTAL": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTAL"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXABLE"
        },
        "TAXAUTHORITYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXAUTHORITYKEY"
        },
        "TAXCODE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXCODE"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/apAccountLabelsListTAXGROUP"
        }
      }
    },
    "itemsPostResponse": {
      "properties": {
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ITEM",
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqENTITY_PROPSENTITY_PROP"
          },
          "type": "array"
        }
      },
      "title": "ENTITY_PROPS",
      "type": "object"
    },
    "employeesPatchRes": {
      "properties": {
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "200"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "EMPLOYEE",
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21
        }
      },
      "title": "ITEM",
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersListSUBTOTALSSodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "contactsPATCHresponse": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "title": "contactsPATCHresponse",
      "type": "object",
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CONTACT"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY": {
      "properties": {
        "ENTRYDATE": {
          "type": "string"
        }
      },
      "title": "BILLED_TIMESHEETENTRY",
      "type": "object"
    },
    "inventoryTransactionEntriesByID": {
      "properties": {
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Receipt"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CREATETYPE": {
          "type": "string"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Warehouse"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-samplevalue": "WH1"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Beginning Balance"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Beginning Balance"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDENTITY_PROPS"
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "RECALLS": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 53
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Internal"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "INBB"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDSUBTOTALS"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TOTALS": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "G"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity and Value"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Use the default warehouse"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-21T05:11:43Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-21T05:11:43Z"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "title": "inventoryTransactionEntriesByID",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "billsPaymentsCreateAPPYMTDETAILSAPPYMTDETAIL": {
      "properties": {
        "ADJUSTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADJUSTMENTENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADVANCEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ADVANCEKEYENTRY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "DISCOUNTDATE": {
          "format": "date-time",
          "type": "string",
          "x-alias": "lines[*].discountDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "INLINEENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "INLINEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "POSADJENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "POSADJKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].bill[*].id",
          "x-samplevalue": 0
        },
        "TRX_ADJUSTMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_INLINEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_POSTEDADVANCEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqINVGL_ACCOUNTSINVGL_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISOFFSET": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ITEM_GLGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "INVGL_ACCOUNT",
      "type": "object"
    },
    "employeesByIdPERSONALINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "mobile"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "email"
        },
        "EMAIL2": {
          "type": "string",
          "x-alias": "email2"
        },
        "FAX": {
          "type": "string",
          "x-alias": "fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "firstName",
          "x-samplevalue": "Selma"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "lastName",
          "x-samplevalue": "Yeganeh"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/employeesByIdPERSONALINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "phone",
          "x-samplevalue": "020 4783 9398"
        },
        "PHONE2": {
          "type": "string",
          "x-alias": "phone2"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Selma Yeganeh"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "updateApAccountLabel": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Travel Expenses"
        },
        "GLACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "6080"
        },
        "OFFSETGLACCOUNTNO": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "12"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "required": [
        "RECORDNO"
      ],
      "title": "updateApAccountLabel",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "updateAllocations": {
      "properties": {
        "ALLOCATIONENTRIES": {
          "$ref": "#/definitions/updateAllocationsALLOCATIONENTRIES"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "updateAllocations",
      "type": "object",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ALLOCATION"
    },
    "exchangeRateTypesListObject": {
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ID",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ISDEFAULT": {
          "type": "boolean",
          "x-displayName": "ISDEFAULT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORD_URL": {
          "type": "string",
          "x-displayName": "RECORD_URL",
          "x-samplevalue": "Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-has-customfields": false,
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "x-vendor-objectname": "EXCHANGERATETYPES",
      "type": "object"
    },
    "usersListCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 953637363
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Satish Test"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "abortnyk@intacct.com"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Andrew"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Bortnyk"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/usersListCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Bortnyk,Andrew"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemLinesubtotals": {
      "properties": {
        "linesubtotal": {
          "type": "string"
        }
      },
      "title": "linesubtotals",
      "type": "object"
    },
    "employeesListCONTACT_LIST_INFO": {
      "properties": {
        "employeeentitycontacts": {
          "items": {
            "$ref": "#/definitions/employeesListCONTACT_LIST_INFOEmployeeentitycontacts"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "customersPOSTRequestDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersPOSTRequestDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Tyrell Corp."
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUP": {
      "properties": {
        "COGSACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPCOGSACCOUNT"
        },
        "DEFRRGLACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPDEFRRGLACCOUNT"
        },
        "EXPENSEACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPEXPENSEACCOUNT"
        },
        "INCOMEACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPINCOMEACCOUNT"
        },
        "INVENTORYACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPINVENTORYACCOUNT"
        },
        "OEGLACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPOEGLACCOUNT"
        },
        "POGLACCOUNT": {
          "$ref": "#/definitions/itemsListITEMGLGROUPPOGLACCOUNT"
        }
      },
      "type": "object"
    },
    "vendorsListCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "contact.firstName "
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsListCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-alias": "webSite"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitem": {
      "properties": {
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "cost": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitemCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdetails": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sourcelinekey": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "itemid",
        "warehouseid",
        "quantity"
      ],
      "title": "ictransitem",
      "type": "object"
    },
    "customersGETByIdDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "inventoryTransactionEntriesByIDSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "orderEntryTransactionsByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "paymentsLegacyPostReqArpaymentitem": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "invoicekey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2457
        }
      },
      "required": [
        "amount",
        "invoicekey"
      ],
      "title": "arpaymentitem",
      "type": "object",
      "x-has-customfields": false
    },
    "locationGroupsByIdMEMBERS": {
      "properties": {
        "locationgrpmember": {
          "$ref": "#/definitions/locationGroupsByIdMEMBERSLocationgrpmember"
        }
      },
      "title": "MEMBERS",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqDateposted": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "dateposted",
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIES": {
      "properties": {
        "sodocumententry": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "journalsById": {
      "properties": {
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "BALANCE": {
          "type": "string"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BASELOCATION_NAME": {
          "type": "string"
        },
        "BASELOCATION_NO": {
          "type": "string"
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BATCH_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01"
        },
        "BATCH_TITLE": {
          "type": "string",
          "x-samplevalue": "Contract CN0001 Line No. 1 : 01/01/2015 Batch"
        },
        "CHILDENTITY": {
          "type": "string"
        },
        "CONTRACTSCHEDULEENTRYKEY": {
          "type": "string"
        },
        "CONTRACTSCHEDULEKEY": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRIES": {
          "$ref": "#/definitions/journalsByIdENTRIES"
        },
        "GLACCTALLOCATIONRUNKEY": {
          "type": "string"
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "605R"
        },
        "JOURNALKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 15
        },
        "JOURNALSEQNO": {
          "type": "string"
        },
        "JOURNAL_BILLABLE": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USARAJUTest"
        },
        "MODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBYID": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "55.CONTRACT"
        },
        "PRBATCHKEY": {
          "type": "string"
        },
        "PRBATCHRECTYPE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "REFERENCENO": {
          "type": "string",
          "x-samplevalue": "CONTRACT CN0001 LINE NO - 1"
        },
        "REVERSED": {
          "type": "string"
        },
        "REVERSEDFROM": {
          "type": "string"
        },
        "REVERSEDKEY": {
          "type": "string"
        },
        "RRSENTRYKEY": {
          "type": "string"
        },
        "RRSKEY": {
          "type": "string"
        },
        "SCHOPKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted"
        },
        "SUPDOCID": {
          "type": "string"
        },
        "TAXIMPLICATIONS": {
          "type": "string"
        },
        "TEMPLATEKEY": {
          "type": "string"
        },
        "USERINFO": {
          "$ref": "#/definitions/journalsByIdUSERINFO"
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z"
        }
      },
      "title": "journalsById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqShipto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "shipto",
      "type": "object"
    },
    "invoicesAdvancedListSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "warehousesGetByIdSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "33Across"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyGetByIdNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "invoicesAdvancedListSHIPTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryControlPriceListsByID": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "inventoryControlPriceListsByID",
      "type": "object",
      "properties": {
        "DATEFROM": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2000-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATEFROM"
        },
        "DATETO": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2100-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DATETO"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Base Price List",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "SALEPURCHASE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALEPURCHASE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        }
      }
    },
    "patchARAccountLabel": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "patchARAccountLabel",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "ARACCOUNTLABEL"
    },
    "allocationsListALLOCATIONENTRIES": {
      "properties": {
        "allocationentry": {
          "items": {
            "$ref": "#/definitions/allocationsListALLOCATIONENTRIESAllocationentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsHISTORY": {
      "properties": {
        "dochistory": {
          "$ref": "#/definitions/orderEntryTransactionsListsHISTORYDochistory"
        }
      },
      "type": "object"
    },
    "creditCardChargesByIdCREDITCARDFEEENTRIES": {
      "properties": {
        "creditcardfeeentry": {
          "items": {
            "$ref": "#/definitions/creditCardChargesByIdCREDITCARDFEEENTRIESCreditcardfeeentry"
          },
          "type": "array"
        }
      },
      "title": "CREDITCARDFEEENTRIES",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqRevisedcompletiondate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{revisedcompletiondate.year}"
        }
      },
      "title": "revisedcompletiondate",
      "type": "object"
    },
    "DebitMemoByIdAPADJUSTMENTITEMSApadjustmentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 96
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6220
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Office Supplies"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -100
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DETAILID": {
          "type": "string"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-15"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6220
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Office Supplies"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Payable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3051
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12296
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pa"
        },
        "RGLDIM169562_10008": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -100
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20003
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "apadjustmentitem",
      "type": "object"
    },
    "itemUpdateVENDORINFO": {
      "properties": {
        "ITEMVENDOR": {
          "items": {
            "$ref": "#/definitions/itemUpdateVENDORINFOITEMVENDOR"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdPRENTRY": {
      "properties": {
        "arpaymentitem": {
          "items": {
            "$ref": "#/definitions/paymentsGetByIdPRENTRYArpaymentitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 796
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "PostapAccountLabelsP": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "SatishAcc"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "title": "PostapAccountLabelsP",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APACCOUNTLABEL"
    },
    "purchasingTransactionsLegacyPostReqActualstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.year}"
        }
      },
      "title": "actualstartdate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemPromiseddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{promiseddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{promiseddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{promiseddate.year}"
        }
      },
      "title": "promiseddate",
      "type": "object"
    },
    "apAccountLabelsListTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "locationGroupsListCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "departmentGroupsListMEMBERSDepartmentgrpmember": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin"
        },
        "DEPARTMENTSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "GROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqExchratedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "purchaseOrdersGetByIdHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 799
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Converted"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "01/31/2017"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/24/2017 16:10:59"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 798
        },
        "SOURCEDOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        }
      },
      "type": "object"
    },
    "projectUpdatePROJECTBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "vendorsPatchReq": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "APACCOUNT": {
          "type": "string",
          "x-displayName": "APACCOUNT",
          "x-samplevalue": "string"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-displayName": "BILLINGTYPE",
          "x-samplevalue": "string"
        },
        "COMMENTS": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "string"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/vendorsPatchReqCONTACTINFO"
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "CUSTOMFIELD1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DISPLAYACCTNOCHECK": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/vendorsPatchReqDISPLAYCONTACT"
        },
        "DISPLAYTERMDISCOUNT": {
          "type": "string",
          "x-displayName": "DISPLAYTERMDISCOUNT",
          "x-samplevalue": "string"
        },
        "DONOTCUTCHECK": {
          "type": "string",
          "x-displayName": "DONOTCUTCHECK",
          "x-samplevalue": "string"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "string"
        },
        "HIDEDISPLAYCONTACT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "string"
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "string"
        },
        "ONETIME": {
          "type": "string",
          "x-displayName": "ONETIME",
          "x-samplevalue": "string"
        },
        "ONHOLD": {
          "type": "string",
          "x-displayName": "ONHOLD",
          "x-samplevalue": "string"
        },
        "PARENTID": {
          "type": "string",
          "x-alias": "parent.id",
          "x-displayName": "PARENTID",
          "x-samplevalue": "string"
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-displayName": "PAYMENTPRIORITY",
          "x-samplevalue": "string"
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY",
          "x-samplevalue": "string"
        },
        "PAYTO": {
          "$ref": "#/definitions/vendorsPatchReqPAYTO"
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "string"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "string"
        },
        "RETURNTO": {
          "$ref": "#/definitions/vendorsPatchReqRETURNTO"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string",
          "x-displayName": "TAXID",
          "x-samplevalue": "string"
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "string"
        },
        "VENDORACCOUNTNO": {
          "type": "string",
          "x-displayName": "VENDORACCOUNTNO",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "VENDORID",
          "x-samplevalue": "APDM1116"
        },
        "VENDTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "VENDTYPE",
          "x-samplevalue": "string"
        }
      },
      "x-vendor-objectname": "VENDOR",
      "type": "object"
    },
    "creditCardFeeByIdCREDITCARDFEEENTRIESCreditcardfeeentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason"
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        }
      },
      "title": "creditcardfeeentry",
      "type": "object"
    },
    "purchasingTransactionDefinitionsListEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "type": "object"
    },
    "aradjustmentitemsCMPostReq": {
      "properties": {
        "lineitem": {
          "items": {
            "$ref": "#/definitions/lineitemCreditPost"
          },
          "type": "array"
        }
      },
      "required": [
        "lineitem"
      ],
      "title": "aradjustmentitemsCMPostReq",
      "type": "object",
      "x-has-customfields": false
    },
    "locationsLOCATIONSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Smith, Jane"
        }
      },
      "required": [
        "CONTACTNAME"
      ],
      "title": "SHIPTO",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIESRecurdocumententrySHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{datecreated.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{datecreated.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{datecreated.year}"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "employeesByIdPERSONALINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "address. postalCode"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "warehousesGetByIdLOC": {
      "properties": {
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "NGP-12--Nagpur"
        }
      },
      "title": "LOC",
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqSubtotalsSubtotalCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSotransitems": {
      "properties": {
        "sotransitem": {
          "items": {
            "$ref": "#/definitions/OrderEntryTransactionLegacyListSotransitemsSotransitem"
          },
          "type": "array"
        }
      },
      "title": "sotransitems",
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "customerid": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "employeeid": {
          "type": "string"
        },
        "itemid": {
          "type": "string"
        },
        "locationid": {
          "type": "string"
        },
        "percentval": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "projectid": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "billsPaymentsListObject": {
      "properties": {
        "APPYMTDETAILS": {
          "$ref": "#/definitions/billsPaymentsListAPPYMTDETAILS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:22:35Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOPAYTOCONTACTNAME",
          "x-samplevalue": "Lenovo",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BILLTOPAYTOKEY",
          "x-samplevalue": 980,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLRDATE": {
          "type": "string",
          "x-displayName": "CLRDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-displayName": "DESCRIPTION2",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "V20004",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-displayName": "EXCHANGE_RATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALACCOUNTCURRENCY": {
          "type": "string",
          "x-displayName": "FINANCIALACCOUNTCURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALACCOUNTNAME": {
          "type": "string",
          "x-displayName": "FINANCIALACCOUNTNAME",
          "x-samplevalue": "Silicon Valley Bank",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-alias": [
            {
              "alias": "checkBankAccount",
              "description": "checkBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Printed Check"
            },
            {
              "alias": "ccBankAccount",
              "description": "ccBankAccount maps to FINANCIALENTITY when value of field PAYMENTMETHOD is Credit Card"
            }
          ],
          "x-displayName": "FINANCIALENTITY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALENTITYTYPE": {
          "type": "string",
          "x-displayName": "FINANCIALENTITYTYPE",
          "x-samplevalue": "ba",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMS": {
          "$ref": "#/definitions/billsPaymentsListITEMS"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETS": {
          "$ref": "#/definitions/billsPaymentsListOFFSETS"
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PARENTPAYMENTKEY": {
          "type": "string",
          "x-displayName": "PARENTPAYMENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTMETHOD": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "PAYMENTMETHOD",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTMETHODKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMENTMETHODKEY",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-displayName": "PAYMENTPRIORITY",
          "x-samplevalue": "N",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "VI0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "3068",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-displayName": "VENDORID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "Lenovo",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-16T16:07:37.278Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesubtotals": {
      "properties": {
        "updatesubtotal": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotal"
          },
          "type": "array"
        }
      },
      "title": "updatesubtotals",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "title": "BILLINGSCHEDULEENTRY",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitems": {
      "properties": {
        "sotransitem": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitem"
          },
          "type": "array"
        }
      },
      "title": "sotransitems",
      "type": "object"
    },
    "createAccountGroupGLACCTRANGESACCTRANGE": {
      "properties": {
        "RANGEFROM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RANGETO": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "NAME",
        "MEMBERTYPE",
        "RANGEFROM",
        "RANGETO",
        "CHILDNAME",
        "CATEGORYNAME"
      ],
      "title": "ACCTRANGE",
      "type": "object"
    },
    "purchaseOrdersGetByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemsPostWAREHOUSEINFO": {
      "properties": {
        "ITEMWAREHOUSEINFO": {
          "$ref": "#/definitions/itemsPostWAREHOUSEINFOITEMWAREHOUSEINFO"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY": {
      "properties": {
        "ENTRYDATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPromiseddate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{promiseddate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{promiseddate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{promiseddate.year}"
        }
      },
      "title": "promiseddate",
      "type": "object"
    },
    "arTermsListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCAMOUNT": {
          "type": "string",
          "x-displayName": "DISCAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCCALCON": {
          "type": "string",
          "x-displayName": "DISCCALCON",
          "x-samplevalue": "Invoice total",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCDATE": {
          "type": "string",
          "x-displayName": "DISCDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCFROM": {
          "type": "string",
          "x-displayName": "DISCFROM",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCFUDGEDAYS": {
          "type": "string",
          "x-displayName": "DISCFUDGEDAYS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCPERCAMN": {
          "type": "string",
          "x-displayName": "DISCPERCAMN",
          "x-samplevalue": "$",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DUEDATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DUEDATE",
          "x-samplevalue": 30,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DUEFROM": {
          "type": "string",
          "x-displayName": "DUEFROM",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PENAMOUNT": {
          "type": "string",
          "x-displayName": "PENAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PENFUDGEDAYS": {
          "type": "string",
          "x-displayName": "PENFUDGEDAYS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PENPERCAMN": {
          "type": "string",
          "x-displayName": "PENPERCAMN",
          "x-samplevalue": "$",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PEN_TYPES": {
          "type": "string",
          "x-displayName": "PEN_TYPES",
          "x-samplevalue": "No Penalty",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "arAdjustmentsPatchReq": {
      "properties": {
        "action": {
          "type": "string",
          "x-samplevalue": "Draft"
        },
        "adjustmentno": {
          "type": "string",
          "x-samplevalue": "Pymst-207621"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "AGR001"
        },
        "datecreated": {
          "$ref": "#/definitions/arAdjustmentsPatchReqDatecreated"
        },
        "dateposted": {
          "$ref": "#/definitions/arAdjustmentsPatchReqDateposted"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "This is an updated adjustment"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "Test"
        },
        "invoiceno": {
          "type": "string",
          "x-samplevalue": "207621"
        },
        "updatearadjustmentitems": {
          "$ref": "#/definitions/arAdjustmentsPatchReqAradjustmentitems"
        }
      },
      "title": "arAdjustmentsPatchReq",
      "type": "object"
    },
    "createAllocationsPostReq": {
      "properties": {
        "ALLOCATIONENTRIES": {
          "$ref": "#/definitions/createAllocationsPostReqALLOCATIONENTRIES"
        },
        "ALLOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "ALLOCATIONID",
        "ALLOCATIONENTRIES"
      ],
      "title": "createAllocationsPostReq",
      "type": "object"
    },
    "arAdjustmentsPatchRes": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "arAdjustmentsPatchRes",
      "type": "object"
    },
    "salesOrdersListWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "entitiesListSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "08/06/2019"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:42"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1546
        },
        "SOURCEDOCUMENTID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdDatedue": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "05"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "foldersGetByIdResResponseOperationResultData": {
      "properties": {
        "supdocfolder": {
          "$ref": "#/definitions/foldersGetByIdResResponseOperationResultDataSupdocfolder"
        }
      },
      "title": "data",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "{absval}"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "{classid}"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "{contractid}"
        },
        "costtypeid": {
          "type": "string",
          "x-samplevalue": "{costtypeid}"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "{customerid}"
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{cstom}"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "{departmentid}"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "{description}"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "{employeeid}"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "{itemid}"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "{locationid}"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "{percentval}"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "{projectid}"
        },
        "taskid": {
          "type": "string",
          "x-samplevalue": "{taskid}"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "{total}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "datecreatedCMPost": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "31"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "03"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "2010"
        }
      },
      "required": [
        "month",
        "year",
        "day"
      ],
      "title": "datecreatedCMPost",
      "type": "object",
      "x-has-customfields": false
    },
    "apBillsPatchReqAPBILLITEMSAPBILLITEM": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-alias": "lines[*].billableStatus",
          "x-samplevalue": true
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "FORM1099BOX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "GLDIM": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TRX_AMOUNT": {
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqRECALLS": {
      "properties": {
        "RECALL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqRECALLSRECALL"
          },
          "type": "array"
        }
      },
      "title": "RECALLS",
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "creditMemosAdvancedGETALLSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLSHIPTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "apBillsPostReqAPBILLITEMSAPBILLITEM": {
      "properties": {
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-alias": "lines[*].billableStatus",
          "x-samplevalue": true
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "FORM1099BOX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "GLDIM": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TRX_AMOUNT": {
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdTERM": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "TERM",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListDatecreated": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "lineitemCreditPost": {
      "properties": {
        "accountlabel": {
          "type": "string",
          "x-conditionally-required-description": "AP account label. Required if not using glaccountno.",
          "x-samplevalue": ""
        },
        "amount": {
          "type": "string",
          "x-samplevalue": "-500"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "CL22"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "dd"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "CUS123"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "22"
        },
        "glaccountno": {
          "type": "string",
          "x-conditionally-required-description": "GL account number. Required if not using accountlabel.",
          "x-samplevalue": "2000"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "Item1"
        },
        "key": {
          "type": "string",
          "x-samplevalue": "59"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "Ad33"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "History bill payment 108"
        },
        "offsetglaccountno": {
          "type": "string",
          "x-samplevalue": "25"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "PR32"
        },
        "totaldue": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "totalpaid": {
          "type": "string",
          "x-samplevalue": "-500"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "dd"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "ff"
        }
      },
      "required": [
        "amount"
      ],
      "title": "lineitemCreditPost",
      "x-has-customfields": true,
      "type": "object"
    },
    "InventoryTransactionLegacyGetByIdDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "06"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "08"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "foldersFilesAttachments": {
      "properties": {
        "attachment": {
          "$ref": "#/definitions/foldersFilesAttachmentsAttachment"
        }
      },
      "title": "attachments",
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIES": {
      "properties": {
        "sodocumententry": {
          "$ref": "#/definitions/orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententry"
        }
      },
      "title": "SODOCUMENTENTRIES",
      "type": "object"
    },
    "inventoryTransactionsByIdTERM": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "TERM",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqNeedbydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{needbydate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{needbydate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{needbydate.year}"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "purchasingTransactionDefinitionsGetById",
      "type": "object",
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITBILLTO"
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITCUSTVEND"
        },
        "ALLOWEDITDELIVERTO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITDELIVERTO"
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ALLOWEDITSHIPTO"
        },
        "AR_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListAR_ACCOUNTS"
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CATEGORY"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Bill to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTTITLE1"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Ship to",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTTITLE2"
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTTITLE3"
        },
        "CONVERT_UNITS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONVERT_UNITS"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONVTYPE"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATETYPE"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATION_RULE"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREDITLIMITCHECK"
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Customer",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUST_VEND"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEFAULT_WAREHOUSE"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DELTYPE"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTOVERRIDE"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISPLAY_BASECURRENCY"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCCLASS"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCID"
        },
        "EDITABLE_PRICE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EDITABLE_PRICE"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EDITTYPE"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLEOVERRIDETAX"
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENABLE_SEQNUM"
        },
        "ENTITY_PROPS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListENTITY_PROPS"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "FIXED_MESG": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIXED_MESG"
        },
        "FORCE_PRICES": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORCE_PRICES"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INHERIT_SOURCE_DOCNO"
        },
        "INVGL_ACCOUNTS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListINVGL_ACCOUNTS"
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IN_OUT"
        },
        "LATESTVERSIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LATESTVERSIONKEY"
        },
        "LINELEVELSIMPLETAX": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LINELEVELSIMPLETAX"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCOVERRIDE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OVERRIDE_EXCH_RATE_TYPE"
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OVERRIDE_PRICE"
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSTTOGL"
        },
        "PRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRCLISTKEY"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRESERVE_SEQNUM"
        },
        "PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICELISTID"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTTITLE"
        },
        "RECALLONLY": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECALLONLY"
        },
        "RECALLS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListRECALLS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Sale",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SALE_PUR_TRANS"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Customer Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SEQUENCE"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWEXPANDEDTOTALS"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWTITLE1"
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWTITLE2"
        },
        "SHOWTITLE3": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOWTITLE3"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHOW_TOTALS"
        },
        "SPCLPRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SPCLPRCLISTKEY"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SPECIAL_PRICELISTID"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListSUBTOTALS"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTALTEMPLATE"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUBTOTALTEMPLATEKEY"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TD_CREATION_RULE"
        },
        "TERMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMKEY"
        },
        "TERM_NAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERM_NAME"
        },
        "TOTALS": {
          "$ref": "#/definitions/purchasingTransactionDefinitionsListTOTALS"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_COST"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_GL"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_INV"
        },
        "UPDATES_PRICELISTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDATES_PRICELISTID"
        },
        "UPDPRCLISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "UPDPRCLISTKEY"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USERPERM"
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WAREHOUSESELMETHOD"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WARNONLOWQTY"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "XSLTEMPLATE": {
          "type": "string",
          "x-samplevalue": "Intacct Sales Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "XSLTEMPLATE"
        }
      }
    },
    "purchasingTransactionDefinitionsGetByIdAR_ACCOUNTSAR_ACCOUNT": {
      "properties": {
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "Credit"
        },
        "DEPT": {
          "type": "string"
        },
        "DEPTTITLE": {
          "type": "string"
        },
        "DOCPARNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENT_GLGROUP": {
          "type": "string"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "2305--Deferred Revenue Contra"
        },
        "GLACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Deferred Revenue Contra"
        },
        "ISOFFSET": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEM_GLGROUP": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "AP/AR"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "WAREHOUSE": {
          "type": "string"
        }
      },
      "title": "AR_ACCOUNT",
      "type": "object"
    },
    "entitiesByIdIEPAYABLE": {
      "properties": {
        "ACCOUNT": {
          "type": "string"
        },
        "NUMBER": {
          "type": "string"
        }
      },
      "title": "IEPAYABLE",
      "type": "object"
    },
    "inventoryTransactionEntriesListITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "vendorsGetByIDCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "contact.address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "contact.address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "contact.address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "contact.address.postalCode"
        }
      },
      "type": "object"
    },
    "journalEntryPatchResp": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 79989
        }
      },
      "title": "journalEntryPatchResp",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "paymentsListObject": {
      "properties": {
        "ACKMESSAGEKEY": {
          "type": "string",
          "x-displayName": "ACKMESSAGEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:22:35Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BANKACKNOWLEDGED": {
          "type": "string",
          "x-displayName": "BANKACKNOWLEDGED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHTITLE": {
          "type": "string",
          "x-displayName": "BATCHTITLE",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLRDATE": {
          "type": "string",
          "x-displayName": "CLRDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONFMESSAGEKEY": {
          "type": "string",
          "x-displayName": "CONFMESSAGEKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERDUE": {
          "type": "string",
          "x-alias": "totalOutstandingAmount",
          "x-displayName": "CUSTOMERDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "customer.id",
          "x-displayName": "CUSTOMERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "customer.name",
          "x-displayName": "CUSTOMERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DELIVERYMETHOD": {
          "type": "string",
          "x-displayName": "DELIVERYMETHOD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Rent 2015 Location 120",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCUMENTNUMBER": {
          "type": "string",
          "x-displayName": "DOCUMENTNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALACCOUNT": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-displayName": "FINANCIALACCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEMO": {
          "type": "string",
          "x-displayName": "MEMO",
          "x-samplevalue": "Rent 2015 Location 120",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NR_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NR_TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "NR_TRX_TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PAYMENTAMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-displayName": "PAYMENTAMOUNT",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-displayName": "PAYMENTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTTRXAMOUNT": {
          "format": "double",
          "type": "number",
          "x-displayName": "PAYMENTTRXAMOUNT",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTTYPE": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "PAYMENTTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POSTINGDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "POSTINGDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Bills - 100: 2015/01/01 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PRENTRY": {
          "$ref": "#/definitions/paymentsListPRENTRY"
        },
        "PRXBATCHKEY": {
          "type": "string",
          "x-displayName": "PRXBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECEIPTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentReceiptDate",
          "x-displayName": "RECEIPTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECON_DATE": {
          "type": "string",
          "x-displayName": "RECON_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "VI0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRXTOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRXTOTALPAID",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-samplevalue": "V20008",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORACCTNOKEY": {
          "type": "string",
          "x-displayName": "VENDORACCTNOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENBANKCONFIRMED": {
          "type": "string",
          "x-displayName": "WHENBANKCONFIRMED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-displayName": "WHENDISCOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionEntriesGetByIdDELIVERTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdDELIVERTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "itemsPostVENDORINFO": {
      "properties": {
        "ITEMVENDOR": {
          "items": {
            "$ref": "#/definitions/itemsPostVENDORINFOITEMVENDOR"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersListHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/salesOrdersListHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "paymentsLegacyPostRes": {
      "properties": {
        "arpaymentid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3241
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3241
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "paymentsLegacyPostRes",
      "x-has-customfields": false,
      "x-primary-key": [
        "key"
      ],
      "x-vendor-objectname": "arpayment",
      "type": "object"
    },
    "itemsPost": {
      "properties": {
        "ALLOW_BACKORDER": {
          "type": "boolean",
          "x-alias": "backOrderAllowed",
          "x-displayName": "ALLOW_BACKORDER",
          "x-samplevalue": true
        },
        "BASEPRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "price",
          "x-displayName": "BASEPRICE",
          "x-samplevalue": 0
        },
        "BASEUOM": {
          "type": "string",
          "x-displayName": "BASEUOM",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNDEFAULTBUNDLE": {
          "type": "boolean",
          "x-displayName": "CNDEFAULTBUNDLE",
          "x-samplevalue": true
        },
        "CNEXPENSE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYKEY": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYNAME": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYNAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "COGSACCTKEY": {
          "type": "string",
          "x-displayName": "COGSACCTKEY",
          "x-samplevalue": "xyz"
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-displayName": "COMPUTEFORSHORTTERM",
          "x-samplevalue": true
        },
        "COST_METHOD": {
          "type": "string",
          "x-alias": "costingMethod",
          "x-displayName": "COST_METHOD",
          "x-samplevalue": "xyz"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 0
        },
        "CYCLE": {
          "type": "string",
          "x-displayName": "CYCLE",
          "x-samplevalue": "xyz"
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "DEFAULTREVRECTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "DEFAULT_REPLENISHMENT_UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDEFERRALSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDEFERRALSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDELIVERYSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDELIVERYSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFERREDREVACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-samplevalue": 0
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-alias": "dropShip",
          "x-displayName": "DROPSHIP",
          "x-samplevalue": true
        },
        "ENABLELANDEDCOST": {
          "type": "boolean",
          "x-displayName": "ENABLELANDEDCOST",
          "x-samplevalue": true
        },
        "ENABLE_BINS": {
          "type": "string",
          "x-displayName": "ENABLE_BINS",
          "x-samplevalue": "xyz"
        },
        "ENABLE_EXPIRATION": {
          "type": "string",
          "x-displayName": "ENABLE_EXPIRATION",
          "x-samplevalue": "xyz"
        },
        "ENABLE_LOT_CATEGORY": {
          "type": "string",
          "x-displayName": "ENABLE_LOT_CATEGORY",
          "x-samplevalue": "xyz"
        },
        "ENABLE_REPLENISHMENT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ENABLE_SERIALNO": {
          "type": "string",
          "x-displayName": "ENABLE_SERIALNO",
          "x-samplevalue": "xyz"
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-displayName": "EXPENSEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string",
          "x-displayName": "EXTENDED_DESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "xyz"
        },
        "GLGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLGRPKEY",
          "x-samplevalue": 0
        },
        "HASSTARTENDDATES": {
          "type": "boolean",
          "x-displayName": "HASSTARTENDDATES",
          "x-samplevalue": true
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-displayName": "INCOMEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INVACCTKEY": {
          "type": "string",
          "x-displayName": "INVACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INV_PRECISION": {
          "type": "string",
          "x-displayName": "INV_PRECISION",
          "x-samplevalue": "xyz"
        },
        "IONHAND": {
          "type": "string",
          "x-alias": "quantityOnHand",
          "x-displayName": "IONHAND",
          "x-samplevalue": "xyz"
        },
        "IONHOLD": {
          "type": "string",
          "x-displayName": "IONHOLD",
          "x-samplevalue": "xyz"
        },
        "IONORDER": {
          "type": "string",
          "x-alias": "quantityOnOrder",
          "x-displayName": "IONORDER",
          "x-samplevalue": "xyz"
        },
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1"
        },
        "ITEMTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "ITEMTYPE",
          "x-samplevalue": "xyz"
        },
        "LANDEDCOSTINFO": {
          "$ref": "#/definitions/itemsPostLANDEDCOSTINFO"
        },
        "LOT_CATEGORYKEY": {
          "type": "string",
          "x-displayName": "LOT_CATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "xyz"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 0
        },
        "MRR": {
          "type": "boolean",
          "x-displayName": "MRR",
          "x-samplevalue": true
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "xyz"
        },
        "NOTE": {
          "type": "string",
          "x-alias": "inventoryStockDescription",
          "x-displayName": "NOTE",
          "x-samplevalue": "xyz"
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETOEGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETPOGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "PODESCRIPTION": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-displayName": "PODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "PO_PRECISION": {
          "type": "string",
          "x-displayName": "PO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "PRODUCTLINEID": {
          "type": "string",
          "x-displayName": "PRODUCTLINEID",
          "x-samplevalue": "xyz"
        },
        "PRODUCTTYPE": {
          "type": "string",
          "x-displayName": "PRODUCTTYPE",
          "x-samplevalue": "xyz"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85"
        },
        "RENEWALMACROID": {
          "type": "string",
          "x-displayName": "RENEWALMACROID",
          "x-samplevalue": "xyz"
        },
        "RENEWALMACROKEY": {
          "type": "string",
          "x-displayName": "RENEWALMACROKEY",
          "x-samplevalue": "xyz"
        },
        "REORDER_POINT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "REORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "REPLENISHMENT_METHOD": {
          "type": "string",
          "x-alias": "replenishmentMethod",
          "x-samplevalue": "xyz"
        },
        "REVPOSTING": {
          "type": "string",
          "x-displayName": "REVPOSTING",
          "x-samplevalue": "xyz"
        },
        "REVPRINTING": {
          "type": "string",
          "x-displayName": "REVPRINTING",
          "x-samplevalue": "xyz"
        },
        "SAFETY_STOCK": {
          "type": "string",
          "x-alias": "safetyStockUnits",
          "x-samplevalue": "xyz"
        },
        "SERIAL_MASKKEY": {
          "type": "string",
          "x-displayName": "SERIAL_MASKKEY",
          "x-samplevalue": "xyz"
        },
        "SHIP_WEIGHT": {
          "type": "string",
          "x-alias": "weight",
          "x-displayName": "SHIP_WEIGHT",
          "x-samplevalue": "xyz"
        },
        "SODESCRIPTION": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-displayName": "SODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "SO_PRECISION": {
          "type": "string",
          "x-displayName": "SO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "STANDARD_COST": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-displayName": "STANDARD_COST",
          "x-samplevalue": "xyz"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "xyz"
        },
        "SUBSTITUTEID": {
          "type": "string",
          "x-displayName": "SUBSTITUTEID",
          "x-samplevalue": "xyz"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": true
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-displayName": "TAXCODE",
          "x-samplevalue": "xyz"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/itemsPostTAXGROUP"
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-displayName": "TAXGROUPKEY",
          "x-samplevalue": "xyz"
        },
        "TERMPERIOD": {
          "type": "string",
          "x-displayName": "TERMPERIOD",
          "x-samplevalue": "xyz"
        },
        "TOTALPERIODS": {
          "type": "string",
          "x-displayName": "TOTALPERIODS",
          "x-samplevalue": "xyz"
        },
        "UOMGRP": {
          "type": "string",
          "x-displayName": "UOMGRP",
          "x-samplevalue": "xyz"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "UOMGRPKEY",
          "x-samplevalue": 0
        },
        "UPC": {
          "type": "string",
          "x-displayName": "UPC",
          "x-samplevalue": "xyz"
        },
        "VENDORINFO": {
          "$ref": "#/definitions/itemsPostVENDORINFO"
        },
        "VSOECATEGORY": {
          "type": "string",
          "x-displayName": "VSOECATEGORY",
          "x-samplevalue": "xyz"
        },
        "VSOEDLVRSTATUS": {
          "type": "string",
          "x-displayName": "VSOEDLVRSTATUS",
          "x-samplevalue": "xyz"
        },
        "VSOEREVDEFSTATUS": {
          "type": "string",
          "x-displayName": "VSOEREVDEFSTATUS",
          "x-samplevalue": "xyz"
        },
        "WAREHOUSEINFO": {
          "$ref": "#/definitions/itemsPostWAREHOUSEINFO"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        },
        "WHENLASTRECEIVED": {
          "type": "string",
          "x-displayName": "WHENLASTRECEIVED",
          "x-samplevalue": "xyz"
        },
        "WHENLASTSOLD": {
          "type": "string",
          "x-displayName": "WHENLASTSOLD",
          "x-samplevalue": "xyz"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        }
      },
      "required": [
        "ITEMTYPE",
        "ITEMID",
        "NAME"
      ],
      "type": "object"
    },
    "paymentsLegacyPostReq": {
      "properties": {
        "arpaymentitem": {
          "$ref": "#/definitions/paymentsLegacyPostReqArpaymentitem"
        },
        "basecurr": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "batchkey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2305
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10007
        },
        "datereceived": {
          "$ref": "#/definitions/paymentsLegacyPostReqDatereceived"
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "paymentamount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "paymentapplied": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 91.15
        },
        "paymentmethod": {
          "type": "string",
          "x-samplevalue": "Printed Check"
        },
        "paymentunapplied": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "refid": {
          "type": "string",
          "x-samplevalue": "Refid234"
        },
        "whenmodified": {
          "type": "string",
          "x-samplevalue": "06/15/2019 12:41:55"
        }
      },
      "required": [
        "customerid",
        "paymentamount",
        "currency"
      ],
      "title": "paymentsLegacyPostReq",
      "x-has-customfields": false,
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqInternalapprovedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalapprovedon.year}"
        }
      },
      "title": "internalapprovedon",
      "type": "object"
    },
    "vendorsGetByIDOWNER": {
      "properties": {
        "ACCOUNTLABEL": {
          "$ref": "#/definitions/vendorsGetByIDOWNERACCOUNTLABEL"
        },
        "EQGLACCOUNT": {
          "type": "string"
        },
        "EQGLACCOUNTLABEL": {
          "type": "string"
        },
        "HOLDDIST": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contactsGETByIdMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "purchaseOrdersListObject": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-displayName": "ADDGLBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADJ": {
          "type": "boolean",
          "x-displayName": "ADJ",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-24T16:09:25Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BACKORDER": {
          "type": "string",
          "x-displayName": "BACKORDER",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/purchaseOrdersListBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.id",
          "x-displayName": "BILLTOKEY",
          "x-samplevalue": 1067,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLOSED": {
          "type": "boolean",
          "x-displayName": "CLOSED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/purchaseOrdersListCONTACT"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDFROM": {
          "type": "string",
          "x-displayName": "CREATEDFROM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDUSER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-displayName": "CREATEDUSERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "vendor.id",
          "x-displayName": "CUSTVENDID",
          "x-samplevalue": 20029,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-displayName": "CUSTVENDNAME",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DATEPRINTED": {
          "type": "string",
          "x-displayName": "DATEPRINTED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DELIVERTO": {
          "$ref": "#/definitions/purchaseOrdersListDELIVERTO"
        },
        "DELIVERTOKEY": {
          "type": "string",
          "x-displayName": "DELIVERTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Purchase Order-PO0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNO": {
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "DOCNO",
          "x-samplevalue": "PO0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-displayName": "DOCPARCLASS",
          "x-samplevalue": "ORDER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARID": {
          "type": "string",
          "x-displayName": "DOCPARID",
          "x-samplevalue": "Purchase Order",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DOCPARKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-displayName": "DOCPAR_IN_OUT",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-displayName": "ENTGLGROUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchaseOrdersListEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HISTORY": {
          "$ref": "#/definitions/purchaseOrdersListHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-displayName": "INVBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-displayName": "INVOICERUNKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MESSAGE": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "MESSAGE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NOTE": {
          "type": "string",
          "x-displayName": "NOTE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-displayName": "PAYMENTSTATUS",
          "x-samplevalue": "Open",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PODOCUMENTENTRIES": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIES"
        },
        "PONUMBER": {
          "type": "string",
          "x-displayName": "PONUMBER",
          "x-samplevalue": "Spend Management Example",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRINTED": {
          "type": "string",
          "x-displayName": "PRINTED",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRINTEDBY": {
          "type": "string",
          "x-displayName": "PRINTEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-displayName": "PRINTEDUSERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINVBATCHKEY": {
          "type": "string",
          "x-displayName": "PRINVBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRRECORDKEY": {
          "type": "string",
          "x-displayName": "PRRECORDKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 799,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-displayName": "RENEWEDDOC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-displayName": "SALESCONTRACT",
          "x-samplevalue": "N",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/purchaseOrdersListSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingAddress.id",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 1067,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPVIA": {
          "type": "string",
          "x-displayName": "SHIPVIA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATE",
          "x-samplevalue": "Converted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "subTotal",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": 750,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/purchaseOrdersListSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TERM": {
          "$ref": "#/definitions/purchaseOrdersListTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-displayName": "TOTAL",
          "x-samplevalue": 750,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "type": "string",
          "x-alias": "totalAmountDue",
          "x-displayName": "TOTALDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALPAID": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-displayName": "TOTALPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_SUBTOTAL",
          "x-samplevalue": 750,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTAL",
          "x-samplevalue": 750,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "type": "string",
          "x-displayName": "TRX_TOTALDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTALENTERED": {
          "type": "string",
          "x-displayName": "TRX_TOTALENTERED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TOTALPAID": {
          "type": "string",
          "x-displayName": "TRX_TOTALPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-displayName": "USEDASCONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-alias": "bill[*].id",
          "x-displayName": "VENDORDOCNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/purchaseOrdersListWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-03-02",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "type": "string",
          "x-alias": "glPostDate",
          "x-displayName": "WHENPOSTED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "_DOCPAR": {
          "$ref": "#/definitions/purchaseOrdersList_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "customersAdvancedGETALLCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "contact.address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "contact.address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "contact.address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "contact.address.postalCode"
        }
      },
      "type": "object"
    },
    "locationGroupsListObject": {
      "properties": {
        "CONDITION": {
          "type": "string",
          "x-displayName": "CONDITION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONDITIONTYPE": {
          "type": "string",
          "x-displayName": "CONDITIONTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/locationGroupsListCONTACTINFO"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-displayName": "DIMGRPCOMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GROUPTYPE": {
          "type": "string",
          "x-displayName": "GROUPTYPE",
          "x-samplevalue": "SPECIFIC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ID": {
          "type": "string",
          "x-displayName": "ID",
          "x-samplevalue": "Location-110",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-displayName": "MEMBERFILTERS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERS": {
          "$ref": "#/definitions/locationGroupsListMEMBERS"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "San Francisco",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESTRICTTO": {
          "type": "string",
          "x-displayName": "RESTRICTTO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SORTFIELD": {
          "type": "string",
          "x-displayName": "SORTFIELD",
          "x-samplevalue": "LOCATIONID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SORTORDER": {
          "type": "string",
          "x-displayName": "SORTORDER",
          "x-samplevalue": "ASC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "inventoryTransactionEntriesByIDRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "title": "RECALLS",
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitems": {
      "properties": {
        "potransitem": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPostReqPotransitemsPotransitem"
          },
          "type": "array"
        }
      },
      "title": "potransitems",
      "type": "object"
    },
    "invoicesAdvancedGETByIdARINVOICEITEMSArinvoiceitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 45
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "ACCOUNTLABELKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 53389.7
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREDREVACCTNO": {
          "type": "string"
        },
        "DEFERREDREVACCTTITLE": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 10
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Administration"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DETAILID": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-08-17"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2010-08-17"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "ISTAX": {
          "type": "boolean",
          "x-alias": "lines[*].isTaxable",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-alias": "lines[*].location.id"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1100
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Receivable - trade"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 62
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 259
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ri"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "SUBTOTAL": {
          "type": "string",
          "x-alias": "lines[*].subTotal"
        },
        "TAXRATE": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 53389.7
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "DebitMemoListPAYTO": {
      "properties": {
        "TAXGROUP": {
          "$ref": "#/definitions/DebitMemoListPAYTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqActualstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{actualstartdate.year}"
        }
      },
      "title": "actualstartdate",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "title": "TAXGROUP",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetById": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-displayName": "Base Currency",
          "x-samplevalue": "USD"
        },
        "currency": {
          "type": "string",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "datecreated": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdDatedue"
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Exchange Rate",
          "x-samplevalue": 1
        },
        "exchratedate": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdExchratedate"
        },
        "haschange": {
          "type": "boolean",
          "x-displayName": "Has Change",
          "x-samplevalue": false
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Key",
          "x-samplevalue": 1078
        },
        "paymentbondreceived": {
          "type": "boolean",
          "x-displayName": "Payment Bond Received",
          "x-samplevalue": false
        },
        "paymentbondrequired": {
          "type": "boolean",
          "x-displayName": "Payment Bond Required",
          "x-samplevalue": false
        },
        "paymentstatus": {
          "type": "string",
          "x-displayName": "Payment Status",
          "x-samplevalue": "Open"
        },
        "payto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdPayto"
        },
        "performancebondreceived": {
          "type": "boolean",
          "x-displayName": "Performance Bond Received",
          "x-samplevalue": false
        },
        "performancebondrequired": {
          "type": "boolean",
          "x-displayName": "Performance Bond Required",
          "x-samplevalue": false
        },
        "potransitems": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdPotransitems"
        },
        "referenceno": {
          "type": "string",
          "x-displayName": "Reference No",
          "x-samplevalue": "SAMPO001"
        },
        "returnto": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdReturnto"
        },
        "subtotals": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdSubtotals"
        },
        "termname": {
          "type": "string",
          "x-displayName": "Term Name",
          "x-samplevalue": "Net 30"
        },
        "transactionid": {
          "type": "string",
          "x-displayName": "Transaction Id",
          "x-samplevalue": "Purchase Order-PO0015"
        },
        "transactionstate": {
          "type": "string",
          "x-displayName": "Transaction State",
          "x-samplevalue": "Converted"
        },
        "transactiontype": {
          "type": "string",
          "x-displayName": "Transaction Type",
          "x-samplevalue": "Purchase Order"
        },
        "vendordocno": {
          "type": "string",
          "x-displayName": "Vendor Doc No",
          "x-samplevalue": "BOSS001"
        },
        "vendorid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Vendor Id",
          "x-samplevalue": 20008
        },
        "whenmodified": {
          "type": "string",
          "x-displayName": "When Modified",
          "x-samplevalue": "07/30/2019 05:17:26"
        }
      },
      "title": "purchasingTransactionsLegacyGetById",
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdBillto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "Maxwell Warner(C1006)"
        }
      },
      "title": "billto",
      "type": "object"
    },
    "journalsListENTRIESGlentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1231
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Subscriptions"
        },
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BASELOCATION_NAME": {
          "type": "string"
        },
        "BASELOCATION_NO": {
          "type": "string"
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BATCHTITLE": {
          "type": "string",
          "x-samplevalue": "Contract CN0001 Line No. 1 : 01/01/2015 Batch"
        },
        "BATCH_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "BATCH_NUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BILLABLE": {
          "type": "string"
        },
        "BILLED": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEPARTMENT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "DETAILID": {
          "type": "string"
        },
        "DOCUMENT": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "01/01/2015"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "IETYPE": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "Machine Learning Core"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PARENTGLENTRYKEY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECON_DATE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RGLDIM169562_10003": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted"
        },
        "STATISTICAL": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TAXDETAILKEY": {
          "type": "string"
        },
        "TIMEPERIOD": {
          "type": "string"
        },
        "TMPLENTRYKEY": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TR_TYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNITS": {
          "type": "string"
        },
        "USERNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "08/08/2017 13:40:42"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/08/2017 13:40:42"
        }
      },
      "type": "object"
    },
    "creditCardFeeByIdCREDITCARDFEEENTRIES": {
      "properties": {
        "creditcardfeeentry": {
          "items": {
            "$ref": "#/definitions/creditCardFeeByIdCREDITCARDFEEENTRIESCreditcardfeeentry"
          },
          "type": "array"
        }
      },
      "title": "CREDITCARDFEEENTRIES",
      "type": "object"
    },
    "foldersGetAllResSupdocfolder": {
      "properties": {
        "createdby": {
          "type": "string",
          "x-samplevalue": "emma"
        },
        "creationdate": {
          "type": "string",
          "x-samplevalue": "11/25/2019"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "churros test case"
        },
        "lastmodified": {
          "type": "string",
          "x-samplevalue": "11/25/2019"
        },
        "lastmodifiedby": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Analyst"
        },
        "parentfolder": {
          "type": "string",
          "x-samplevalue": "Source Documents"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "active"
        }
      },
      "title": "supdocfolder",
      "type": "object"
    },
    "expenseReportsByIdEEXPENSESITEMSEexpensesitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6170
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "Meals"
        },
        "ACCOUNTLABELKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTFIELD1": {
          "type": "string"
        },
        "CUSTFIELD10": {
          "type": "string"
        },
        "CUSTFIELD100": {
          "type": "string"
        },
        "CUSTFIELD11": {
          "type": "string"
        },
        "CUSTFIELD12": {
          "type": "string"
        },
        "CUSTFIELD13": {
          "type": "string"
        },
        "CUSTFIELD14": {
          "type": "string"
        },
        "CUSTFIELD15": {
          "type": "string"
        },
        "CUSTFIELD16": {
          "type": "string"
        },
        "CUSTFIELD17": {
          "type": "string"
        },
        "CUSTFIELD18": {
          "type": "string"
        },
        "CUSTFIELD19": {
          "type": "string"
        },
        "CUSTFIELD2": {
          "type": "string"
        },
        "CUSTFIELD20": {
          "type": "string"
        },
        "CUSTFIELD21": {
          "type": "string"
        },
        "CUSTFIELD22": {
          "type": "string"
        },
        "CUSTFIELD23": {
          "type": "string"
        },
        "CUSTFIELD24": {
          "type": "string"
        },
        "CUSTFIELD25": {
          "type": "string"
        },
        "CUSTFIELD26": {
          "type": "string"
        },
        "CUSTFIELD27": {
          "type": "string"
        },
        "CUSTFIELD28": {
          "type": "string"
        },
        "CUSTFIELD29": {
          "type": "string"
        },
        "CUSTFIELD3": {
          "type": "string"
        },
        "CUSTFIELD30": {
          "type": "string"
        },
        "CUSTFIELD31": {
          "type": "string"
        },
        "CUSTFIELD32": {
          "type": "string"
        },
        "CUSTFIELD33": {
          "type": "string"
        },
        "CUSTFIELD34": {
          "type": "string"
        },
        "CUSTFIELD35": {
          "type": "string"
        },
        "CUSTFIELD36": {
          "type": "string"
        },
        "CUSTFIELD37": {
          "type": "string"
        },
        "CUSTFIELD38": {
          "type": "string"
        },
        "CUSTFIELD39": {
          "type": "string"
        },
        "CUSTFIELD4": {
          "type": "string"
        },
        "CUSTFIELD40": {
          "type": "string"
        },
        "CUSTFIELD41": {
          "type": "string"
        },
        "CUSTFIELD42": {
          "type": "string"
        },
        "CUSTFIELD43": {
          "type": "string"
        },
        "CUSTFIELD44": {
          "type": "string"
        },
        "CUSTFIELD45": {
          "type": "string"
        },
        "CUSTFIELD46": {
          "type": "string"
        },
        "CUSTFIELD47": {
          "type": "string"
        },
        "CUSTFIELD48": {
          "type": "string"
        },
        "CUSTFIELD49": {
          "type": "string"
        },
        "CUSTFIELD5": {
          "type": "string"
        },
        "CUSTFIELD50": {
          "type": "string"
        },
        "CUSTFIELD51": {
          "type": "string"
        },
        "CUSTFIELD52": {
          "type": "string"
        },
        "CUSTFIELD53": {
          "type": "string"
        },
        "CUSTFIELD54": {
          "type": "string"
        },
        "CUSTFIELD55": {
          "type": "string"
        },
        "CUSTFIELD56": {
          "type": "string"
        },
        "CUSTFIELD57": {
          "type": "string"
        },
        "CUSTFIELD58": {
          "type": "string"
        },
        "CUSTFIELD59": {
          "type": "string"
        },
        "CUSTFIELD6": {
          "type": "string"
        },
        "CUSTFIELD60": {
          "type": "string"
        },
        "CUSTFIELD61": {
          "type": "string"
        },
        "CUSTFIELD62": {
          "type": "string"
        },
        "CUSTFIELD63": {
          "type": "string"
        },
        "CUSTFIELD64": {
          "type": "string"
        },
        "CUSTFIELD65": {
          "type": "string"
        },
        "CUSTFIELD66": {
          "type": "string"
        },
        "CUSTFIELD67": {
          "type": "string"
        },
        "CUSTFIELD68": {
          "type": "string"
        },
        "CUSTFIELD69": {
          "type": "string"
        },
        "CUSTFIELD7": {
          "type": "string"
        },
        "CUSTFIELD70": {
          "type": "string"
        },
        "CUSTFIELD71": {
          "type": "string"
        },
        "CUSTFIELD72": {
          "type": "string"
        },
        "CUSTFIELD73": {
          "type": "string"
        },
        "CUSTFIELD74": {
          "type": "string"
        },
        "CUSTFIELD75": {
          "type": "string"
        },
        "CUSTFIELD76": {
          "type": "string"
        },
        "CUSTFIELD77": {
          "type": "string"
        },
        "CUSTFIELD78": {
          "type": "string"
        },
        "CUSTFIELD79": {
          "type": "string"
        },
        "CUSTFIELD8": {
          "type": "string"
        },
        "CUSTFIELD80": {
          "type": "string"
        },
        "CUSTFIELD81": {
          "type": "string"
        },
        "CUSTFIELD82": {
          "type": "string"
        },
        "CUSTFIELD83": {
          "type": "string"
        },
        "CUSTFIELD84": {
          "type": "string"
        },
        "CUSTFIELD85": {
          "type": "string"
        },
        "CUSTFIELD86": {
          "type": "string"
        },
        "CUSTFIELD87": {
          "type": "string"
        },
        "CUSTFIELD88": {
          "type": "string"
        },
        "CUSTFIELD89": {
          "type": "string"
        },
        "CUSTFIELD9": {
          "type": "string"
        },
        "CUSTFIELD90": {
          "type": "string"
        },
        "CUSTFIELD91": {
          "type": "string"
        },
        "CUSTFIELD92": {
          "type": "string"
        },
        "CUSTFIELD93": {
          "type": "string"
        },
        "CUSTFIELD94": {
          "type": "string"
        },
        "CUSTFIELD95": {
          "type": "string"
        },
        "CUSTFIELD96": {
          "type": "string"
        },
        "CUSTFIELD97": {
          "type": "string"
        },
        "CUSTFIELD98": {
          "type": "string"
        },
        "CUSTFIELD99": {
          "type": "string"
        },
        "CUSTOMDIMENSIONS": {
          "type": "string"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 80
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10075--Capsule"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Restaurant"
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-samplevalue": "Lunch with Lisa"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 154
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "EXPPMTTYPEKEY": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLENTRYKEY": {
          "type": "string"
        },
        "GLOFFSET": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 14
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "420--Billable Expenses"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NONREIMBURSABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "NR_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NR_TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OFFSETACCOUNTKEY": {
          "type": "string"
        },
        "OFFSETKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6302
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "1004--Capsule Customization"
        },
        "QUANTITY": {
          "type": "string"
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6301
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6301
        },
        "RECORDTYPE": {
          "type": "string"
        },
        "REL1": {
          "type": "string"
        },
        "REL10": {
          "type": "string"
        },
        "REL100": {
          "type": "string"
        },
        "REL11": {
          "type": "string"
        },
        "REL12": {
          "type": "string"
        },
        "REL13": {
          "type": "string"
        },
        "REL14": {
          "type": "string"
        },
        "REL15": {
          "type": "string"
        },
        "REL16": {
          "type": "string"
        },
        "REL17": {
          "type": "string"
        },
        "REL18": {
          "type": "string"
        },
        "REL19": {
          "type": "string"
        },
        "REL2": {
          "type": "string"
        },
        "REL20": {
          "type": "string"
        },
        "REL21": {
          "type": "string"
        },
        "REL22": {
          "type": "string"
        },
        "REL23": {
          "type": "string"
        },
        "REL24": {
          "type": "string"
        },
        "REL25": {
          "type": "string"
        },
        "REL26": {
          "type": "string"
        },
        "REL27": {
          "type": "string"
        },
        "REL28": {
          "type": "string"
        },
        "REL29": {
          "type": "string"
        },
        "REL3": {
          "type": "string"
        },
        "REL30": {
          "type": "string"
        },
        "REL31": {
          "type": "string"
        },
        "REL32": {
          "type": "string"
        },
        "REL33": {
          "type": "string"
        },
        "REL34": {
          "type": "string"
        },
        "REL35": {
          "type": "string"
        },
        "REL36": {
          "type": "string"
        },
        "REL37": {
          "type": "string"
        },
        "REL38": {
          "type": "string"
        },
        "REL39": {
          "type": "string"
        },
        "REL4": {
          "type": "string"
        },
        "REL40": {
          "type": "string"
        },
        "REL41": {
          "type": "string"
        },
        "REL42": {
          "type": "string"
        },
        "REL43": {
          "type": "string"
        },
        "REL44": {
          "type": "string"
        },
        "REL45": {
          "type": "string"
        },
        "REL46": {
          "type": "string"
        },
        "REL47": {
          "type": "string"
        },
        "REL48": {
          "type": "string"
        },
        "REL49": {
          "type": "string"
        },
        "REL5": {
          "type": "string"
        },
        "REL50": {
          "type": "string"
        },
        "REL51": {
          "type": "string"
        },
        "REL52": {
          "type": "string"
        },
        "REL53": {
          "type": "string"
        },
        "REL54": {
          "type": "string"
        },
        "REL55": {
          "type": "string"
        },
        "REL56": {
          "type": "string"
        },
        "REL57": {
          "type": "string"
        },
        "REL58": {
          "type": "string"
        },
        "REL59": {
          "type": "string"
        },
        "REL6": {
          "type": "string"
        },
        "REL60": {
          "type": "string"
        },
        "REL61": {
          "type": "string"
        },
        "REL62": {
          "type": "string"
        },
        "REL63": {
          "type": "string"
        },
        "REL64": {
          "type": "string"
        },
        "REL65": {
          "type": "string"
        },
        "REL66": {
          "type": "string"
        },
        "REL67": {
          "type": "string"
        },
        "REL68": {
          "type": "string"
        },
        "REL69": {
          "type": "string"
        },
        "REL7": {
          "type": "string"
        },
        "REL70": {
          "type": "string"
        },
        "REL71": {
          "type": "string"
        },
        "REL72": {
          "type": "string"
        },
        "REL73": {
          "type": "string"
        },
        "REL74": {
          "type": "string"
        },
        "REL75": {
          "type": "string"
        },
        "REL76": {
          "type": "string"
        },
        "REL77": {
          "type": "string"
        },
        "REL78": {
          "type": "string"
        },
        "REL79": {
          "type": "string"
        },
        "REL8": {
          "type": "string"
        },
        "REL80": {
          "type": "string"
        },
        "REL81": {
          "type": "string"
        },
        "REL82": {
          "type": "string"
        },
        "REL83": {
          "type": "string"
        },
        "REL84": {
          "type": "string"
        },
        "REL85": {
          "type": "string"
        },
        "REL86": {
          "type": "string"
        },
        "REL87": {
          "type": "string"
        },
        "REL88": {
          "type": "string"
        },
        "REL89": {
          "type": "string"
        },
        "REL9": {
          "type": "string"
        },
        "REL90": {
          "type": "string"
        },
        "REL91": {
          "type": "string"
        },
        "REL92": {
          "type": "string"
        },
        "REL93": {
          "type": "string"
        },
        "REL94": {
          "type": "string"
        },
        "REL95": {
          "type": "string"
        },
        "REL96": {
          "type": "string"
        },
        "REL97": {
          "type": "string"
        },
        "REL98": {
          "type": "string"
        },
        "REL99": {
          "type": "string"
        },
        "RELEASETOPAY": {
          "type": "string"
        },
        "REQUESTID": {
          "type": "string",
          "x-samplevalue": "e979028bea437c14c6dc8a89bc320979"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "SUBTOTAL": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UDDREL1": {
          "type": "string"
        },
        "UDDREL10": {
          "type": "string"
        },
        "UDDREL11": {
          "type": "string"
        },
        "UDDREL12": {
          "type": "string"
        },
        "UDDREL13": {
          "type": "string"
        },
        "UDDREL14": {
          "type": "string"
        },
        "UDDREL15": {
          "type": "string"
        },
        "UDDREL16": {
          "type": "string"
        },
        "UDDREL17": {
          "type": "string"
        },
        "UDDREL18": {
          "type": "string"
        },
        "UDDREL19": {
          "type": "string"
        },
        "UDDREL2": {
          "type": "string"
        },
        "UDDREL20": {
          "type": "string"
        },
        "UDDREL3": {
          "type": "string"
        },
        "UDDREL4": {
          "type": "string"
        },
        "UDDREL5": {
          "type": "string"
        },
        "UDDREL6": {
          "type": "string"
        },
        "UDDREL7": {
          "type": "string"
        },
        "UDDREL8": {
          "type": "string"
        },
        "UDDREL9": {
          "type": "string"
        },
        "UNITRATE": {
          "type": "string"
        },
        "VENDORACCTNOKEYVERSION": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VERSION": {
          "type": "string",
          "x-samplevalue": "2017/08/22 13:32:28.744803000"
        },
        "WAREHOUSEDIMKEY": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z"
        }
      },
      "title": "eexpensesitem",
      "type": "object"
    },
    "itemsGetById": {
      "properties": {
        "ALLOW_BACKORDER": {
          "type": "boolean",
          "x-alias": "backOrderAllowed",
          "x-displayName": "ALLOW_BACKORDER",
          "x-samplevalue": true
        },
        "BASEPRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "price",
          "x-displayName": "BASEPRICE",
          "x-samplevalue": 0
        },
        "BASEUOM": {
          "type": "string",
          "x-displayName": "BASEUOM",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNDEFAULTBUNDLE": {
          "type": "boolean",
          "x-displayName": "CNDEFAULTBUNDLE",
          "x-samplevalue": true
        },
        "CNEXPENSE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYKEY": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYNAME": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYNAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "COGSACCTKEY": {
          "type": "string",
          "x-displayName": "COGSACCTKEY",
          "x-samplevalue": "xyz"
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-displayName": "COMPUTEFORSHORTTERM",
          "x-samplevalue": true
        },
        "COST_METHOD": {
          "type": "string",
          "x-alias": "costingMethod",
          "x-displayName": "COST_METHOD",
          "x-samplevalue": "xyz"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 0
        },
        "CYCLE": {
          "type": "string",
          "x-displayName": "CYCLE",
          "x-samplevalue": "xyz"
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "DEFAULTREVRECTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDEFERRALSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDEFERRALSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDELIVERYSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDELIVERYSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFERREDREVACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-samplevalue": 0
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-alias": "dropShip",
          "x-displayName": "DROPSHIP",
          "x-samplevalue": true
        },
        "ENABLELANDEDCOST": {
          "type": "boolean",
          "x-displayName": "ENABLELANDEDCOST",
          "x-samplevalue": true
        },
        "ENABLE_BINS": {
          "type": "string",
          "x-displayName": "ENABLE_BINS",
          "x-samplevalue": "xyz"
        },
        "ENABLE_EXPIRATION": {
          "type": "string",
          "x-displayName": "ENABLE_EXPIRATION",
          "x-samplevalue": "xyz"
        },
        "ENABLE_LOT_CATEGORY": {
          "type": "string",
          "x-displayName": "ENABLE_LOT_CATEGORY",
          "x-samplevalue": "xyz"
        },
        "ENABLE_SERIALNO": {
          "type": "string",
          "x-displayName": "ENABLE_SERIALNO",
          "x-samplevalue": "xyz"
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-displayName": "EXPENSEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string",
          "x-displayName": "EXTENDED_DESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "xyz"
        },
        "GLGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLGRPKEY",
          "x-samplevalue": 0
        },
        "HASSTARTENDDATES": {
          "type": "boolean",
          "x-displayName": "HASSTARTENDDATES",
          "x-samplevalue": true
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-displayName": "INCOMEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INVACCTKEY": {
          "type": "string",
          "x-displayName": "INVACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INV_PRECISION": {
          "type": "string",
          "x-displayName": "INV_PRECISION",
          "x-samplevalue": "xyz"
        },
        "IONHAND": {
          "type": "string",
          "x-alias": "quantityOnHand",
          "x-displayName": "IONHAND",
          "x-samplevalue": "xyz"
        },
        "IONHOLD": {
          "type": "string",
          "x-displayName": "IONHOLD",
          "x-samplevalue": "xyz"
        },
        "IONORDER": {
          "type": "string",
          "x-alias": "quantityOnOrder",
          "x-displayName": "IONORDER",
          "x-samplevalue": "xyz"
        },
        "ITEMGLGROUP": {
          "$ref": "#/definitions/itemsGetByIdITEMGLGROUP"
        },
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1"
        },
        "ITEMTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "ITEMTYPE",
          "x-samplevalue": "xyz"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY"
        },
        "LOT_CATEGORYKEY": {
          "type": "string",
          "x-displayName": "LOT_CATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "xyz"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 0
        },
        "MRR": {
          "type": "boolean",
          "x-displayName": "MRR",
          "x-samplevalue": true
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "xyz"
        },
        "NOTE": {
          "type": "string",
          "x-alias": "inventoryStockDescription",
          "x-displayName": "NOTE",
          "x-samplevalue": "xyz"
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETOEGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETPOGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "PODESCRIPTION": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-displayName": "PODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "PO_PRECISION": {
          "type": "string",
          "x-displayName": "PO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "PRODUCTLINEID": {
          "type": "string",
          "x-displayName": "PRODUCTLINEID",
          "x-samplevalue": "xyz"
        },
        "PRODUCTTYPE": {
          "type": "string",
          "x-displayName": "PRODUCTTYPE",
          "x-samplevalue": "xyz"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85"
        },
        "RENEWALMACROID": {
          "type": "string",
          "x-displayName": "RENEWALMACROID",
          "x-samplevalue": "xyz"
        },
        "RENEWALMACROKEY": {
          "type": "string",
          "x-displayName": "RENEWALMACROKEY",
          "x-samplevalue": "xyz"
        },
        "REVPOSTING": {
          "type": "string",
          "x-displayName": "REVPOSTING",
          "x-samplevalue": "xyz"
        },
        "REVPRINTING": {
          "type": "string",
          "x-displayName": "REVPRINTING",
          "x-samplevalue": "xyz"
        },
        "SERIAL_MASKKEY": {
          "type": "string",
          "x-displayName": "SERIAL_MASKKEY",
          "x-samplevalue": "xyz"
        },
        "SHIP_WEIGHT": {
          "type": "string",
          "x-alias": "weight",
          "x-displayName": "SHIP_WEIGHT",
          "x-samplevalue": "xyz"
        },
        "SODESCRIPTION": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-displayName": "SODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "SO_PRECISION": {
          "type": "string",
          "x-displayName": "SO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "STANDARD_COST": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-displayName": "STANDARD_COST",
          "x-samplevalue": "xyz"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "xyz"
        },
        "SUBSTITUTEID": {
          "type": "string",
          "x-displayName": "SUBSTITUTEID",
          "x-samplevalue": "xyz"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": true
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-displayName": "TAXCODE",
          "x-samplevalue": "xyz"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/itemsGetByIdTAXGROUP"
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-displayName": "TAXGROUPKEY",
          "x-samplevalue": "xyz"
        },
        "TERMPERIOD": {
          "type": "string",
          "x-displayName": "TERMPERIOD",
          "x-samplevalue": "xyz"
        },
        "TOTALPERIODS": {
          "type": "string",
          "x-displayName": "TOTALPERIODS",
          "x-samplevalue": "xyz"
        },
        "UOM": {
          "$ref": "#/definitions/itemsGetByIdUOM"
        },
        "UOMGRP": {
          "type": "string",
          "x-displayName": "UOMGRP",
          "x-samplevalue": "xyz"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "UOMGRPKEY",
          "x-samplevalue": 0
        },
        "UPC": {
          "type": "string",
          "x-displayName": "UPC",
          "x-samplevalue": "xyz"
        },
        "VSOECATEGORY": {
          "type": "string",
          "x-displayName": "VSOECATEGORY",
          "x-samplevalue": "xyz"
        },
        "VSOEDLVRSTATUS": {
          "type": "string",
          "x-displayName": "VSOEDLVRSTATUS",
          "x-samplevalue": "xyz"
        },
        "VSOEREVDEFSTATUS": {
          "type": "string",
          "x-displayName": "VSOEREVDEFSTATUS",
          "x-samplevalue": "xyz"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        },
        "WHENLASTRECEIVED": {
          "type": "string",
          "x-displayName": "WHENLASTRECEIVED",
          "x-samplevalue": "xyz"
        },
        "WHENLASTSOLD": {
          "type": "string",
          "x-displayName": "WHENLASTSOLD",
          "x-samplevalue": "xyz"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "itemsListObject": {
      "properties": {
        "ALLOW_BACKORDER": {
          "type": "boolean",
          "x-alias": "backOrderAllowed",
          "x-displayName": "ALLOW_BACKORDER",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BASEPRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "price",
          "x-displayName": "BASEPRICE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BASEUOM": {
          "type": "string",
          "x-displayName": "BASEUOM",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNBILLINGTEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLATENAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNBILLINGTEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNDEFAULTBUNDLE": {
          "type": "boolean",
          "x-displayName": "CNDEFAULTBUNDLE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CNEXPENSE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLATENAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNEXPENSE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNEXPENSETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLATENAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNEXPENSETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNMEACATEGORYKEY": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNMEACATEGORYNAME": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYNAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNREVENUE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLATENAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNREVENUE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNREVENUETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUETEMPLATENAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNREVENUETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUETEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "COGSACCTKEY": {
          "type": "string",
          "x-displayName": "COGSACCTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-displayName": "COMPUTEFORSHORTTERM",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "COST_METHOD": {
          "type": "string",
          "x-alias": "costingMethod",
          "x-displayName": "COST_METHOD",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CYCLE": {
          "type": "string",
          "x-displayName": "CYCLE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "DEFAULTREVRECTEMPLKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFCONTRACTDEFERRALSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDEFERRALSTATUS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFCONTRACTDELIVERYSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDELIVERYSTATUS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEFERREDREVACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-alias": "dropShip",
          "x-displayName": "DROPSHIP",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLELANDEDCOST": {
          "type": "boolean",
          "x-displayName": "ENABLELANDEDCOST",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ENABLE_BINS": {
          "type": "string",
          "x-displayName": "ENABLE_BINS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLE_EXPIRATION": {
          "type": "string",
          "x-displayName": "ENABLE_EXPIRATION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLE_LOT_CATEGORY": {
          "type": "string",
          "x-displayName": "ENABLE_LOT_CATEGORY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENABLE_SERIALNO": {
          "type": "string",
          "x-displayName": "ENABLE_SERIALNO",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-displayName": "EXPENSEACCTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string",
          "x-displayName": "EXTENDED_DESCRIPTION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLGRPKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "HASSTARTENDDATES": {
          "type": "boolean",
          "x-displayName": "HASSTARTENDDATES",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-displayName": "INCOMEACCTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "INVACCTKEY": {
          "type": "string",
          "x-displayName": "INVACCTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "INV_PRECISION": {
          "type": "string",
          "x-displayName": "INV_PRECISION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "IONHAND": {
          "type": "string",
          "x-alias": "quantityOnHand",
          "x-displayName": "IONHAND",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "IONHOLD": {
          "type": "string",
          "x-displayName": "IONHOLD",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "IONORDER": {
          "type": "string",
          "x-alias": "quantityOnOrder",
          "x-displayName": "IONORDER",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMGLGROUP": {
          "$ref": "#/definitions/itemsListITEMGLGROUP"
        },
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "ITEMTYPE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOT_CATEGORYKEY": {
          "type": "string",
          "x-displayName": "LOT_CATEGORYKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MRR": {
          "type": "boolean",
          "x-displayName": "MRR",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NOTE": {
          "type": "string",
          "x-alias": "inventoryStockDescription",
          "x-displayName": "NOTE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETOEGLACCOUNTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETPOGLACCOUNTKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PODESCRIPTION": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-displayName": "PODESCRIPTION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PO_PRECISION": {
          "type": "string",
          "x-displayName": "PO_PRECISION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRODUCTLINEID": {
          "type": "string",
          "x-displayName": "PRODUCTLINEID",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRODUCTTYPE": {
          "type": "string",
          "x-displayName": "PRODUCTTYPE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWALMACROID": {
          "type": "string",
          "x-displayName": "RENEWALMACROID",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWALMACROKEY": {
          "type": "string",
          "x-displayName": "RENEWALMACROKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVPOSTING": {
          "type": "string",
          "x-displayName": "REVPOSTING",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVPRINTING": {
          "type": "string",
          "x-displayName": "REVPRINTING",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SERIAL_MASKKEY": {
          "type": "string",
          "x-displayName": "SERIAL_MASKKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIP_WEIGHT": {
          "type": "string",
          "x-alias": "weight",
          "x-displayName": "SHIP_WEIGHT",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SODESCRIPTION": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-displayName": "SODESCRIPTION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SO_PRECISION": {
          "type": "string",
          "x-displayName": "SO_PRECISION",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STANDARD_COST": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-displayName": "STANDARD_COST",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBSTITUTEID": {
          "type": "string",
          "x-displayName": "SUBSTITUTEID",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-displayName": "TAXCODE",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXGROUP": {
          "$ref": "#/definitions/itemsListTAXGROUP"
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-displayName": "TAXGROUPKEY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMPERIOD": {
          "type": "string",
          "x-displayName": "TERMPERIOD",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPERIODS": {
          "type": "string",
          "x-displayName": "TOTALPERIODS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UOM": {
          "$ref": "#/definitions/itemsListUOM"
        },
        "UOMGRP": {
          "type": "string",
          "x-displayName": "UOMGRP",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "UOMGRPKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UPC": {
          "type": "string",
          "x-displayName": "UPC",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VSOECATEGORY": {
          "type": "string",
          "x-displayName": "VSOECATEGORY",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VSOEDLVRSTATUS": {
          "type": "string",
          "x-displayName": "VSOEDLVRSTATUS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VSOEREVDEFSTATUS": {
          "type": "string",
          "x-displayName": "VSOEREVDEFSTATUS",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENLASTRECEIVED": {
          "type": "string",
          "x-displayName": "WHENLASTRECEIVED",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENLASTSOLD": {
          "type": "string",
          "x-displayName": "WHENLASTSOLD",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllDatecreated": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 13
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Month",
          "x-samplevalue": 11
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2018
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-24T16:09:25Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DELIVERTO": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryDELIVERTO"
        },
        "DELIVERTOKEY": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "400--Marketing"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].department.id",
          "x-samplevalue": 400
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-alias": "lines[*].department.name",
          "x-samplevalue": "Marketing"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "DISCOUNT": {
          "type": "string",
          "x-alias": "lines[*].discountAmount"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0001"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 799
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2017-01-31"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Marketing SWAG"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Marketing SWAG"
        },
        "ITEMID": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "710--Marketing SWAG"
        },
        "ITEMNAME": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LCCATKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].location.id",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-alias": "lines[*].location.name",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 750
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].id",
          "x-samplevalue": 2139
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10023": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "P"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "STOCK_NUMBER": {
          "type": "string"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string",
          "x-alias": "lines[*].taxAmount"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 750
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 750
        },
        "UNIT": {
          "type": "string",
          "x-alias": "lines[*].product.purchaseUom",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "20029--Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "vendorsGetByIDDISPLAYCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "LATITUDE": {
          "type": "string"
        },
        "LONGITUDE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ZIP": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "contactsGETById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "contactsGETById",
      "type": "object",
      "properties": {
        "CELLPHONE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 953637363,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CELLPHONE"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Satish Test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "COMPANYNAME"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTNAME"
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DISCOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNT"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "abortnyk@intacct.com",
          "x-sub-format": "email",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMAIL1"
        },
        "EMAIL2": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMAIL2"
        },
        "FAX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FAX"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Andrew",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIRSTNAME"
        },
        "INITIAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INITIAL"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Bortnyk",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LASTNAME"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/contactsAdvancedGETAllMAILADDRESS"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "PAGER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAGER"
        },
        "PHONE1": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PHONE1"
        },
        "PHONE2": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PHONE2"
        },
        "PREFIX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PREFIX"
        },
        "PRICELIST": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICELIST"
        },
        "PRICELISTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICELISTKEY"
        },
        "PRICESCHEDULE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICESCHEDULE"
        },
        "PRICESCHEDULEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRICESCHEDULEKEY"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Bortnyk,Andrew",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRINTAS"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXABLE"
        },
        "TAXGROUP": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXGROUP"
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXGROUPKEY"
        },
        "TAXID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXID"
        },
        "URL1": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "URL1"
        },
        "URL2": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "URL2"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VISIBLE"
        },
        "WHENCREATED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "purchasingTransactionDefinitionsPostReqTOTALS": {
      "properties": {
        "TOTAL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqTOTALSTOTAL"
          },
          "type": "array"
        }
      },
      "title": "TOTALS",
      "type": "object"
    },
    "purchaseOrdersGetByIdHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/purchaseOrdersGetByIdHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "billsPaymentsDetailsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "billsPaymentsDetailsById",
      "type": "object",
      "properties": {
        "ADJUSTMENTAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADJUSTMENTAMOUNT"
        },
        "ADJUSTMENTENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADJUSTMENTENTRYKEY"
        },
        "ADJUSTMENTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADJUSTMENTKEY"
        },
        "ADVANCEENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADVANCEENTRYKEY"
        },
        "ADVANCEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADVANCEKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DISCOUNTAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNTAMOUNT"
        },
        "DISCOUNTDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNTDATE"
        },
        "DISCOUNTENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNTENTRYKEY"
        },
        "DISCOUNTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DISCOUNTKEY"
        },
        "ENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11940,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTRYKEY"
        },
        "INLINEAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INLINEAMOUNT"
        },
        "INLINEENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INLINEENTRYKEY"
        },
        "INLINEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INLINEKEY"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODULEKEY"
        },
        "PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTAMOUNT"
        },
        "PAYMENTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-10-25",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTDATE"
        },
        "PAYMENTENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12274,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTENTRYKEY"
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3039,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYMENTKEY"
        },
        "POSADJENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSADJENTRYKEY"
        },
        "POSADJKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSADJKEY"
        },
        "POSTEDADVANCEAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSTEDADVANCEAMOUNT"
        },
        "POSTEDADVANCEENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSTEDADVANCEENTRYKEY"
        },
        "POSTEDADVANCEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POSTEDADVANCEKEY"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2858,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 72,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "TRX_ADJUSTMENTAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_ADJUSTMENTAMOUNT"
        },
        "TRX_DISCOUNTAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_DISCOUNTAMOUNT"
        },
        "TRX_INLINEAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_INLINEAMOUNT"
        },
        "TRX_PAYMENTAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_PAYMENTAMOUNT"
        },
        "TRX_POSTEDADVANCEAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_POSTEDADVANCEAMOUNT"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "ccTransactionsListCCTRANSACTIONENTRIESCCTRANSACTIONENTRY": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "itemUpdateLANDEDCOSTINFO": {
      "properties": {
        "ITEMLANDEDCOST": {
          "items": {
            "$ref": "#/definitions/itemUpdateLANDEDCOSTINFOITEMLANDEDCOST"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "vendorsGetByIDDISPLAYCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "American Express(V20001)"
        },
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FAX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "INITIAL": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsGetByIDDISPLAYCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PHONE2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "URL2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "updateUserUSERINFOUSERLOCATIONS": {
      "properties": {
        "LOCATIONID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            "",
            ""
          ]
        }
      },
      "title": "USERLOCATIONS",
      "type": "object"
    },
    "projectsListObject": {
      "properties": {
        "ACTUALAMOUNT": {
          "type": "string",
          "x-displayName": "ACTUALAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACTUALQTY": {
          "format": "double",
          "type": "number",
          "x-displayName": "ACTUALQTY",
          "x-samplevalue": 759.5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "APPROVEDQTY": {
          "format": "double",
          "type": "number",
          "x-displayName": "APPROVEDQTY",
          "x-samplevalue": 759.5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BEGINDATE": {
          "type": "string",
          "x-displayName": "BEGINDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLEAPPODEFAULT": {
          "type": "boolean",
          "x-displayName": "BILLABLEAPPODEFAULT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BILLABLEEXPDEFAULT": {
          "type": "boolean",
          "x-displayName": "BILLABLEEXPDEFAULT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "BILLINGOVERMAX": {
          "type": "string",
          "x-displayName": "BILLINGOVERMAX",
          "x-samplevalue": "Do nothing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLINGPRICING": {
          "type": "string",
          "x-displayName": "BILLINGPRICING",
          "x-samplevalue": "Billing rate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLINGRATE": {
          "type": "string",
          "x-displayName": "BILLINGRATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-displayName": "BILLINGTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/projectsListBILLTO"
        },
        "BILLTOKEY": {
          "type": "string",
          "x-displayName": "BILLTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BUDGETAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BUDGETAMOUNT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BUDGETEDCOST": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BUDGETEDCOST",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BUDGETID": {
          "type": "string",
          "x-displayName": "BUDGETID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BUDGETKEY": {
          "type": "string",
          "x-displayName": "BUDGETKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BUDGETQTY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BUDGETQTY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSKEY": {
          "type": "string",
          "x-displayName": "CLASSKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/projectsListCONTACTINFO"
        },
        "CONTACTKEY": {
          "type": "string",
          "x-displayName": "CONTACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTAMOUNT": {
          "type": "string",
          "x-displayName": "CONTRACTAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTKEY": {
          "type": "string",
          "x-displayName": "CONTRACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERKEY": {
          "type": "string",
          "x-displayName": "CUSTOMERKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTUSERID": {
          "type": "string",
          "x-displayName": "CUSTUSERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTUSERKEY": {
          "type": "string",
          "x-displayName": "CUSTUSERKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-displayName": "DEPARTMENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-displayName": "DEPARTMENTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Project for indirect time such as PTO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENDDATE": {
          "type": "string",
          "x-displayName": "ENDDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ESTQTY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ESTQTY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCLUDEEXPENSES": {
          "type": "boolean",
          "x-displayName": "EXCLUDEEXPENSES",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "EXPENSEPRICING": {
          "type": "string",
          "x-displayName": "EXPENSEPRICING",
          "x-samplevalue": "Cost plus fee",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXPENSERATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXPENSERATE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "INVOICECURRENCY": {
          "type": "string",
          "x-displayName": "INVOICECURRENCY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICEMESSAGE": {
          "type": "string",
          "x-displayName": "INVOICEMESSAGE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICEWITHPARENT": {
          "type": "boolean",
          "x-displayName": "INVOICEWITHPARENT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MANAGERCONTACTNAME": {
          "type": "string",
          "x-displayName": "MANAGERCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MANAGERID": {
          "type": "string",
          "x-displayName": "MANAGERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MANAGERKEY": {
          "type": "string",
          "x-displayName": "MANAGERKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "saisatish",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OAKEY": {
          "type": "string",
          "x-displayName": "OAKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OBSPERCENTCOMPLETE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OBSPERCENTCOMPLETE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTID": {
          "type": "string",
          "x-displayName": "PARENTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTKEY": {
          "type": "string",
          "x-displayName": "PARENTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PARENTNAME": {
          "type": "string",
          "x-displayName": "PARENTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PERCENTCOMPLETE": {
          "type": "string",
          "x-displayName": "PERCENTCOMPLETE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POAMOUNT": {
          "type": "string",
          "x-displayName": "POAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "POAPPRICING": {
          "type": "string",
          "x-displayName": "POAPPRICING",
          "x-samplevalue": "Cost plus fee",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "POAPRATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "POAPRATE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PONUMBER": {
          "type": "string",
          "x-displayName": "PONUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PQNUMBER": {
          "type": "string",
          "x-displayName": "PQNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PREVENTAPPO": {
          "type": "boolean",
          "x-displayName": "PREVENTAPPO",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PREVENTEXPENSE": {
          "type": "boolean",
          "x-displayName": "PREVENTEXPENSE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PREVENTGENINVOICE": {
          "type": "boolean",
          "x-displayName": "PREVENTGENINVOICE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PREVENTTIMESHEET": {
          "type": "boolean",
          "x-displayName": "PREVENTTIMESHEET",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PROJECTCATEGORY": {
          "type": "string",
          "x-displayName": "PROJECTCATEGORY",
          "x-samplevalue": "Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTDEPTKEY": {
          "type": "string",
          "x-displayName": "PROJECTDEPTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-displayName": "PROJECTID",
          "x-samplevalue": "OVH1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PROJECTLOCATIONKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTSTATUS": {
          "type": "string",
          "x-displayName": "PROJECTSTATUS",
          "x-samplevalue": "3 - In progress",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTSTATUSKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PROJECTSTATUSKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTTYPE": {
          "type": "string",
          "x-displayName": "PROJECTTYPE",
          "x-samplevalue": "21 - Overhead",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PROJECTTYPEKEY",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "QARROWKEY": {
          "type": "string",
          "x-displayName": "QARROWKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REMAININGQTY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REMAININGQTY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SALESCONTACTID": {
          "type": "string",
          "x-displayName": "SALESCONTACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SALESCONTACTKEY": {
          "type": "string",
          "x-displayName": "SALESCONTACTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SALESCONTACTNAME": {
          "type": "string",
          "x-displayName": "SALESCONTACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SFDCKEY": {
          "type": "string",
          "x-displayName": "SFDCKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/projectsListSHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string",
          "x-displayName": "SHIPTOKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SONUMBER": {
          "type": "string",
          "x-displayName": "SONUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERMSKEY": {
          "type": "string",
          "x-displayName": "TERMSKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERRESTRICTIONS": {
          "type": "string",
          "x-displayName": "USERRESTRICTIONS",
          "x-samplevalue": "Any User",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "allocationsListObject": {
      "properties": {
        "ALLOCATIONENTRIES": {
          "$ref": "#/definitions/allocationsListALLOCATIONENTRIES"
        },
        "ALLOCATIONID": {
          "type": "string",
          "x-displayName": "ALLOCATIONID",
          "x-samplevalue": "95333",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            ">=",
            "<="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "8",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            ">=",
            "<="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TYPE": {
          "type": "string",
          "x-displayName": "TYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchaseOrdersListBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "billingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersListBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdPotransitemsPotransitem": {
      "properties": {
        "conversiontype": {
          "type": "string",
          "x-displayName": "Conversion Type",
          "x-samplevalue": "Quantity"
        },
        "customfields": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdPotransitemsPotransitemCustomfields"
        },
        "departmentid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Department Id",
          "x-samplevalue": 300
        },
        "grossamount": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Gross Amount",
          "x-samplevalue": 0
        },
        "itemdesc": {
          "type": "string",
          "x-displayName": "Item Description",
          "x-samplevalue": "Office Supplies"
        },
        "itemid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Item Id",
          "x-samplevalue": 6220
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Key",
          "x-samplevalue": 2547
        },
        "locationid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Location Id",
          "x-samplevalue": 100
        },
        "overridetaxamount": {
          "type": "boolean",
          "x-displayName": "Override Tax Amount",
          "x-samplevalue": false
        },
        "price": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Price",
          "x-samplevalue": 30
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Quantity",
          "x-samplevalue": 3
        },
        "retailprice": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Retail Price",
          "x-samplevalue": 0
        },
        "tax": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Tax",
          "x-samplevalue": 0
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Total Amount",
          "x-samplevalue": 90
        },
        "unit": {
          "type": "string",
          "x-displayName": "Unit",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "type": "string",
          "x-displayName": "Vendor Id",
          "x-samplevalue": "20008--Boston Properties"
        }
      },
      "title": "potransitem",
      "type": "object"
    },
    "createAccountGroupGLSTATCATGRPSGLCOACATMEMBER": {
      "properties": {
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "CATEGORYNAME"
      ],
      "title": "GLCOACATMEMBER",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "apBillsPatchReqAPBILLITEMS": {
      "properties": {
        "APBILLITEM": {
          "items": {
            "$ref": "#/definitions/apBillsPatchReqAPBILLITEMSAPBILLITEM"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdSubtotalsSubtotal": {
      "properties": {
        "customfields": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdSubtotalsSubtotalCustomfields"
        },
        "description": {
          "type": "string",
          "x-displayName": "Description",
          "x-samplevalue": "SUBTOTAL"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Total",
          "x-samplevalue": 90
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "billsPaymentsListITEMSAppymtentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2000
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Payable"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "09/26/2018"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2202
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9657
        },
        "RECORDTYPE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20004
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Lenovo"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "salesOrdersList_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "locationsGetByIdCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Toronto"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "Canada"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "ON"
        },
        "ZIP": {
          "type": "string",
          "x-samplevalue": "M6P 2C4"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "contractPatchResponse": {
      "properties": {
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CTRC-003"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 725
        }
      },
      "title": "contractPatchResponse",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "CONTRACT",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "chargeCardAccountsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "chargeCardAccountsById",
      "type": "object",
      "properties": {
        "AMEX_CARD_ACCOUNT_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AMEX_CARD_ACCOUNT_ID"
        },
        "AMEX_PAYVE_ACCOUNTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AMEX_PAYVE_ACCOUNTID"
        },
        "AUTOMATECARDPYMTCONF": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUTOMATECARDPYMTCONF"
        },
        "AUTOMATECARDPYMTSEND": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUTOMATECARDPYMTSEND"
        },
        "CARDID": {
          "type": "string",
          "x-samplevalue": "AMEX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CARDID"
        },
        "CARDNUM": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 378734493671000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CARDNUM"
        },
        "CARDTYPE": {
          "type": "string",
          "x-samplevalue": "American Express",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CARDTYPE"
        },
        "COMMCARD": {
          "type": "string",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "COMMCARD"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CUTOFFDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUTOFFDATE"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPT"
        },
        "DEPTNAME": {
          "type": "string",
          "x-samplevalue": "Admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTNAME"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Corporate American Express Card",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "EXP_MONTH": {
          "type": "string",
          "x-samplevalue": "December",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXP_MONTH"
        },
        "EXP_YEAR": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2027,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXP_YEAR"
        },
        "FEESACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6270,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FEESACCTKEY"
        },
        "FEESACCTLABELKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FEESACCTLABELKEY"
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/chargeCardAccountsListFINANCIALDATA"
        },
        "FINCHRGACCT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6270,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FINCHRGACCT"
        },
        "FINCHRGACCTLABEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FINCHRGACCTLABEL"
        },
        "INPBAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INPBAL"
        },
        "INPDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INPDATE"
        },
        "LIABACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2020,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LIABACCTKEY"
        },
        "LIABACCTTITLE": {
          "type": "string",
          "x-samplevalue": "Credit Card Offset",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LIABACCTTITLE"
        },
        "LIABILITYTYPE": {
          "type": "string",
          "x-samplevalue": "Credit",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LIABILITYTYPE"
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATION"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONNAME"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/chargeCardAccountsListMAILADDRESS"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "OUTSOURCECARD": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OUTSOURCECARD"
        },
        "OUTSOURCECARDOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OUTSOURCECARDOVERRIDE"
        },
        "RECBAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECBAL"
        },
        "RECDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECDATE"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "USEFORINTACCT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "USEFORINTACCT"
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "American Express",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "accountTitlesGetByIdRes": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "accountTitlesGetByIdRes",
      "type": "object",
      "properties": {
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1010,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ACCOUNTNO"
        },
        "BASETITLE": {
          "type": "string",
          "x-samplevalue": "SVB Operating - USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASETITLE"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONID"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONNAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "TEMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TITLE"
        }
      }
    },
    "InventoryTransactionLegacyPostReqIctransitemsIctransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "createFileAttachmentsAttachment": {
      "properties": {
        "attachmentdata": {
          "type": "string",
          "x-samplevalue": "ewogICJjb3VudHJ5IiA6ICJJbmRpYSIsCiAgImNpdHkiIDogIkh5ZGVyYWJhZCIsCiAgIkFyZWEiOiAiTWFkaW5hZ3VkYSIKfQ=="
        },
        "attachmentname": {
          "type": "string",
          "x-samplevalue": "my-file-post-34"
        },
        "attachmenttype": {
          "type": "string",
          "x-samplevalue": "txt"
        }
      },
      "required": [
        "attachmenttype",
        "attachmentname",
        "attachmentdata"
      ],
      "title": "attachment",
      "type": "object"
    },
    "purchaseOrdersListCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "vendor.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "vendor.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "vendor.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "vendor.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersListCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "vendor.contact.phone",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLARADJUSTMENTITEMSAradjustmentitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 19
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1233
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Usage"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "Dep11"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "CE department"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 37
        },
        "DETAILID": {
          "type": "string"
        },
        "DETAILKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYCURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "ENTRYDESCRIPTION": {
          "type": "string",
          "x-samplevalue": "AsasaS"
        },
        "ENTRYEXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ENTRYEXCHRATEDATE": {
          "type": "string"
        },
        "ENTRYEXCHRATETYPE": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-19"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1233
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Unbilled AR - Usage"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ISTAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 27
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "anyId1"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "un1"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "OFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1200
        },
        "OFFSETGLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Accounts Receivable"
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PRENTRYOFFSETACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "PRENTRYOFFSETACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1200
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2729
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 11631
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "ra"
        },
        "RGLDIM169562_10014": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "TAXRATE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "itemGroupsListObject": {
      "properties": {
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Inventory Items",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DIMGRPCOMP": {
          "type": "string",
          "x-displayName": "DIMGRPCOMP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GROUPTYPE": {
          "type": "string",
          "x-displayName": "GROUPTYPE",
          "x-samplevalue": "ALL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ID": {
          "type": "string",
          "x-displayName": "ID",
          "x-samplevalue": "Inventory Items",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERFILTERS": {
          "type": "string",
          "x-samplevalue": "{\"FILTERS\":{\"MEMBERS\":[{\"__dummy\":\"\",\"_isNewLine\":true,\"FIELD\":\"ITEMTYPE\",\"VALUE\":\"Inventory\",\"OPERATOR\":\"=\"}],\"CONDITIONTYPE\":\"AND\"}}",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Inventory Items",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-02-22T22:11:48Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-02-22T22:11:48Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-has-customfields": "false",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdPotransitemsPotransitemCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-displayName": "Custom Field Name",
          "x-samplevalue": "UMA_PURCHASEORDER"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "DebitMemoListObject": {
      "properties": {
        "APADJUSTMENTITEMS": {
          "$ref": "#/definitions/DebitMemoListAPADJUSTMENTITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-15T13:28:59Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "BILLTOPAYTOCONTACTNAME",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BILLTOPAYTOKEY",
          "x-samplevalue": 977,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-displayName": "EXCHANGE_RATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "type": "string",
          "x-displayName": "EXCHRATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYTO": {
          "$ref": "#/definitions/DebitMemoListPAYTO"
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "PAYTOCONTACTNAME",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-samplevalue": "Adjustments (USD): 2019/08/15 06:28:59:5766 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 2597,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "APADJ0039",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 3051,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pa",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "RETURNTOCONTACTNAME",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "SHIPTORETURNTOCONTACTNAME",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SHIPTORETURNTOKEY",
          "x-samplevalue": 977,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_ENTITYDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_ENTITYDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALSELECTED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDOR": {
          "type": "string",
          "x-displayName": "VENDOR",
          "x-samplevalue": "20003--STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORID",
          "x-samplevalue": 20003,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDTYPE1099TYPE": {
          "type": "string",
          "x-displayName": "VENDTYPE1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-15",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqDatecreated": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "datecreated",
      "type": "object"
    },
    "orderEntryTransactionsListsHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "01/31/2015"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/09/2017 12:52:00"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SOURCEDOCUMENTID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "projectsGetByIdSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "OrderEntryTransactionsLegacyPostRes": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "OrderEntryTransactionsLegacyPostRes",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "journalEntryPatchReqENTRIESGLENTRY": {
      "properties": {
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DOCUMENT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SPLIT": {
          "items": {
            "$ref": "#/definitions/journalEntryPatchReqENTRIESGLENTRYSPLIT"
          },
          "type": "array"
        },
        "TAXENTRIES": {
          "$ref": "#/definitions/journalEntryPatchReqENTRIESGLENTRYTAXENTRIES"
        },
        "TRX_AMOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TR_TYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "GLENTRY",
      "type": "object"
    },
    "inventoryTransactionEntriesListITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "chargeCardAccountsListObject": {
      "properties": {
        "AMEX_CARD_ACCOUNT_ID": {
          "type": "string",
          "x-displayName": "AMEX_CARD_ACCOUNT_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AMEX_PAYVE_ACCOUNTID": {
          "type": "string",
          "x-displayName": "AMEX_PAYVE_ACCOUNTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "AUTOMATECARDPYMTCONF": {
          "type": "boolean",
          "x-displayName": "AUTOMATECARDPYMTCONF",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AUTOMATECARDPYMTSEND": {
          "type": "boolean",
          "x-displayName": "AUTOMATECARDPYMTSEND",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CARDID": {
          "type": "string",
          "x-displayName": "CARDID",
          "x-samplevalue": "AMEX",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CARDNUM": {
          "format": "int64",
          "type": "integer",
          "x-displayName": "CARDNUM",
          "x-samplevalue": 378734493671000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CARDTYPE": {
          "type": "string",
          "x-displayName": "CARDTYPE",
          "x-samplevalue": "American Express",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "COMMCARD": {
          "type": "string",
          "x-displayName": "COMMCARD",
          "x-samplevalue": "C",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUTOFFDATE": {
          "type": "string",
          "x-displayName": "CUTOFFDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPT",
          "x-samplevalue": 300,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTNAME": {
          "type": "string",
          "x-displayName": "DEPTNAME",
          "x-samplevalue": "Admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Corporate American Express Card",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXP_MONTH": {
          "type": "string",
          "x-displayName": "EXP_MONTH",
          "x-samplevalue": "December",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXP_YEAR": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXP_YEAR",
          "x-samplevalue": 2027,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FEESACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "FEESACCTKEY",
          "x-samplevalue": 6270,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FEESACCTLABELKEY": {
          "type": "string",
          "x-displayName": "FEESACCTLABELKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALDATA": {
          "$ref": "#/definitions/chargeCardAccountsListFINANCIALDATA"
        },
        "FINCHRGACCT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "FINCHRGACCT",
          "x-samplevalue": 6270,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FINCHRGACCTLABEL": {
          "type": "string",
          "x-displayName": "FINCHRGACCTLABEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INPBAL": {
          "type": "string",
          "x-displayName": "INPBAL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INPDATE": {
          "type": "string",
          "x-displayName": "INPDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LIABACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LIABACCTKEY",
          "x-samplevalue": 2020,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LIABACCTTITLE": {
          "type": "string",
          "x-displayName": "LIABACCTTITLE",
          "x-samplevalue": "Credit Card Offset",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LIABILITYTYPE": {
          "type": "string",
          "x-displayName": "LIABILITYTYPE",
          "x-samplevalue": "Credit",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATION",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/chargeCardAccountsListMAILADDRESS"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "OUTSOURCECARD": {
          "type": "string",
          "x-displayName": "OUTSOURCECARD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OUTSOURCECARDOVERRIDE": {
          "type": "boolean",
          "x-displayName": "OUTSOURCECARDOVERRIDE",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RECBAL": {
          "type": "string",
          "x-displayName": "RECBAL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECDATE": {
          "type": "string",
          "x-displayName": "RECDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "USEFORINTACCT": {
          "type": "string",
          "x-displayName": "USEFORINTACCT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORID",
          "x-samplevalue": 20001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "American Express",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "customersPOSTRequest": {
      "properties": {
        "ARACCOUNT": {
          "type": "string",
          "x-displayName": "ARACCOUNT",
          "x-samplevalue": "sample"
        },
        "ARINVOICEPRINTTEMPLATEID": {
          "type": "string",
          "x-displayName": "ARINVOICEPRINTTEMPLATEID",
          "x-samplevalue": "sample"
        },
        "BILLTO": {
          "$ref": "#/definitions/customersPOSTRequestBILLTO"
        },
        "CELLPHONE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "COMMENTS": {
          "type": "string",
          "x-displayName": "COMMENTS",
          "x-samplevalue": "sample"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/customersPOSTRequestCONTACTINFO"
        },
        "CREDITLIMIT": {
          "format": "int32",
          "type": "integer",
          "x-alias": "creditLimit",
          "x-displayName": "CREDITLIMIT",
          "x-samplevalue": 10
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "sample"
        },
        "CUSTMESSAGEID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CUSTMESSAGEID",
          "x-samplevalue": "sample"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "10118"
        },
        "CUSTTYPE": {
          "type": "string",
          "x-displayName": "CUSTTYPE",
          "x-samplevalue": "sample"
        },
        "DELIVERY_OPTIONS": {
          "type": "string",
          "x-displayName": "DELIVERY_OPTIONS",
          "x-samplevalue": "sample"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/customersPOSTRequestDISPLAYCONTACT"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "sample"
        },
        "HIDEDISPLAYCONTACT": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "sample"
        },
        "OBJECTRESTRICTION": {
          "type": "string",
          "x-displayName": "OBJECTRESTRICTION",
          "x-samplevalue": "sample"
        },
        "OEADJPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEADJPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEINVOICEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEINVOICEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OELISTPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OELISTPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEORDERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEORDERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEOTHERPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEOTHERPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OEQUOTEPRINTTEMPLATEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OEQUOTEPRINTTEMPLATEID",
          "x-samplevalue": 10
        },
        "OFFSETGLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OFFSETGLACCOUNTNO",
          "x-samplevalue": 10
        },
        "ONETIME": {
          "type": "boolean",
          "x-displayName": "ONETIME",
          "x-samplevalue": true
        },
        "ONHOLD": {
          "type": "boolean",
          "x-displayName": "ONHOLD",
          "x-samplevalue": true
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTID",
          "x-samplevalue": 10
        },
        "RESALENO": {
          "type": "string",
          "x-displayName": "RESALENO",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDDEPARTMENTS": {
          "type": "string",
          "x-displayName": "RESTRICTEDDEPARTMENTS",
          "x-samplevalue": "sample"
        },
        "RESTRICTEDLOCATIONS": {
          "type": "string",
          "x-displayName": "RESTRICTEDLOCATIONS",
          "x-samplevalue": "sample"
        },
        "SHIPPINGMETHOD": {
          "type": "string",
          "x-displayName": "SHIPPINGMETHOD",
          "x-samplevalue": "sample"
        },
        "SHIPTO": {
          "$ref": "#/definitions/customersPOSTRequestSHIPTO"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "sample"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-samplevalue": "sample"
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "TAXID",
          "x-samplevalue": 10
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "sample"
        },
        "TERRITORYID": {
          "type": "string",
          "x-displayName": "TERRITORYID",
          "x-samplevalue": "sample"
        }
      },
      "required": [
        "DISPLAYCONTACT",
        "NAME"
      ],
      "type": "object"
    },
    "purchaseOrdersListSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "shippingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersListSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemRevrecenddate": {
      "properties": {
        "day": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      },
      "title": "revrecenddate",
      "type": "object"
    },
    "orderEntryTransactionsListsObject": {
      "properties": {
        "ADDGLBATCHKEY": {
          "type": "string",
          "x-displayName": "ADDGLBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ADJ": {
          "type": "boolean",
          "x-displayName": "ADJ",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T18:24:31Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BACKORDER": {
          "type": "string",
          "x-displayName": "BACKORDER",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTO": {
          "$ref": "#/definitions/orderEntryTransactionsListsBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BILLTOKEY",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLOSED": {
          "type": "boolean",
          "x-displayName": "CLOSED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CNCONTRACTID": {
          "type": "string",
          "x-displayName": "CNCONTRACTID",
          "x-samplevalue": "CN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CNCONTRACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CNCONTRACTKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CNCONTRACTNAME": {
          "type": "string",
          "x-displayName": "CNCONTRACTNAME",
          "x-samplevalue": "10001 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACT": {
          "$ref": "#/definitions/orderEntryTransactionsListsCONTACT"
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-displayName": "CONTRACTDESC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDFROM": {
          "type": "string",
          "x-displayName": "CREATEDFROM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDUSER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDUSER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDUSERID": {
          "type": "string",
          "x-displayName": "CREATEDUSERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTREC": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTREC",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTVENDID",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTVENDNAME": {
          "type": "string",
          "x-displayName": "CUSTVENDNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DATEPRINTED": {
          "type": "string",
          "x-displayName": "DATEPRINTED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCID": {
          "type": "string",
          "x-displayName": "DOCID",
          "x-samplevalue": "Invoice-IN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNO": {
          "type": "string",
          "x-displayName": "DOCNO",
          "x-samplevalue": "IN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARCLASS": {
          "type": "string",
          "x-displayName": "DOCPARCLASS",
          "x-samplevalue": "INVOICE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARID": {
          "type": "string",
          "x-displayName": "DOCPARID",
          "x-samplevalue": "Invoice",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DOCPARKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DOCPAR_IN_OUT": {
          "type": "string",
          "x-displayName": "DOCPAR_IN_OUT",
          "x-samplevalue": "Increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTGLGROUP": {
          "type": "string",
          "x-displayName": "ENTGLGROUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/orderEntryTransactionsListsEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HASADVBILLING": {
          "type": "boolean",
          "x-displayName": "HASADVBILLING",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "HASPOSTEDREVREC": {
          "type": "string",
          "x-displayName": "HASPOSTEDREVREC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HISTORY": {
          "$ref": "#/definitions/orderEntryTransactionsListsHISTORY"
        },
        "INVBATCHKEY": {
          "type": "string",
          "x-displayName": "INVBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUNKEY": {
          "type": "string",
          "x-displayName": "INVOICERUNKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUN_DESCRIPTION": {
          "type": "string",
          "x-displayName": "INVOICERUN_DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INVOICERUN_EXPENSEPRICEMARKUP": {
          "type": "string",
          "x-displayName": "INVOICERUN_EXPENSEPRICEMARKUP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MESSAGE": {
          "type": "string",
          "x-displayName": "MESSAGE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NOTE": {
          "type": "string",
          "x-displayName": "NOTE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ORIGDOCDATE": {
          "type": "string",
          "x-displayName": "ORIGDOCDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYMENTS": {
          "$ref": "#/definitions/orderEntryTransactionsListsPAYMENTS"
        },
        "PAYMENTSTATUS": {
          "type": "string",
          "x-displayName": "PAYMENTSTATUS",
          "x-samplevalue": "Paid",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PONUMBER": {
          "type": "string",
          "x-displayName": "PONUMBER",
          "x-samplevalue": "Contract CN0001 line 1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRINTED": {
          "type": "string",
          "x-displayName": "PRINTED",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRINTEDBY": {
          "type": "string",
          "x-displayName": "PRINTEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINTEDUSERID": {
          "type": "string",
          "x-displayName": "PRINTEDUSERID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRINVBATCHKEY": {
          "type": "string",
          "x-displayName": "PRINVBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECT": {
          "type": "string",
          "x-displayName": "PROJECT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTKEY": {
          "type": "string",
          "x-displayName": "PROJECTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRRECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRRECORDKEY",
          "x-samplevalue": 130,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RENEWEDDOC": {
          "type": "string",
          "x-displayName": "RENEWEDDOC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SALESCONTRACT": {
          "type": "string",
          "x-displayName": "SALESCONTRACT",
          "x-samplevalue": "N",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SCHOPKEY": {
          "type": "string",
          "x-displayName": "SCHOPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SHIPTO": {
          "$ref": "#/definitions/orderEntryTransactionsListsSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SHIPTOKEY",
          "x-samplevalue": 783,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SHIPVIA": {
          "type": "string",
          "x-displayName": "SHIPVIA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SIGN_FLAG": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SIGN_FLAG",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SODOCUMENTENTRIES": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIES"
        },
        "SOURCERECURKEY": {
          "type": "string",
          "x-displayName": "SOURCERECURKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "Pending",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SUBTOTAL",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/orderEntryTransactionsListsSUBTOTALS"
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SYSTEMGENERATED": {
          "type": "boolean",
          "x-displayName": "SYSTEMGENERATED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "TERM": {
          "$ref": "#/definitions/orderEntryTransactionsListsTERM"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTAL",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_SUBTOTAL",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTAL",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALDUE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "UPDATES_INV": {
          "type": "string",
          "x-displayName": "UPDATES_INV",
          "x-samplevalue": "No",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "USEDASCONTRACT": {
          "type": "string",
          "x-displayName": "USEDASCONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USER": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USER",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERID": {
          "type": "string",
          "x-displayName": "USERID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDOCNO": {
          "type": "string",
          "x-displayName": "VENDORDOCNO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VSOEPRCLSTKEY": {
          "type": "string",
          "x-displayName": "VSOEPRCLSTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VSOEPRICELIST": {
          "type": "string",
          "x-displayName": "VSOEPRICELIST",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/orderEntryTransactionsListsWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENDUE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-03-02",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENPOSTED",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "_DOCPAR": {
          "$ref": "#/definitions/orderEntryTransactionsLists_DOCPAR"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "contractGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "contractGetById",
      "type": "object",
      "properties": {
        "ADVBILLBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADVBILLBY"
        },
        "ADVBILLBYTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ADVBILLBYTYPE"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "BEGINDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BEGINDATE"
        },
        "BILLINGFREQUENCY": {
          "type": "string",
          "x-samplevalue": "Monthly",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGFREQUENCY"
        },
        "BILLINGHOLD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLINGHOLD"
        },
        "BILLTO": {
          "$ref": "#/definitions/contractListBILLTO"
        },
        "BILLTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOCONTACTNAME"
        },
        "CANCELDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CANCELDATE"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSDIMKEY"
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSID"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSNAME"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID"
        },
        "CONTRACTTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTTYPE"
        },
        "CONTRACTTYPEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTTYPEKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CRHOLD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CRHOLD"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPARTMENTID"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPARTMENTNAME"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DISPLAYCONTACT": {
          "$ref": "#/definitions/contractListDISPLAYCONTACT"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEEDIMKEY"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEEID"
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEENAME"
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENDDATE"
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATETYPE"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXPENSEHOLD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXPENSEHOLD"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLDIMCHANNEL"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONID"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONNAME"
        },
        "MEAPRCLIST": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEAPRCLIST"
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PRCLIST": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRCLIST"
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTDIMKEY"
        },
        "PROJECTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTID"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTNAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RENEWAL": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWAL"
        },
        "RENEWALADVBILLBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWALADVBILLBY"
        },
        "RENEWALADVBILLBYTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWALADVBILLBYTYPE"
        },
        "RENEWALMACRO": {
          "type": "string",
          "x-samplevalue": "60 days no increase",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWALMACRO"
        },
        "RENEWEDCONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWEDCONTRACTID"
        },
        "RENEWTERMLENGTH": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWTERMLENGTH"
        },
        "RENEWTERMPERIOD": {
          "type": "string",
          "x-samplevalue": "Months",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RENEWTERMPERIOD"
        },
        "REVENUEHOLD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REVENUEHOLD"
        },
        "RGLDIM169562_10034": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RGLDIM169562_10034"
        },
        "SHIPTO": {
          "$ref": "#/definitions/contractListSHIPTO"
        },
        "SHIPTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOCONTACTNAME"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Renewed",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "TERMNAME": {
          "type": "string",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TERMNAME"
        },
        "TIMESHEETAGGREGATION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TIMESHEETAGGREGATION"
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORDIMKEY"
        },
        "VENDORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "unitOfMeasuresById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "unitOfMeasuresById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "INVUOM": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INVUOM"
        },
        "ISSYSTEM": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISSYSTEM"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Count",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "OEUOM": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "OEUOM"
        },
        "POUOM": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "POUOM"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "UOMDETAILS": {
          "$ref": "#/definitions/unitOfMeasuresListUOMDETAILS"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "createUserUSERINFOUSERTERRITORIES": {
      "properties": {
        "TERRITORYID": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "",
            ""
          ]
        }
      },
      "title": "USERTERRITORIES",
      "type": "object"
    },
    "updateAccountGroupGLCATGRPS": {
      "properties": {
        "GLACCTGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLCATGRPSGLACCTGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLCATGRPS",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Intacct Daily Rate"
        }
      },
      "type": "object"
    },
    "exchangeRateCreateEXCHANGERATEENTRIES": {
      "properties": {
        "EXCHANGERATEENTRY": {
          "items": {
            "$ref": "#/definitions/exchangeRateCreateEXCHANGERATEENTRIESEXCHANGERATEENTRY"
          },
          "type": "array"
        }
      },
      "title": "EXCHANGERATEENTRIES",
      "type": "object"
    },
    "expenseReportsByIdEEXPENSESITEMS": {
      "properties": {
        "eexpensesitem": {
          "$ref": "#/definitions/expenseReportsByIdEEXPENSESITEMSEexpensesitem"
        }
      },
      "title": "EEXPENSESITEMS",
      "type": "object"
    },
    "purchaseOrdersGetById_DOCPAREXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "createUserUSERINFOCONTACTINFO": {
      "properties": {
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "jsmith@example.com",
          "x-sub-format": "email"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Smith"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "John"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "journalsListObject": {
      "properties": {
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BALANCE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASELOCATION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASELOCATION_NAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASELOCATION_NO": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BATCH_TITLE": {
          "type": "string",
          "x-samplevalue": "Contract CN0001 Line No. 1 : 01/01/2015 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CHILDENTITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTSCHEDULEENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTSCHEDULEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENTRIES": {
          "$ref": "#/definitions/journalsListENTRIES"
        },
        "GLACCTALLOCATIONRUNKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "JOURNAL": {
          "type": "string",
          "x-samplevalue": "605R",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "JOURNALKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 15,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "JOURNALSEQNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "JOURNAL_BILLABLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USARAJUTest",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBYID": {
          "type": "string",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODULE": {
          "type": "string",
          "x-samplevalue": "55.CONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRBATCHRECTYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REFERENCENO": {
          "type": "string",
          "x-samplevalue": "CONTRACT CN0001 LINE NO - 1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDFROM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RRSENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RRSKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SCHOPKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXIMPLICATIONS": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TEMPLATEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "USERINFO": {
          "$ref": "#/definitions/journalsListUSERINFO"
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:40:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "itemsGetByIdUOM": {
      "properties": {
        "INVUOMDETAIL": {
          "$ref": "#/definitions/itemsGetByIdUOMINVUOMDETAIL"
        },
        "POUOMDETAIL": {
          "$ref": "#/definitions/itemsGetByIdUOMPOUOMDETAIL"
        },
        "SOUOMDETAIL": {
          "$ref": "#/definitions/itemsGetByIdUOMSOUOMDETAIL"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllPayto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-displayName": "Contact Name",
          "x-samplevalue": "American Express(V20001)"
        }
      },
      "title": "payto",
      "type": "object"
    },
    "orderEntryTransactionsByIdSUBTOTALS": {
      "properties": {
        "sodocumentsubtotals": {
          "items": {
            "$ref": "#/definitions/orderEntryTransactionsByIdSUBTOTALSSodocumentsubtotals"
          },
          "type": "array"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "accountGroupsListObject": {
      "properties": {
        "APPLYASOF": {
          "type": "string",
          "x-displayName": "APPLYASOF",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ASOF": {
          "type": "string",
          "x-displayName": "ASOF",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSDIMKEY": {
          "type": "string",
          "x-displayName": "CLASSDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTDIMKEY": {
          "type": "string",
          "x-displayName": "CONTRACTDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-displayName": "CONTRACTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERDIMKEY": {
          "type": "string",
          "x-displayName": "CUSTOMERDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DBCR": {
          "type": "string",
          "x-displayName": "DBCR",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPTGRPID": {
          "type": "string",
          "x-displayName": "DEPTGRPID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTGRPKEY": {
          "type": "string",
          "x-displayName": "DEPTGRPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTGRPNAME": {
          "type": "string",
          "x-displayName": "DEPTGRPNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTKEY": {
          "type": "string",
          "x-displayName": "DEPTKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTNAME": {
          "type": "string",
          "x-displayName": "DEPTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTNO": {
          "type": "string",
          "x-displayName": "DEPTNO",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-displayName": "EMPLOYEEDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-displayName": "EMPLOYEENAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FILTERCLASS": {
          "type": "string",
          "x-displayName": "FILTERCLASS",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERCONTRACT": {
          "type": "string",
          "x-displayName": "FILTERCONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FILTERCUSTOMER": {
          "type": "string",
          "x-displayName": "FILTERCUSTOMER",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERDEPT": {
          "type": "string",
          "x-displayName": "FILTERDEPT",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTEREMPLOYEE": {
          "type": "string",
          "x-displayName": "FILTEREMPLOYEE",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERGLDIMCHANNEL": {
          "type": "string",
          "x-displayName": "FILTERGLDIMCHANNEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FILTERITEM": {
          "type": "string",
          "x-displayName": "FILTERITEM",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERLOC": {
          "type": "string",
          "x-displayName": "FILTERLOC",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERPROJECT": {
          "type": "string",
          "x-displayName": "FILTERPROJECT",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERTASK": {
          "type": "string",
          "x-displayName": "FILTERTASK",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FILTERVENDOR": {
          "type": "string",
          "x-displayName": "FILTERVENDOR",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FILTERWAREHOUSE": {
          "type": "string",
          "x-displayName": "FILTERWAREHOUSE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLCATGRPS": {
          "$ref": "#/definitions/accountGroupsListGLCATGRPS"
        },
        "GLDIMCHANNEL": {
          "type": "string",
          "x-displayName": "GLDIMCHANNEL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "HOWCREATED": {
          "type": "string",
          "x-displayName": "HOWCREATED",
          "x-samplevalue": "U",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "INCLUDECHILDAMT": {
          "type": "boolean",
          "x-displayName": "INCLUDECHILDAMT",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ISKPI": {
          "type": "boolean",
          "x-displayName": "ISKPI",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "ISLEAF": {
          "type": "string",
          "x-displayName": "ISLEAF",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMDIMKEY": {
          "type": "string",
          "x-displayName": "ITEMDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMID": {
          "type": "string",
          "x-displayName": "ITEMID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-displayName": "ITEMNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-displayName": "LOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCGRPID": {
          "type": "string",
          "x-displayName": "LOCGRPID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCGRPKEY": {
          "type": "string",
          "x-displayName": "LOCGRPKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCGRPNAME": {
          "type": "string",
          "x-displayName": "LOCGRPNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCNAME": {
          "type": "string",
          "x-displayName": "LOCNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCNO": {
          "type": "string",
          "x-displayName": "LOCNO",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMBERTYPE": {
          "type": "string",
          "x-displayName": "MEMBERTYPE",
          "x-samplevalue": "Category",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Rohit Raaga Pranav Vatada",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NORMAL_BALANCE": {
          "type": "string",
          "x-displayName": "NORMAL_BALANCE",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-displayName": "PROJECTDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-displayName": "PROJECTID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RANGEFROM": {
          "type": "string",
          "x-displayName": "RANGEFROM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RANGETO": {
          "type": "string",
          "x-displayName": "RANGETO",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 461,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RGLDIM169562_10002": {
          "type": "string",
          "x-displayName": "RGLDIM169562_10002",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TITLE": {
          "type": "string",
          "x-displayName": "TITLE",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALTITLE": {
          "type": "string",
          "x-displayName": "TOTALTITLE",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-displayName": "VENDORDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORID": {
          "type": "string",
          "x-displayName": "VENDORID",
          "x-samplevalue": "sample",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "recurringBillsListAPRECURBILLENTRYAprecurbillentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 93
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "Department Allocation 120"
        },
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DEPARTMENTNAME": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "type": "string"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "6200--Rent"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "OFFSET": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "type": "string"
        },
        "RGLDIM169562_10011": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "inventoryTransactionEntriesList": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1499
        },
        "ADJDOCHDRKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1511
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-09-24T11:46:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLINGSCHEDULEENTRY": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionEntriesListBILLINGSCHEDULEENTRY"
          },
          "type": "array"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "COST": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEFERREVENUE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DEPTKEY": {
          "type": "string"
        },
        "DISCOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNTPERCENT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCOUNT_MEMO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Inventory Transfer In-SAM001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1694,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EEACCOUNTLABEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-07-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FORM1099": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "ITEM": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionEntriesListITEM"
          },
          "type": "array"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "SAM TEST ITEM",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Products",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "SAM001"
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "SAM TEST ITEM"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEMO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRICECALCMEMO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1623,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECURCONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWALMACRO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RENEWALMACROKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECENDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECSTARTDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECTEMPLATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "I",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SCHEDULEID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SCHEDULENAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_CREATERECURSCHED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_EXISTINGSCHED": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_REVRECENDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_REVRECSTARTDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_REVRECTEMPLATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SOURCE_DOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SOURCE_DOCKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TASKID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TASKKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TASKNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXABLEAMOUNT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXABSVAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERMPERIOD": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TIMENOTES": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TIMETYPEKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TIMETYPENAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_LINETOTAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_TAXABSVAL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/inventoryTransactionEntriesListWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-07-31",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-09-24T11:46:42Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "inventoryTransactionDefinationsListSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ledgerAccountsAdvancedPATCHResponse": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "account",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": "7160"
        },
        "RECORDNO": {
          "format": "int64",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "2"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "GLACCOUNT",
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententrySHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersGetByIdSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "inventoryTransactionsByIdHISTORY": {
      "properties": {
        "dochistory": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsByIdHISTORYDochistory"
          },
          "type": "array"
        }
      },
      "title": "HISTORY",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemRevrecstartdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "revrecstartdate",
      "type": "object"
    },
    "otherreceiptsentry_SalesReceipt_GetById": {
      "properties": {
        "ACCOUNTKEY": {
          "type": "string",
          "x-samplevalue": "45"
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "ACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "4000"
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Revenue"
        },
        "AMOUNT": {
          "type": "string",
          "x-samplevalue": "50.99"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CLASSDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "CREATEDBY": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DEPARTMENTKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DEPOSITTO": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DEPT": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "ITEMDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "RECORDKEY": {
          "type": "string",
          "x-samplevalue": "2862"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "7675"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cr"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": "50.99"
        },
        "UNDEPACCTNO": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "ID"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "otherreceiptsentry",
      "x-has-customfields": false,
      "type": "object"
    },
    "recurringOrderEntryTransactionsById": {
      "properties": {
        "ACCOUNTTYPE": {
          "type": "string",
          "x-samplevalue": "Bank"
        },
        "BANKACCOUNTID": {
          "type": "string",
          "x-samplevalue": "300_RBC--Royal Bank of Canada"
        },
        "BANKACCOUNTNO": {
          "type": "string",
          "x-samplevalue": "AEoIF+7n21gOlIHONQ3DLw=="
        },
        "BANKNAME": {
          "type": "string",
          "x-samplevalue": "Royal Bank of Canada"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLTO": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdBILLTO"
        },
        "BILLTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784
        },
        "CONTACT": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdCONTACT"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-samplevalue": "dasdsfasdf"
        },
        "CONTRACTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12121
        },
        "CREDITCARDTYPE": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "CAD"
        },
        "CUSTENTITY": {
          "type": "string",
          "x-samplevalue": "C10002"
        },
        "CUSTOMERBANKACCOUNT": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdCUSTOMERBANKACCOUNT"
        },
        "CUSTOMERBANKACCOUNTKEY": {
          "type": "string"
        },
        "CUSTOMERCREDITCARD": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdCUSTOMERCREDITCARD"
        },
        "CUSTOMERCREDITCARDKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "National Clean Energy"
        },
        "CUSTVENDID": {
          "type": "string",
          "x-samplevalue": "10002--National Clean Energy"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "DOCHDRNO": {
          "type": "string"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "DOCPARKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCSTATUS": {
          "type": "string",
          "x-samplevalue": "Active"
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-30"
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "C10002"
        },
        "ENTRIES": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdENTRIES"
        },
        "EXCHRATE": {
          "type": "string",
          "x-samplevalue": ".7555"
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-15"
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdEXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "EXECCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "FREQUENCY": {
          "type": "string",
          "x-samplevalue": "Days"
        },
        "GLACCOUNTKEY": {
          "type": "string"
        },
        "GLACCTNO": {
          "type": "string"
        },
        "GLACCTTITLE": {
          "type": "string"
        },
        "INTERVAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LASTEXECDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-30"
        },
        "LASTPAYMENTRESULT": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "120--string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MELOCATIONKEY": {
          "type": "string"
        },
        "MEMOKEY": {
          "type": "string"
        },
        "MESSAGE": {
          "type": "string",
          "x-samplevalue": "adasdfasdfsfd"
        },
        "NEXTEXECDATE": {
          "type": "string"
        },
        "NOTE": {
          "type": "string"
        },
        "PAYINFULL": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PAYMENTAMOUNT": {
          "type": "string"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "Printed Check"
        },
        "PONUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "PROJECT": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECURDUEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-12-13"
        },
        "RECURPAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "RECUR_RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "REPEATBY": {
          "type": "string",
          "x-samplevalue": "D"
        },
        "REPEATCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "SCHEDULEDCONTACTEMAIL": {
          "type": "string"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3628
        },
        "SHIPTO": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 784
        },
        "SHIPVIA": {
          "type": "string",
          "x-samplevalue": "roads"
        },
        "SOURCEDOCUMENT": {
          "type": "string"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-13"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "SUBTOTALS": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdSUBTOTALS"
        },
        "SUPDOCID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "TERM": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdTERM"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        },
        "TOTAL": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.73
        },
        "TRX_SUBTOTAL": {
          "type": "string"
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 42
        },
        "USER": {
          "type": "string"
        },
        "USERKEY": {
          "type": "string"
        },
        "VENDENTITY": {
          "type": "string"
        },
        "VENDORDOCNO": {
          "type": "string"
        },
        "VIRTUAL": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdVIRTUAL"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/recurringOrderEntryTransactionsByIdWAREHOUSE"
        },
        "WHENMODIFIED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-11-15"
        }
      },
      "title": "recurringOrderEntryTransactionsById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "employeesListObject": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BIRTHDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "dob",
          "x-displayName": "BIRTHDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSKEY": {
          "type": "string",
          "x-displayName": "CLASSKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTACTKEY",
          "x-samplevalue": 200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CONTACT_LIST_INFO": {
          "$ref": "#/definitions/employeesListCONTACT_LIST_INFO"
        },
        "CONTACT_NAME": {
          "type": "string",
          "x-displayName": "CONTACT_NAME",
          "x-samplevalue": "Yeganeh, Selma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-alias": "department.name",
          "x-displayName": "DEPARTMENTTITLE",
          "x-samplevalue": "Services",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EARNINGTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EARNINGTYPEKEY",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EARNINGTYPEMETHOD": {
          "type": "string",
          "x-displayName": "EARNINGTYPEMETHOD",
          "x-samplevalue": "H",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EARNINGTYPENAME": {
          "type": "string",
          "x-displayName": "EARNINGTYPENAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEERATE": {
          "$ref": "#/definitions/employeesListEMPLOYEERATE"
        },
        "EMPLOYEETYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "EMPLOYEETYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEETYPE1099TYPE": {
          "type": "string",
          "x-displayName": "EMPLOYEETYPE1099TYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEE_POSITIONSKILL": {
          "$ref": "#/definitions/employeesListEMPLOYEE_POSITIONSKILL"
        },
        "EMPTYPEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPTYPEKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ENDDATE": {
          "type": "string",
          "x-alias": "releaseDate",
          "x-displayName": "ENDDATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTITY": {
          "type": "string",
          "x-displayName": "ENTITY",
          "x-samplevalue": "E196",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GENDER": {
          "type": "string",
          "x-alias": "gender",
          "x-displayName": "GENDER",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GENERIC": {
          "type": "boolean",
          "x-displayName": "GENERIC",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "United Kingdom",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MELOCATIONKEY": {
          "type": "string",
          "x-displayName": "MELOCATIONKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PARENTKEY",
          "x-samplevalue": 118,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMETHODKEY": {
          "type": "string",
          "x-displayName": "PAYMETHODKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PERSONALINFO": {
          "$ref": "#/definitions/employeesListPERSONALINFO"
        },
        "POSTACTUALCOST": {
          "type": "string",
          "x-displayName": "POSTACTUALCOST",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "200",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SSN": {
          "format": "int32",
          "type": "string",
          "x-alias": "ssn",
          "x-displayName": "SSN",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "hireDate",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCFOLDERKEY": {
          "type": "string",
          "x-displayName": "SUPDOCFOLDERKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPDOCFOLDERNAME": {
          "type": "string",
          "x-displayName": "SUPDOCFOLDERNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-displayName": "SUPERVISORNAME",
          "x-samplevalue": "Holdsworth, Allan",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TERMINATIONTYPE": {
          "type": "string",
          "x-displayName": "TERMINATIONTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TITLE": {
          "type": "string",
          "x-alias": "title",
          "x-displayName": "TITLE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqNoticetoproceed": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{noticetoproceed.year}"
        }
      },
      "title": "noticetoproceed",
      "type": "object"
    },
    "subscriptionsGetAllObject": {
      "properties": {
        "application": {
          "type": "string",
          "x-samplevalue": "CO"
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryDELIVERTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryDELIVERTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "foldersFilesAttachmentsAttachment": {
      "properties": {
        "attachmentdata": {
          "type": "string",
          "x-samplevalue": "ewoJIk5hbWUiOiAiSW50YWNjdFYzU2FnZSIsCgkia2V5IjogImludGFjY3QiLAoJImlkIjogMTIzCn0="
        },
        "attachmentname": {
          "type": "string",
          "x-samplevalue": "samplejsondata"
        },
        "attachmenttype": {
          "type": "string",
          "x-samplevalue": "json"
        }
      },
      "title": "attachment",
      "type": "object"
    },
    "InventoryTransactionLegacyGetById": {
      "properties": {
        "createdfrom": {
          "type": "string"
        },
        "customfields": {
          "type": "string"
        },
        "datecreated": {
          "$ref": "#/definitions/InventoryTransactionLegacyGetByIdDatecreated"
        },
        "dateprinted": {
          "type": "string"
        },
        "ictransitems": {
          "$ref": "#/definitions/InventoryTransactionLegacyGetByIdIctransitems"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1554
        },
        "message": {
          "type": "string"
        },
        "referenceno": {
          "type": "string"
        },
        "subtotals": {
          "$ref": "#/definitions/InventoryTransactionLegacyGetByIdSubtotals"
        },
        "transactionid": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase-1"
        },
        "transactionstate": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "whenmodified": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:42"
        }
      },
      "title": "InventoryTransactionLegacyGetById",
      "x-primary-key": [
        "transactionid"
      ],
      "type": "object"
    },
    "customersAdvancedGETALLSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersAdvancedGETALLSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "type": "string"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetailsItemdetail": {
      "properties": {
        "aisle": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bin": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemexpiration": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetailsItemdetailItemexpiration"
        },
        "lotno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "row": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "serialno": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemdetail",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotalCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotalCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "purchaseOrdersListEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "exchangeRateEntryGetListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EFFECTIVE_START_DATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "EFFECTIVE_START_DATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHANGERATEKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHANGERATEKEY",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHANGE_RATE",
          "x-samplevalue": 77,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECIPROCAL_RATE": {
          "type": "string",
          "x-displayName": "RECIPROCAL_RATE",
          "x-samplevalue": ".01298701",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORD_URL": {
          "type": "string",
          "x-displayName": "RECORD_URL",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "x-vendor-objectname": "EXCHANGERATEENTRY",
      "type": "object"
    },
    "orderEntryTransactionsListsSUBTOTALSSodocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        }
      },
      "type": "object"
    },
    "purchaseOrdersList_DOCPAR": {
      "properties": {
        "ALLOWEDITBILLTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ALLOWEDITCUSTVEND": {
          "type": "string",
          "x-samplevalue": "Always"
        },
        "ALLOWEDITDELIVERTO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ALLOWEDITSHIPTO": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "CONTACTTITLE1": {
          "type": "string",
          "x-samplevalue": "Pay to"
        },
        "CONTACTTITLE2": {
          "type": "string",
          "x-samplevalue": "Return to"
        },
        "CONTACTTITLE3": {
          "type": "string",
          "x-samplevalue": "Deliver to"
        },
        "CONVERT_UNITS": {
          "type": "string"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Leave Transaction Open"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CREDITLIMITCHECK": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "DEPTOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Purchase Order"
        },
        "DISPLAY_BASECURRENCY": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Order"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Purchase Order"
        },
        "EDITABLE_PRICE": {
          "type": "string"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "All"
        },
        "ENABLEOVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "EXCHRATETYPES": {
          "$ref": "#/definitions/purchaseOrdersList_DOCPAREXCHRATETYPES"
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "FORCE_PRICES": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAX": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDE_EXCH_RATE_TYPE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "OVERRIDE_PRICE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "POSTTOGL": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PRCLISTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string",
          "x-samplevalue": "Base Price List PO"
        },
        "PRINTTITLE": {
          "type": "string",
          "x-samplevalue": "Purchase Orders"
        },
        "RECALLONLY": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Purchase"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "Purchase Orders"
        },
        "SHOWEXPANDEDTOTALS": {
          "type": "string"
        },
        "SHOWTITLE1": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE2": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SHOWTITLE3": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUBTOTALTEMPLATE": {
          "type": "string"
        },
        "SUBTOTALTEMPLATEKEY": {
          "type": "string"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "TERM_NAME": {
          "type": "string",
          "x-samplevalue": "Net 30"
        },
        "UPDATES_COST": {
          "type": "string"
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "No"
        },
        "UPDATES_PRICELISTID": {
          "type": "string"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "createAccountGroupGLSTATCATGRPS": {
      "properties": {
        "GLCOACATMEMBER": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLSTATCATGRPSGLCOACATMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLSTATCATGRPS",
      "type": "object"
    },
    "inventoryTransactionEntriesListBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllPotransitemsPotransitem": {
      "properties": {
        "customfields": {
          "$ref": "#/definitions/purchasingTransactionsLegacyGetAllPotransitemsPotransitemCustomfields"
        },
        "departmentid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Department Id",
          "x-samplevalue": 300
        },
        "grossamount": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Gross Amount",
          "x-samplevalue": 0
        },
        "itemdesc": {
          "type": "string",
          "x-displayName": "Item Description",
          "x-samplevalue": "yks"
        },
        "itemid": {
          "type": "string",
          "x-displayName": "Item Id",
          "x-samplevalue": "GS-001"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Key",
          "x-samplevalue": 2413
        },
        "locationid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Location Id",
          "x-samplevalue": 100
        },
        "price": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Price",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Quantity",
          "x-samplevalue": 1
        },
        "retailprice": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Retail Price",
          "x-samplevalue": 0
        },
        "tax": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Tax",
          "x-samplevalue": 0
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Total Amount",
          "x-samplevalue": 0
        },
        "unit": {
          "type": "string",
          "x-displayName": "Unit",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Vendor Id",
          "x-samplevalue": 20001
        },
        "warehouseid": {
          "type": "string",
          "x-displayName": "Warehouse Id",
          "x-samplevalue": "32eere"
        }
      },
      "title": "potransitem",
      "type": "object"
    },
    "rolesListObject": {
      "properties": {
        "APPLYTO": {
          "type": "string",
          "x-displayName": "APPLYTO",
          "x-samplevalue": "Login and Slide-In",
          "x-searchable": false
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULE": {
          "type": "string",
          "x-displayName": "MODULE",
          "x-samplevalue": "cm",
          "x-searchable": false,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Employee User - Management",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "POLICYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "POLICYKEY",
          "x-samplevalue": 3936,
          "x-searchable": false
        },
        "POLICYVALUE": {
          "type": "string",
          "x-displayName": "POLICYVALUE",
          "x-samplevalue": "list|readonly",
          "x-searchable": false
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 7,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TYPE": {
          "type": "string",
          "x-displayName": "TYPE",
          "x-samplevalue": "Enterprise",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "title": "ENTITY_PROPS",
      "type": "object"
    },
    "projectUpdatePROJECTCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "vendorsGetByIDRETURNTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/vendorsGetByIDRETURNTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "updateAccountGroupGLSTATACCTRANGES": {
      "properties": {
        "ACCTRANGE": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLSTATACCTRANGESACCTRANGE"
          },
          "type": "array"
        }
      },
      "title": "GLSTATACCTRANGES",
      "type": "object"
    },
    "customersAdvancedGETALLBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersAdvancedGETALLBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "creditCardChargesByIdCREDITCARDFEEENTRIESCreditcardfeeentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason"
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        }
      },
      "title": "creditcardfeeentry",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsListAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/orderEntryTransactionDefinitionsListAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusKitstatusDeliverydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "deliverydate",
      "type": "object"
    },
    "trialBalancesGetResObject": {
      "properties": {
        "adjcredits": {
          "format": "int32",
          "type": "integer",
          "x-displayName": " Adjust Credits",
          "x-samplevalue": 0
        },
        "adjdebits": {
          "format": "int32",
          "type": "integer",
          "x-displayName": " Adjust Debits",
          "x-samplevalue": 0
        },
        "credits": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Credits",
          "x-samplevalue": 0
        },
        "debits": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Debits",
          "x-samplevalue": 0
        },
        "endbalance": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "End Balance",
          "x-samplevalue": 0
        },
        "glaccountno": {
          "type": "string",
          "x-displayName": "General Ledger Account No",
          "x-samplevalue": "0003"
        },
        "reportingbook": {
          "type": "string",
          "x-displayName": "Reporting Book",
          "x-samplevalue": "ACCRUAL"
        },
        "startbalance": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Start Balance",
          "x-samplevalue": 0
        }
      },
      "title": "trialBalancesGetRes",
      "type": "object",
      "x-primary-key": [
        "glaccountno"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ]
    },
    "billsPaymentsListOFFSETS": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1010
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "SVB Operating - USA"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "09/26/2018"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "LINE_NO": {
          "type": "string"
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2202
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9658
        },
        "RECORDTYPE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 123
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20004
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Lenovo"
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemItemdetailsItemdetailItemexpiration": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "itemexpiration",
      "type": "object"
    },
    "customerTypesListPARENT": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionDefinationsListRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY": {
      "properties": {
        "BILLEDQTY": {
          "type": "string"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATEENTRYKEY": {
          "type": "string"
        },
        "ESTQTY": {
          "type": "string"
        },
        "PERCENTBILLED": {
          "type": "string"
        },
        "PERCENTCOMPLETED": {
          "type": "string"
        },
        "TRUNCPERCENTCOMPLETED": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "creditMemosAdvancedGETALLCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/creditMemosAdvancedGETALLCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "invoicesAdvancedGETByIdCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "customer.contact.address.line1",
          "x-samplevalue": "Attn: Brian Fisher"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "customer.contact.address.line2",
          "x-samplevalue": "One Cambridge Center"
        },
        "CITY": {
          "type": "string",
          "x-alias": "customer.contact.address.city",
          "x-samplevalue": "Cambridge"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "customer.contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "customer.contact.address.province",
          "x-samplevalue": "MA"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "customer.contact.address.postalCode",
          "x-samplevalue": 12142
        }
      },
      "type": "object"
    },
    "projectsPatchResp": {
      "properties": {
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "OVH1"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "title": "projectsPatchResp",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "PROJECT"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemItemdetailsItemdetail"
          },
          "type": "array"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "vendorsListPAYTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsCUSTOMERCREDITCARD": {
      "properties": {
        "CARDID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "InventoryTransactionLegacyListIctransitemsIctransitem": {
      "properties": {
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "cost": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "customerid": {
          "type": "string"
        },
        "customfields": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "employeeid": {
          "type": "string"
        },
        "itemdesc": {
          "type": "string"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "SAM001"
        },
        "key": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1536
        },
        "locationid": {
          "type": "string"
        },
        "projectid": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "taskid": {
          "type": "string"
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "cewe"
        }
      },
      "title": "ictransitem",
      "type": "object"
    },
    "customersGETByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPatchReqSUBTOTALSSUBTOTAL": {
      "properties": {
        "AMT_PERC": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "APPORTIONED": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DEBIT_CREDIT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "DISC_CHARGE": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "GLOFFSETACCOUNT": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "ISTAX": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "VALUE": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "SUBTOTAL",
      "type": "object"
    },
    "purchasingTransactionDefinitionsListENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdENTRIESRecurdocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "purchaseOrdersGetByIdPODOCUMENTENTRIESPodocumententryDELIVERTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqIctransitems": {
      "properties": {
        "ictransitem": {
          "$ref": "#/definitions/InventoryTransactionLegacyPostReqIctransitemsIctransitem"
        }
      },
      "title": "ictransitems",
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEMTAXGROUP": {
      "properties": {
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemGroupsByIdMEMBERFILTERS": {
      "properties": {
        "FIELD": {
          "type": "string",
          "x-samplevalue": "ITEMTYPE"
        },
        "OPERATOR": {
          "type": "string",
          "x-samplevalue": "="
        },
        "VALUE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "__dummy": {
          "type": "string"
        },
        "_isNewLine": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "MEMBERFILTERS",
      "type": "object"
    },
    "itemsPostTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "xyz"
        }
      },
      "required": [
        "NAME"
      ],
      "type": "object"
    },
    "arAdjustmentsPatchReqAradjustmentitemsLineitem": {
      "properties": {
        "accountlabel": {
          "type": "string",
          "x-conditionally-required-description": "AP account label. Required if not using glaccountno.",
          "x-samplevalue": ""
        },
        "amount": {
          "type": "string",
          "x-samplevalue": "-500"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "CL22"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "dd"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "CUS123"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "22"
        },
        "glaccountno": {
          "type": "string",
          "x-conditionally-required-description": "GL account number. Required if not using accountlabel.",
          "x-samplevalue": "2000"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "Item1"
        },
        "key": {
          "type": "string",
          "x-samplevalue": "59"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "Ad33"
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "History bill payment 108"
        },
        "offsetglaccountno": {
          "type": "string",
          "x-samplevalue": "25"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "PR32"
        },
        "totaldue": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "totalpaid": {
          "type": "string",
          "x-samplevalue": "-500"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "dd"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "ff"
        }
      },
      "title": "lineitem",
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReq": {
      "properties": {
        "basecurr": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "billto": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqBillto"
        },
        "createdfrom": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerponumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqCustomfields"
        },
        "datecreated": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqDatecreated"
        },
        "datedue": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqDatedue"
        },
        "dateposted": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqDateposted"
        },
        "documentno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "exchrate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "exchratedate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqExchratedate"
        },
        "exchratetype": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqNeedByDate"
        },
        "origdocdate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqOrigdocdate"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shippingmethod": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipto": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqShipto"
        },
        "sotransitems": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSotransitems"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "subtotals": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyPostReqSubtotals"
        },
        "supdocid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "taxsolutionid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "termname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "trackingnumber": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "transactiontype": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vsoepricelist": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "transactiontype",
        "datecreated",
        "customerid",
        "sotransitems"
      ],
      "title": "OrdersEntryTransactionLegacyPostReq",
      "type": "object"
    },
    "inventoryTransactionsListsSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsListsSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqUpdatesotransitemsSotransitemFulfillmentstatusDeliverydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "deliverydate",
      "type": "object"
    },
    "vendorsPatchReqPAYTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "creditCardFeesListObject": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:52Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITCARDFEEENTRIES": {
          "$ref": "#/definitions/creditCardFeesListCREDITCARDFEEENTRIES"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "PMX-CARD-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1449,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSALDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSALKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-10-09",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "employeesListEMPLOYEE_POSITIONSKILL": {
      "properties": {
        "employeepositionskill": {
          "items": {
            "$ref": "#/definitions/employeesListEMPLOYEE_POSITIONSKILLEmployeepositionskill"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "allocationsListALLOCATIONENTRIESAllocationentry": {
      "properties": {
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASS": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CLASSSTATUS": {
          "type": "string"
        },
        "CONTRACT": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CUSTDIM_10002": {
          "type": "string"
        },
        "CUSTOMER": {
          "type": "string"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "CUSTOMERSTATUS": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "100--Sales"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DEPTSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "EMPLOYEE": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EMPLOYEESTATUS": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMSTATUS": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "100--USA"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "LOCBASECURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "LOCSTATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECT": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PROJECTSTATUS": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "RGLDIM169562_10033": {
          "type": "string"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "VENDOR": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "VENDORSTATUS": {
          "type": "string"
        },
        "WAREHOUSEID": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "InventoryTransactionLegacyPostReqCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPostReqCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitemsSotransitem": {
      "properties": {
        "billingtemplate": {
          "type": "string"
        },
        "bundlenumber": {
          "type": "string"
        },
        "classid": {
          "type": "string"
        },
        "contractid": {
          "type": "string"
        },
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "customerid": {
          "type": "string"
        },
        "customfields": {
          "type": "string"
        },
        "departmentid": {
          "type": "string"
        },
        "discountpercent": {
          "type": "string"
        },
        "discsurchargememo": {
          "type": "string"
        },
        "dochdrno": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1241
        },
        "docid": {
          "type": "string"
        },
        "dropship": {
          "type": "string"
        },
        "employeeid": {
          "type": "string"
        },
        "exchrate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "exchratedate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemExchratedate"
        },
        "exchratetype": {
          "type": "string"
        },
        "grossamount": {
          "type": "string"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "Wireless Access Points"
        },
        "itemid": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 904
        },
        "line_no": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "linesubtotals": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemLinesubtotals"
        },
        "locationid": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        },
        "multiplier": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "needbydate": {
          "$ref": "#/definitions/OrdersEntryTransactionLegacyGetByIdSotransitemsSotransitemNeedByDate"
        },
        "price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "projectid": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "recordno": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1232
        },
        "renewalmacro": {
          "type": "string"
        },
        "retailprice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "revrecenddate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemRevrecenddate"
        },
        "revrecstartdate": {
          "$ref": "#/definitions/OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemRevrecstartdate"
        },
        "revrectemplate": {
          "type": "string"
        },
        "sourcedocumententrytkey": {
          "type": "string"
        },
        "sourcedocumentid": {
          "type": "string"
        },
        "sourcedocumentkey": {
          "type": "string"
        },
        "taskid": {
          "type": "string"
        },
        "taskno": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "taxrate": {
          "type": "string"
        },
        "totalamount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "trx_value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1000
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorid": {
          "type": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "cewe"
        }
      },
      "title": "sotransitem",
      "type": "object"
    },
    "exchangeRateResponse": {
      "properties": {
        "RECORDNO": {
          "format": "int64",
          "type": "integer",
          "x-readOnly": true
        }
      },
      "title": "exchangeRateResponse",
      "type": "object",
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "EXCHANGERATE"
    },
    "employeesPostPERSONALINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "itemsPostLANDEDCOSTINFO": {
      "properties": {
        "ITEMLANDEDCOST": {
          "items": {
            "$ref": "#/definitions/itemsPostLANDEDCOSTINFOITEMLANDEDCOST"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY": {
      "properties": {
        "ENTRYDATE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "updateUserUSERINFOCONTACTINFO": {
      "properties": {
        "EMAIL1": {
          "type": "string",
          "x-samplevalue": "jsmith@example.com",
          "x-sub-format": "email"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Smith"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "John"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "inventoryTransactionsByIdINVDOCUMENTENTRIES": {
      "properties": {
        "invdocumententry": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsByIdINVDOCUMENTENTRIESInvdocumententry"
          },
          "type": "array"
        }
      },
      "title": "INVDOCUMENTENTRIES",
      "type": "object"
    },
    "journalEntryPatchReqENTRIESGLENTRYSPLIT": {
      "properties": {
        "AMOUNT": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "WAREHOUSEID": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "SPLIT",
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "creditCardChargeListObject": {
      "properties": {
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:52Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITCARDFEEENTRIES": {
          "$ref": "#/definitions/creditCardChargeListCREDITCARDFEEENTRIES"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-samplevalue": "PMX-CARD-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1449,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSALDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSALKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REVERSEDKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 470,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-10-09",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdatesubtotals": {
      "properties": {
        "updatesubtotal": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotal"
          },
          "type": "array"
        }
      },
      "title": "updatesubtotals",
      "type": "object"
    },
    "apTermsListObject": {
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "T3stwknkn,msfanmnasm,n;kna/lkenafnm",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCAMOUNT": {
          "type": "string",
          "x-displayName": "DISCAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCCALCON": {
          "type": "string",
          "x-displayName": "DISCCALCON",
          "x-samplevalue": "Bill total",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCDATE": {
          "type": "string",
          "x-displayName": "DISCDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCFROM": {
          "type": "string",
          "x-displayName": "DISCFROM",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DISCFUDGEDAYS": {
          "type": "string",
          "x-displayName": "DISCFUDGEDAYS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DISCPERCAMN": {
          "type": "string",
          "x-displayName": "DISCPERCAMN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DUEDATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DUEDATE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DUEFROM": {
          "type": "string",
          "x-displayName": "DUEFROM",
          "x-samplevalue": "from invoice/bill date",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "NAME": {
          "type": "string",
          "x-displayName": "NAME",
          "x-samplevalue": "Upon Receipt",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PENAMOUNT": {
          "type": "string",
          "x-displayName": "PENAMOUNT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PENFUDGEDAYS": {
          "type": "string",
          "x-displayName": "PENFUDGEDAYS",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PENPERCAMN": {
          "type": "string",
          "x-displayName": "PENPERCAMN",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PEN_TYPES": {
          "type": "string",
          "x-displayName": "PEN_TYPES",
          "x-samplevalue": "No Penalty",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "customersGETByIdCONTACTINFO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/customersGETByIdCONTACTINFOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "contact.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string",
          "x-alias": "webSite"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "dimensionsGetAllObject": {
      "properties": {
        "enabledInGL": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "objectLabel": {
          "type": "string",
          "x-samplevalue": "Department"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "DEPARTMENT"
        },
        "termLabel": {
          "type": "string",
          "x-samplevalue": "Department"
        },
        "userDefinedDimension": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "dimensionsGetAll",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllDatedue": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 13
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Month",
          "x-samplevalue": 12
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2018
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqInternalsignedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.year}"
        }
      },
      "title": "internalsignedon",
      "type": "object"
    },
    "paymentsListPRENTRY": {
      "properties": {
        "arpaymentitem": {
          "items": {
            "$ref": "#/definitions/paymentsListPRENTRYArpaymentitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersListBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "billingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/salesOrdersListBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Dharma Initiative"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "apBillsPostRes": {
      "properties": {
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "3055"
        }
      },
      "x-has-customfields": true,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "APBILL",
      "type": "object"
    },
    "warehousesListMANAGER": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Penny, Emma"
        }
      },
      "type": "object"
    },
    "apBillsPostReq": {
      "properties": {
        "ACTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "APBILLITEMS": {
          "$ref": "#/definitions/apBillsPostReqAPBILLITEMS"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ONHOLD": {
          "type": "boolean",
          "x-alias": "isOnHold",
          "x-samplevalue": true
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RECORDID": {
          "type": "string",
          "x-alias": "purchase-order.id",
          "x-samplevalue": "string"
        },
        "RECPAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "string"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "VENDORID",
        "WHENCREATED",
        "APBILLITEMS"
      ],
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryITEMRENEWALMACRO": {
      "properties": {
        "MACROID": {
          "type": "string"
        }
      },
      "title": "RENEWALMACRO",
      "type": "object"
    },
    "InventoryTransactionLegacyListSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/InventoryTransactionLegacyListSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "orderEntryTransactionsListsBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-samplevalue": "Karl"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string",
          "x-samplevalue": "Corley"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/orderEntryTransactionsListsBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(312) 875-0020"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "URL1": {
          "type": "string",
          "x-samplevalue": "www.corleyenergy.com"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsListsBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "savingsAccountsGetByIdResFINANCIALDATA": {
      "properties": {
        "APJOURNAL": {
          "type": "string",
          "x-samplevalue": "CDJ"
        },
        "ARJOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "DISABLEIET": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "RECONMODE": {
          "type": "string",
          "x-samplevalue": "Manual"
        }
      },
      "title": "FINANCIALDATA",
      "type": "object"
    },
    "creditCardFeeEntryById": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ACCOUNTLABELKEY": {
          "type": "string"
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason"
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic"
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z"
        }
      },
      "title": "creditCardFeeEntryById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPatchReqCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/OrdersEntryTransactionLegacyPatchReqCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "title": "ENTITY_PROPS",
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdExchratedate": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 29
        },
        "month": {
          "type": "string",
          "x-samplevalue": "04"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019
        }
      },
      "title": "exchratedate",
      "type": "object"
    },
    "purchaseOrdersGetByIdBILLTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "billingAddress.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts (Spend Mgmt)"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts(V20029)"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "billingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.firstName",
          "x-samplevalue": "Don"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "billingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "billingAddress.contact.lastName",
          "x-samplevalue": "Tchotchke"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/purchaseOrdersGetByIdBILLTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "billingAddress.phone",
          "x-samplevalue": "(518) 579-8800"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "billingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Souvenirs Wearables and Gifts"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "purchaseOrdersGetByIdBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "1 Rust St"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Schenectady"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "NY"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 12308
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacypatchReqUpdateSotransitemsSotransitemNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "accountGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "accountGroupsById",
      "type": "object",
      "properties": {
        "APPLYASOF": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "APPLYASOF",
          "x-nullable": true
        },
        "ASOF": {
          "type": "string",
          "x-samplevalue": "P",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ASOF",
          "x-nullable": true
        },
        "CLASSDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSDIMKEY",
          "x-nullable": true
        },
        "CLASSID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSID",
          "x-nullable": true
        },
        "CLASSNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CLASSNAME",
          "x-nullable": true
        },
        "CONTRACTDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTDIMKEY",
          "x-nullable": true
        },
        "CONTRACTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTID",
          "x-nullable": true
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTRACTNAME",
          "x-nullable": true
        },
        "CREATEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY",
          "x-nullable": true
        },
        "CUSTOMERDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERDIMKEY",
          "x-nullable": true
        },
        "CUSTOMERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID",
          "x-nullable": true
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME",
          "x-nullable": true
        },
        "DBCR": {
          "type": "string",
          "x-samplevalue": "Both",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DBCR",
          "x-nullable": true
        },
        "DEPTGRPID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTGRPID",
          "x-nullable": true
        },
        "DEPTGRPKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTGRPKEY",
          "x-nullable": true
        },
        "DEPTGRPNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTGRPNAME",
          "x-nullable": true
        },
        "DEPTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTKEY",
          "x-nullable": true
        },
        "DEPTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTNAME",
          "x-nullable": true
        },
        "DEPTNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DEPTNO",
          "x-nullable": true
        },
        "EMPLOYEEDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEEDIMKEY",
          "x-nullable": true
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEEID",
          "x-nullable": true
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EMPLOYEENAME",
          "x-nullable": true
        },
        "FILTERCLASS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERCLASS",
          "x-nullable": true
        },
        "FILTERCONTRACT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERCONTRACT",
          "x-nullable": true
        },
        "FILTERCUSTOMER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERCUSTOMER",
          "x-nullable": true
        },
        "FILTERDEPT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERDEPT",
          "x-nullable": true
        },
        "FILTEREMPLOYEE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTEREMPLOYEE",
          "x-nullable": true
        },
        "FILTERGLDIMCHANNEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERGLDIMCHANNEL",
          "x-nullable": true
        },
        "FILTERITEM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERITEM",
          "x-nullable": true
        },
        "FILTERLOC": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERLOC",
          "x-nullable": true
        },
        "FILTERPROJECT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERPROJECT",
          "x-nullable": true
        },
        "FILTERTASK": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERTASK",
          "x-nullable": true
        },
        "FILTERVENDOR": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERVENDOR",
          "x-nullable": true
        },
        "FILTERWAREHOUSE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FILTERWAREHOUSE",
          "x-nullable": true
        },
        "GLCATGRPS": {
          "$ref": "#/definitions/accountGroupsListGLCATGRPS"
        },
        "GLDIMCHANNEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "GLDIMCHANNEL",
          "x-nullable": true
        },
        "HOWCREATED": {
          "type": "string",
          "x-samplevalue": "U",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HOWCREATED",
          "x-nullable": true
        },
        "INCLUDECHILDAMT": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "INCLUDECHILDAMT",
          "x-nullable": true
        },
        "ISKPI": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISKPI",
          "x-nullable": true
        },
        "ISLEAF": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISLEAF",
          "x-nullable": true
        },
        "ITEMDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ITEMDIMKEY",
          "x-nullable": true
        },
        "ITEMID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ITEMID",
          "x-nullable": true
        },
        "ITEMNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ITEMNAME",
          "x-nullable": true
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONKEY",
          "x-nullable": true
        },
        "LOCGRPID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCGRPID",
          "x-nullable": true
        },
        "LOCGRPKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCGRPKEY",
          "x-nullable": true
        },
        "LOCGRPNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCGRPNAME",
          "x-nullable": true
        },
        "LOCNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCNAME",
          "x-nullable": true
        },
        "LOCNO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCNO",
          "x-nullable": true
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-nullable": true
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-nullable": true
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME",
          "x-nullable": true
        },
        "MEMBERTYPE": {
          "type": "string",
          "x-samplevalue": "Category",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEMBERTYPE",
          "x-nullable": true
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY",
          "x-nullable": true
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Payroll Expense",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME",
          "x-nullable": true
        },
        "NORMAL_BALANCE": {
          "type": "string",
          "x-samplevalue": "debit",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NORMAL_BALANCE",
          "x-nullable": true
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTDIMKEY",
          "x-nullable": true
        },
        "PROJECTID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTID",
          "x-nullable": true
        },
        "PROJECTNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PROJECTNAME",
          "x-nullable": true
        },
        "RANGEFROM": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RANGEFROM",
          "x-nullable": true
        },
        "RANGETO": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RANGETO",
          "x-nullable": true
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO",
          "x-nullable": true
        },
        "RGLDIM169562_10002": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RGLDIM169562_10002",
          "x-nullable": true
        },
        "TITLE": {
          "type": "string",
          "x-samplevalue": "Payroll Expenses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TITLE",
          "x-nullable": true
        },
        "TOTALTITLE": {
          "type": "string",
          "x-samplevalue": "Total Payroll Expenses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALTITLE",
          "x-nullable": true
        },
        "VENDORDIMKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORDIMKEY",
          "x-nullable": true
        },
        "VENDORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID",
          "x-nullable": true
        },
        "VENDORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME",
          "x-nullable": true
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED",
          "x-nullable": true
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED",
          "x-nullable": true
        }
      }
    },
    "purchasingTransactionsLegacyPostReqPayto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "{payto.contactname}"
        }
      },
      "title": "payto",
      "type": "object"
    },
    "updateFileAttachmentsAttachment": {
      "properties": {
        "attachmentdata": {
          "type": "string",
          "x-samplevalue": "ewogICJjb3VudHJ5IiA6ICJJbmRpYSIsCiAgImNpdHkiIDogIkh5ZGVyYWJhZCIsCiAgIkFyZWEiOiAiTWFkaW5hZ3VkYSIKfQ=="
        },
        "attachmentname": {
          "type": "string",
          "x-samplevalue": "my-file-post-34"
        },
        "attachmenttype": {
          "type": "string",
          "x-samplevalue": "txt"
        }
      },
      "required": [
        "attachmenttype",
        "attachmentname",
        "attachmentdata"
      ],
      "title": "attachment",
      "x-primary-key": [
        "supdocid"
      ],
      "type": "object"
    },
    "getAllocationsByIdALLOCATIONENTRIES": {
      "properties": {
        "allocationentry": {
          "items": {
            "$ref": "#/definitions/getAllocationsByIdALLOCATIONENTRIESAllocationentry"
          },
          "type": "array"
        }
      },
      "title": "ALLOCATIONENTRIES",
      "type": "object"
    },
    "journalEntryPatchReqENTRIESGLENTRYTAXENTRIESTAXENTRY": {
      "properties": {
        "DETAILID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TRX_TAX": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "TAXENTRY",
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "DebitMemoById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "DebitMemoById",
      "type": "object",
      "properties": {
        "APADJUSTMENTITEMS": {
          "$ref": "#/definitions/DebitMemoListAPADJUSTMENTITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-15T13:28:59Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "AUWHENCREATED"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BASECURR"
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOPAYTOCONTACTNAME"
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 977,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BILLTOPAYTOKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCRIPTION"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DOCNUMBER"
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHANGE_RATE"
        },
        "EXCHRATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATE"
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATEDATE"
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCHRATETYPE"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_DATE"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXCH_RATE_TYPE_ID"
        },
        "EXTERNALURL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "EXTERNALURL"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099BOX"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FORM1099TYPE"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MEGAENTITYNAME"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODULEKEY"
        },
        "PAYTO": {
          "$ref": "#/definitions/DebitMemoListPAYTO"
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PAYTOCONTACTNAME"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "Adjustments (USD): 2019/08/15 06:28:59:5766 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCH"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2597,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PRBATCHKEY"
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RAWSTATE"
        },
        "RECORDID": {
          "type": "string",
          "x-samplevalue": "APADJ0039",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDID"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3051,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pa",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDTYPE"
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RETURNTOCONTACTNAME"
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTORETURNTOCONTACTNAME"
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 977,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTORETURNTOKEY"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATE"
        },
        "SUPDOCID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPDOCID"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALDUE"
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALENTERED"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALPAID"
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TOTALSELECTED"
        },
        "TRX_ENTITYDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_ENTITYDUE"
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALDUE"
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -200,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALENTERED"
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALPAID"
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TRX_TOTALSELECTED"
        },
        "VENDOR": {
          "type": "string",
          "x-samplevalue": "20003--STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDOR"
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20003,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "VENDTYPE1099TYPE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDTYPE1099TYPE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        },
        "WHENPAID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPAID"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2019-08-15",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENPOSTED"
        }
      }
    },
    "locationsGetByIdSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Ace Tomato"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationsGetByIdSHIPTOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(303) 298-7788"
        },
        "PHONE2": {
          "type": "string"
        }
      },
      "title": "SHIPTO",
      "type": "object"
    },
    "warehousesListCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "33Across"
        }
      },
      "type": "object"
    },
    "createAccountGroupGLCOMPGRPS": {
      "properties": {
        "GLCOMPGRPMEMBER": {
          "items": {
            "$ref": "#/definitions/createAccountGroupGLCOMPGRPSGLCOMPGRPMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLCOMPGRPS",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqCancelafterdate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{cancelafterdate.year}"
        }
      },
      "title": "cancelafterdate",
      "type": "object"
    },
    "updateFileAttachments": {
      "properties": {
        "attachment": {
          "items": {
            "$ref": "#/definitions/updateFileAttachmentsAttachment"
          },
          "type": "array"
        }
      },
      "title": "attachments",
      "type": "object"
    },
    "locationsPostResponse": {
      "properties": {
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "110"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1124"
        }
      },
      "title": "locationsPostResponse",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "LOCATION",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqInternalsignedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{internalsignedon.year}"
        }
      },
      "title": "internalsignedon",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqPotransitemsPotransitemNeedbydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{needbydate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{needbydate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{needbydate.year}"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "inventoryTransactionEntriesByIDINVGL_ACCOUNTS": {
      "properties": {
        "INVGL_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionEntriesByIDINVGL_ACCOUNTSINVGL_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "INVGL_ACCOUNTS",
      "type": "object"
    },
    "pingGetResponse": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "pingGetResponse",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqDonotshipbeforedate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{donotshipbeforedate.year}"
        }
      },
      "title": "donotshipbeforedate",
      "type": "object"
    },
    "accountGroupsResU": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Rohit Raaga Pranav Vatada"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 461
        }
      },
      "title": "accountGroupsResU",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "GLACCTGRP"
    },
    "apBillsGetByIdAPBILLITEMS": {
      "properties": {
        "apbillitem": {
          "items": {
            "$ref": "#/definitions/apBillsGetByIdAPBILLITEMSApbillitem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchasingTransactionEntriesGetById": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNTRETAINED": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "06/26/2019 07:19:16"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 36347
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CANCELAFTERDATE": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 40
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0040"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10040 - One-Year Contract"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 480
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10453
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "AmerisourceBergen (OE)"
        },
        "DATECONFIRMED": {
          "type": "string"
        },
        "DATESHIPTOSUPPLIER": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DELIVERTO": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdDELIVERTO"
        },
        "DELIVERTOKEY": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 300
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Admin"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "DISCOUNT": {
          "type": "string"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Purchase Requisition-PR0036"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1065
        },
        "DONOTSHIPAFTERDATE": {
          "type": "string"
        },
        "DONOTSHIPBEFOREDATE": {
          "type": "string"
        },
        "DRAFTCHANGEQTY": {
          "type": "string"
        },
        "DRAFTCHANGEUNITQTY": {
          "type": "string"
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "06/26/2019"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEM": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Billable Expenses"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Reimbursed Expenses"
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 420
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "Billable Expenses"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LCCATKEY": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 120
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MEMO": {
          "type": "string",
          "x-samplevalue": "Contract line 2, billing schedule date 12/01/2015"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NEEDBYDATE": {
          "type": "string"
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PROMISEDDATE": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2537
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RELATEDDOCKEY": {
          "type": "string"
        },
        "RELATEDDOCLINEKEY": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RETAINAGEPERCENTAGE": {
          "type": "string"
        },
        "REVISEDPRICE": {
          "type": "string"
        },
        "REVISEDQTY": {
          "type": "string"
        },
        "REVISEDUNITPRICE": {
          "type": "string"
        },
        "REVISEDUNITQTY": {
          "type": "string"
        },
        "REVISEDUNITVALUE": {
          "type": "string"
        },
        "REVISEDVALUE": {
          "type": "string"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10023": {
          "type": "string"
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "P"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string",
          "x-samplevalue": "Purchase Order-PO0010"
        },
        "SOURCE_DOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 933
        },
        "SOURCE_DOCLINEKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2406
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "inactive"
        },
        "STOCK_NUMBER": {
          "type": "string"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TAXABSVAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "TRX_AMOUNTRETAINED": {
          "type": "string"
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "TRX_REVISEDPRICE": {
          "type": "string"
        },
        "TRX_REVISEDVALUE": {
          "type": "string"
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20003
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "STAPLES"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/purchasingTransactionEntriesGetByIdWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "06/26/2019"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "06/26/2019 07:19:16"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdRECALLS": {
      "properties": {
        "RECALL": {
          "type": "string"
        }
      },
      "title": "RECALLS",
      "type": "object"
    },
    "employeesByIdEMPLOYEE_POSITIONSKILL": {
      "properties": {
        "employeepositionskill": {
          "items": {
            "$ref": "#/definitions/employeesByIdEMPLOYEE_POSITIONSKILLEmployeepositionskill"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "accountGroupsResP": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Rohit Raaga Pranav Vatada"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 461
        }
      },
      "title": "accountGroupsResP",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "GLACCTGRP"
    },
    "salesOrdersGetByIdHISTORYDochistory": {
      "properties": {
        "BASEDOCKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 831
        },
        "DOCCONFIG": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "DOCSTATE": {
          "type": "string",
          "x-samplevalue": "Converted"
        },
        "DOCUMENTCREATED": {
          "type": "string",
          "x-samplevalue": "11/01/2016"
        },
        "DOCUMENTCREATEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "DOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        },
        "DOCUMENTMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/31/2017 16:00:26"
        },
        "DOCUMENTMODIFIEDBY": {
          "type": "string",
          "x-samplevalue": "admin"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 827
        },
        "SOURCEDOCUMENTID": {
          "type": "string",
          "x-samplevalue": "Sales Order-SO0013"
        }
      },
      "type": "object"
    },
    "billsPaymentsListAPPYMTDETAILS": {
      "properties": {
        "appymtdetail": {
          "items": {
            "$ref": "#/definitions/billsPaymentsListAPPYMTDETAILSAppymtdetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsSUBTOTALSInvdocumentsubtotals": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "SUBTOTAL"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "ACTIVE"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "locationsPatchResp": {
      "properties": {
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "143"
        },
        "RECORDNO": {
          "type": "string",
          "x-samplevalue": "1126"
        }
      },
      "title": "locationsPatchResp",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-vendor-objectname": "LOCATION",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdatesubtotalsUpdatesubtotalCustomfieldsCustomfield": {
      "properties": {
        "customfieldname": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfieldvalue": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "customfield",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetails": {
      "properties": {
        "itemdetail": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPatchReqPotransitemsPotransitemItemdetailsItemdetail"
          },
          "type": "array"
        }
      },
      "title": "itemdetails",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListBillto": {
      "properties": {
        "contactname": {
          "type": "string",
          "x-samplevalue": "Maxwell Warner(C1006)"
        }
      },
      "title": "billto",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdDatedue": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Day",
          "x-samplevalue": 28
        },
        "month": {
          "type": "string",
          "x-displayName": "Month",
          "x-samplevalue": "08"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "Year",
          "x-samplevalue": 2019
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdENTITY_PROPS": {
      "properties": {
        "ENTITY_PROP": {
          "type": "string"
        }
      },
      "title": "ENTITY_PROPS",
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedListCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "customer.contact.address.line1",
          "x-samplevalue": "Attn: Brian Fisher"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "customer.contact.address.line2",
          "x-samplevalue": "One Cambridge Center"
        },
        "CITY": {
          "type": "string",
          "x-alias": "customer.contact.address.city",
          "x-samplevalue": "Cambridge"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "customer.contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "customer.contact.address.province",
          "x-samplevalue": "MA"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-alias": "customer.contact.address.postalCode",
          "x-samplevalue": 12142
        }
      },
      "type": "object"
    },
    "customersGETByIdCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "contact.address.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "contact.address.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "contact.address.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "contact.address.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "contact.address.postalCode"
        }
      },
      "type": "object"
    },
    "creditCardFeeEntriesListObject": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTLABELKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Undeposited Funds",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASELOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 568,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "0xpbbu24uoull9fcg14i",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Churros tests",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 925,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "00001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Carly Frederick",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "bhu_upated",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 192,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "testing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-samplevalue": "Joel Mason",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 620,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 43242,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-samplevalue": "test",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "Corporate",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 647,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "0qmcpjgwic",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-samplevalue": "open architecture",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6288
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17391,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "cc",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 140,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3059
        },
        "VENDORID": {
          "type": "string",
          "x-samplevalue": "04rf73747t",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "SaaS Company Inc",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-10-10T06:27:53Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "purchasingTransactionsLegacyGetByIdSubtotalsSubtotalCustomfields": {
      "properties": {
        "customfield": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetByIdSubtotalsSubtotalCustomfieldsCustomfield"
          },
          "type": "array"
        }
      },
      "title": "customfields",
      "type": "object"
    },
    "savingsAccountsGetAllRespFINANCIALDATA": {
      "properties": {
        "APJOURNAL": {
          "type": "string",
          "x-samplevalue": "CDJ"
        },
        "ARJOURNAL": {
          "type": "string",
          "x-samplevalue": "CRJ"
        },
        "DISABLEIET": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "RECONMODE": {
          "type": "string",
          "x-samplevalue": "Manual"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententry": {
      "properties": {
        "ADJDOCENTRYKEY": {
          "type": "string"
        },
        "ADJDOCHDRKEY": {
          "type": "string"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T18:24:31Z"
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 25
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLABLEDOCENTRYKEY": {
          "type": "string"
        },
        "BILLABLEGLENTRYKEY": {
          "type": "string"
        },
        "BILLABLEPRENTRYKEY": {
          "type": "string"
        },
        "BILLABLETIMEENTRYKEY": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED_TIMESHEETENTRY": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryBILLED_TIMESHEETENTRY"
        },
        "BILLINGSCHEDULEENTRY": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryBILLINGSCHEDULEENTRY"
        },
        "BILLINGSCHEDULEKEY": {
          "type": "string"
        },
        "BILLINGTEMPLATE": {
          "type": "string"
        },
        "BILLINGTEMPLATEKEY": {
          "type": "string"
        },
        "BUNDLENUMBER": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "100--Small Businesses"
        },
        "CLASSNAME": {
          "type": "string",
          "x-samplevalue": "Small Businesses"
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CONTRACTID": {
          "type": "string",
          "x-samplevalue": "CN0001--10001 - One-Year Contract"
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-samplevalue": "10001 - One-Year Contract"
        },
        "COST": {
          "type": "string"
        },
        "COST_METHOD": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10001--Corley Energy"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Corley Energy"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "100--Sales"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "DEPARTMENTNAME": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "DEPTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DISCOUNT": {
          "type": "string"
        },
        "DISCOUNTPERCENT": {
          "type": "string"
        },
        "DISCOUNT_MEMO": {
          "type": "string"
        },
        "DOCHDRID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCHDRNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EEACCOUNTLABEL": {
          "type": "string"
        },
        "EEACCOUNTLABELKEY": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-31"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string"
        },
        "FORM1099": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GENINVOICELINEKEY": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "ITEM": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryITEM"
        },
        "ITEMDESC": {
          "type": "string",
          "x-samplevalue": "Machine Learning Core"
        },
        "ITEMGLGROUP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMGLGROUPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMGLGROUPNAME": {
          "type": "string",
          "x-samplevalue": "Subscriptions"
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "100--Machine Learning Core"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "ITEMTERM": {
          "type": "string"
        },
        "LINELEVELSIMPLETAXTYPE": {
          "type": "string"
        },
        "LINETOTAL": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 110
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 12
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "San Francisco"
        },
        "MEMO": {
          "type": "string",
          "x-samplevalue": "Contract line 1, billing schedule date 01/01/2015"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "MULTIPLIER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "OVERRIDETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PERCENTVAL": {
          "type": "string"
        },
        "PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "PRICECALCMEMO": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTKEY": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "PRORATEPRICE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QTY_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "QTY_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "QUANTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECURCONTRACTID": {
          "type": "string"
        },
        "RECURDOCENTRYKEY": {
          "type": "string"
        },
        "RECURDOCID": {
          "type": "string"
        },
        "RECURDOCNAME": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "type": "string"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "RETAILPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "RGLDIM169562_10024": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10002
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "S"
        },
        "SCHEDULEID": {
          "type": "string"
        },
        "SCHEDULENAME": {
          "type": "string"
        },
        "SC_CREATERECURSCHED": {
          "type": "string"
        },
        "SC_EXISTINGSCHED": {
          "type": "string"
        },
        "SC_EXTENDLINEPERIOD": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_INSTALLPRICING": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SC_REVRECENDDATE": {
          "type": "string"
        },
        "SC_REVRECSTARTDATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATE": {
          "type": "string"
        },
        "SC_REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "SC_STARTDATE": {
          "type": "string"
        },
        "SHIPTO": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententrySHIPTO"
        },
        "SHIPTOKEY": {
          "type": "string"
        },
        "SOURCE_DOCID": {
          "type": "string"
        },
        "SOURCE_DOCKEY": {
          "type": "string"
        },
        "SOURCE_DOCLINEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TASKID": {
          "type": "string"
        },
        "TASKKEY": {
          "type": "string"
        },
        "TASKNAME": {
          "type": "string"
        },
        "TAXABLEAMOUNT": {
          "type": "string"
        },
        "TAXABSVAL": {
          "type": "string"
        },
        "TAXVALOVERRIDE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TERMPERIOD": {
          "type": "string"
        },
        "TIMENOTES": {
          "type": "string"
        },
        "TIMETYPEKEY": {
          "type": "string"
        },
        "TIMETYPENAME": {
          "type": "string"
        },
        "TOTAL": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TOTAL_AMOUNT_CONVERTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTAL_AMOUNT_REMAINING": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_LINETOTAL": {
          "type": "string"
        },
        "TRX_PRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "TRX_TAXABSVAL": {
          "type": "string"
        },
        "TRX_VALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UIPRICE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UIQTY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UIVALUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "UNIT": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WAREHOUSE": {
          "$ref": "#/definitions/orderEntryTransactionsListsSODOCUMENTENTRIESSodocumententryWAREHOUSE"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqSUBTOTALS": {
      "properties": {
        "SUBTOTAL": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsPostReqSUBTOTALSSUBTOTAL"
          },
          "type": "array"
        }
      },
      "title": "SUBTOTALS",
      "type": "object"
    },
    "contractListSHIPTO": {
      "properties": {
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedListCUSTMESSAGE": {
      "properties": {
        "MESSAGE": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsPostReqPAYTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdAR_ACCOUNTS": {
      "properties": {
        "AR_ACCOUNT": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionDefinitionsGetByIdAR_ACCOUNTSAR_ACCOUNT"
          },
          "type": "array"
        }
      },
      "title": "AR_ACCOUNTS",
      "type": "object"
    },
    "salesReceiptsListOTHERRECEIPTSENTRIES": {
      "properties": {
        "otherreceiptsentry": {
          "items": {
            "$ref": "#/definitions/salesReceiptsListOTHERRECEIPTSENTRIESOtherreceiptsentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdTOTALS": {
      "properties": {
        "TOTAL": {
          "type": "string"
        }
      },
      "title": "TOTALS",
      "type": "object"
    },
    "orderEntryTransactionsByIdHISTORY": {
      "properties": {
        "dochistory": {
          "$ref": "#/definitions/orderEntryTransactionsByIdHISTORYDochistory"
        }
      },
      "title": "HISTORY",
      "type": "object"
    },
    "checkingAccountsByIdCHECKLAYOUT": {
      "properties": {
        "BANKACCTALIGN": {
          "type": "string",
          "x-samplevalue": "right"
        },
        "CHECKNOLENGTH": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        },
        "CHECKPAPERFORMAT": {
          "type": "string",
          "x-samplevalue": "top"
        },
        "CHECKPRINTFORMAT": {
          "type": "string",
          "x-samplevalue": "standard"
        },
        "COMPANY_LOGO": {
          "type": "string"
        },
        "DFLTCNYADDR": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "DISPLAYLOCATIONAS": {
          "type": "string",
          "x-samplevalue": "id"
        },
        "MICRTRANSCODE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ONUS32": {
          "type": "string",
          "x-samplevalue": "Position 31"
        },
        "PRINTCNYLOGO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "PRINTLINEITEMS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SIGLINE2AMOUNT": {
          "type": "string"
        },
        "SIGNATUREIMAGE1": {
          "type": "string"
        },
        "SIGNATUREIMAGE2": {
          "type": "string"
        },
        "SPACESTOAPPEND": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "USDTEXT": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USECNYADDRESS": {
          "type": "string",
          "x-samplevalue": "C"
        },
        "USESECONDSIGNATURECHECKS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "USESIG1BELOWAMT": {
          "type": "string"
        },
        "USESIG2BELOWAMT": {
          "type": "string"
        },
        "VOIDTEXT": {
          "type": "string"
        }
      },
      "title": "CHECKLAYOUT",
      "type": "object"
    },
    "locationsGetById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "locationsGetById",
      "type": "object",
      "properties": {
        "BUSINESSDAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "BUSINESSDAYS"
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/locationsListCONTACTINFO"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 641,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CONTACTKEY"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CURRENCY"
        },
        "CUSTENTITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTENTITY"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERID"
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTOMERNAME"
        },
        "CUSTTITLE": {
          "type": "string",
          "x-samplevalue": "Nothing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CUSTTITLE"
        },
        "ENDDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-12",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENDDATE"
        },
        "ENTITY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITY"
        },
        "ENTITYRECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ENTITYRECORDNO"
        },
        "FEDERALID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FEDERALID"
        },
        "FIRSTMONTH": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIRSTMONTH"
        },
        "FIRSTMONTHTAX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FIRSTMONTHTAX"
        },
        "FOOTNOTETEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "FOOTNOTETEXT"
        },
        "HAS_IE_RELATION": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "HAS_IE_RELATION"
        },
        "IEPAYABLE": {
          "$ref": "#/definitions/locationsListIEPAYABLE"
        },
        "IEPAYABLEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IEPAYABLEACCTKEY"
        },
        "IERECEIVABLE": {
          "$ref": "#/definitions/locationsListIERECEIVABLE"
        },
        "IERECEIVABLEACCTKEY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "IERECEIVABLEACCTKEY"
        },
        "ISROOT": {
          "type": "string",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "ISROOT"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "In",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "LOCATIONID"
        },
        "MARKETING_TEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MARKETING_TEXT"
        },
        "MESSAGE_TEXT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MESSAGE_TEXT"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "as",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "PARENTID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTID"
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "PARENTKEY"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 14,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "REPORTPRINTAS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "REPORTPRINTAS"
        },
        "RESERVEAMT": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RESERVEAMT"
        },
        "SHIPTO": {
          "$ref": "#/definitions/locationsListSHIPTO"
        },
        "SHIPTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 264,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SHIPTOKEY"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-02",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STARTDATE"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "STATUS"
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORID"
        },
        "SUPERVISORKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORKEY"
        },
        "SUPERVISORNAME": {
          "type": "string",
          "x-samplevalue": "Penny, Emma",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "SUPERVISORNAME"
        },
        "TAXID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1234567890,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "TAXID"
        },
        "VENDENTITY": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDENTITY"
        },
        "VENDORID": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORID"
        },
        "VENDORNAME": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "VENDORNAME"
        },
        "WEEKENDS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WEEKENDS"
        },
        "WEEKSTART": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WEEKSTART"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "employeesByIdCONTACT_LIST_INFOEmployeeentitycontactsEMPLOYEE": {
      "properties": {
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 196
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsByIdWAREHOUSE": {
      "properties": {
        "LOCATIONID": {
          "type": "string"
        }
      },
      "title": "WAREHOUSE",
      "type": "object"
    },
    "projectUpdate": {
      "properties": {
        "BEGINDATE": {
          "type": "string",
          "x-samplevalue": "Begin date in formatmm/dd/yyyy"
        },
        "BILLABLEAPPODEFAULT": {
          "type": "string",
          "x-samplevalue": "Billable AP/purchasing. Usefalsefor No,truefor Yes. (Default:false)"
        },
        "BILLABLEEXPDEFAULT": {
          "type": "string",
          "x-samplevalue": "Billable employee expense. Usefalsefor No,truefor Yes. (Default:false)"
        },
        "BILLINGPRICING": {
          "type": "string",
          "x-samplevalue": "Labor pricing option"
        },
        "BILLINGRATE": {
          "type": "string",
          "x-samplevalue": "Labor pricing default rate"
        },
        "BILLINGTYPE": {
          "type": "string",
          "x-samplevalue": "Billing type"
        },
        "BILLTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectUpdatePROJECTBILLTO"
        },
        "BUDGETAMOUNT": {
          "type": "string",
          "x-samplevalue": "Budgeted billing amount"
        },
        "BUDGETEDCOST": {
          "type": "string",
          "x-samplevalue": "Budgeted cost"
        },
        "BUDGETID": {
          "type": "string",
          "x-samplevalue": "GL budget ID"
        },
        "BUDGETQTY": {
          "type": "string",
          "x-samplevalue": "Budgeted duration"
        },
        "CLASSID": {
          "type": "string",
          "x-samplevalue": "Class ID"
        },
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectUpdatePROJECTCONTACTINFO"
        },
        "CONTRACTAMOUNT": {
          "type": "string",
          "x-samplevalue": "Contract amount"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "Currency code"
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "Customer ID"
        },
        "CUSTUSERID": {
          "type": "string",
          "x-samplevalue": "External user ID"
        },
        "DEPARTMENTID": {
          "type": "string",
          "x-samplevalue": "Department ID"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Description"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-samplevalue": "Reference number"
        },
        "ENDDATE": {
          "type": "string",
          "x-samplevalue": "End date in formatmm/dd/yyyy"
        },
        "EXPENSEPRICING": {
          "type": "string",
          "x-samplevalue": "Expense pricing option"
        },
        "EXPENSERATE": {
          "type": "string",
          "x-samplevalue": "Expense pricing default rate"
        },
        "INVOICECURRENCY": {
          "type": "string",
          "x-samplevalue": "Invoice currency code"
        },
        "INVOICEMESSAGE": {
          "type": "string",
          "x-samplevalue": "Invoice message"
        },
        "INVOICEWITHPARENT": {
          "type": "string",
          "x-samplevalue": "Usefalsefor No,truefor Yes. (Default:false)"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "Location ID"
        },
        "MANAGERID": {
          "type": "string",
          "x-samplevalue": "Project manager employee ID"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Name"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "Parent project ID"
        },
        "POAMOUNT": {
          "type": "string",
          "x-samplevalue": "Purchase order amount"
        },
        "POAPPRICING": {
          "type": "string",
          "x-samplevalue": "AP/purchasing pricing option"
        },
        "POAPRATE": {
          "type": "string",
          "x-samplevalue": "AP/purchasing pricing default rate"
        },
        "PONUMBER": {
          "type": "string",
          "x-samplevalue": "Purchase order number"
        },
        "PQNUMBER": {
          "type": "string",
          "x-samplevalue": "Purchase quote number"
        },
        "PROJECTCATEGORY": {
          "type": "string",
          "x-samplevalue": "Project category"
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "Project ID to create. Required if company does not use auto-numbering."
        },
        "PROJECTSTATUS": {
          "type": "string",
          "x-samplevalue": "Project status"
        },
        "PROJECTTYPE": {
          "type": "string",
          "x-samplevalue": "Project type"
        },
        "PROJECT_RULES": {
          "type": "string",
          "x-samplevalue": "Transaction rules for project. MultiplePROJECT_RULESelements may be passed."
        },
        "SALESCONTACTID": {
          "type": "string",
          "x-samplevalue": "Sales contact employee ID"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "string"
            }
          },
          "$ref": "#/definitions/projectUpdatePROJECTSHIPTO"
        },
        "SONUMBER": {
          "type": "string",
          "x-samplevalue": "Sales order number"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "Status. Useactivefor Active otherwise useinactivefor Inactive. (Default:active)"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "Attachments ID"
        },
        "TERMNAME": {
          "type": "string",
          "x-samplevalue": "Payment term"
        },
        "USERRESTRICTIONS": {
          "type": "string",
          "x-samplevalue": "User restrictions"
        }
      },
      "title": "projectUpdate",
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReq": {
      "properties": {
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqCustomfields"
        },
        "datecreated": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqDatecreated"
        },
        "externalid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "message": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "referenceno": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updateictransitems": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitems"
        },
        "updatesubtotals": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdatesubtotals"
        }
      },
      "title": "InventoryTransactionLegacyPatchReq",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "invoicesAdvancedGETByIdSHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "ADDRESS2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "CITY": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "COUNTRY": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        },
        "ZIP": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqDatedue": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{datedue.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{datedue.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{datedue.year}"
        }
      },
      "title": "datedue",
      "type": "object"
    },
    "ccTransactionsListObject": {
      "properties": {
        "AUWHENCREATED": {
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CCTRANSACTIONENTRIES": {
          "$ref": "#/definitions/ccTransactionsListCCTRANSACTIONENTRIES"
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-displayName": "DESCRIPTION2",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHANGE_RATE",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-displayName": "EXCH_RATE_DATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EXCH_RATE_TYPE_ID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCH_RATE_TYPE_ID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-displayName": "FINANCIALENTITY",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "string"
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 0
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PAYMENTKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "PRBATCHKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RAWSTATE": {
          "type": "string",
          "x-displayName": "RAWSTATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORD_URL": {
          "type": "string",
          "x-displayName": "RECORD_URL",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSALDATE": {
          "type": "string",
          "x-displayName": "REVERSALDATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSALKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REVERSALKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSEDDATE": {
          "type": "string",
          "x-displayName": "REVERSEDDATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REVERSEDKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REVERSEDKEY",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_TOTALPAID",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENPAID": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2019-09-14T09:15:15.968Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "usersGetByIdCONTACTINFOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "journalEntryPostReqENTRIESGLENTRYTAXENTRIES": {
      "properties": {
        "TAXENTRY": {
          "items": {
            "$ref": "#/definitions/journalEntryPostReqENTRIESGLENTRYTAXENTRIESTAXENTRY"
          },
          "type": "array"
        }
      },
      "title": "TAXENTRIES",
      "type": "object"
    },
    "usersListObject": {
      "properties": {
        "ADMIN": {
          "type": "string",
          "x-displayName": "ADMIN",
          "x-samplevalue": "Full",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CHATTER_DISABLED": {
          "type": "boolean",
          "x-displayName": "CHATTER_DISABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "CONTACTINFO": {
          "$ref": "#/definitions/usersListCONTACTINFO"
        },
        "CONTACTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTACTKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOGINDISABLED": {
          "type": "boolean",
          "x-displayName": "LOGINDISABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "LOGINID": {
          "type": "string",
          "x-displayName": "LOGINID",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MFA_ENABLED": {
          "type": "boolean",
          "x-displayName": "MFA_ENABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MFA_NOTRUST": {
          "type": "string",
          "x-displayName": "MFA_NOTRUST",
          "x-samplevalue": "none",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PWDNEVEREXPIRES": {
          "type": "boolean",
          "x-displayName": "PWDNEVEREXPIRES",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PWDQLYNOTENFORCED": {
          "type": "boolean",
          "x-displayName": "PWDQLYNOTENFORCED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RESETPASSWORD": {
          "type": "boolean",
          "x-displayName": "RESETPASSWORD",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SSO_COMPANY_ENABLED": {
          "type": "string",
          "x-displayName": "SSO_COMPANY_ENABLED",
          "x-samplevalue": "Disabled",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SSO_ENABLED": {
          "type": "boolean",
          "x-displayName": "SSO_ENABLED",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "SSO_FEDERATED_ID": {
          "type": "string",
          "x-displayName": "SSO_FEDERATED_ID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "inactive",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "UNRESTRICTED": {
          "type": "boolean",
          "x-displayName": "UNRESTRICTED",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "USERTYPE": {
          "type": "string",
          "x-displayName": "USERTYPE",
          "x-samplevalue": "business user",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VISIBLE": {
          "type": "boolean",
          "x-displayName": "VISIBLE",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionsByIdSODOCUMENTENTRIESSodocumententrySHIPTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "title": "MAILADDRESS",
      "type": "object"
    },
    "inventoryTransactionsByIdCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string"
        },
        "INITIAL": {
          "type": "string"
        },
        "LASTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/inventoryTransactionsByIdCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "string"
        }
      },
      "title": "CONTACT",
      "type": "object"
    },
    "locationsGetByIdCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Algorithmics"
        },
        "EMAIL1": {
          "type": "string"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationsGetByIdCONTACTINFOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "Algorithmics"
        }
      },
      "title": "CONTACTINFO",
      "type": "object"
    },
    "invoicesAdvancedGETByIdARINVOICEITEMS": {
      "properties": {
        "arinvoiceitem": {
          "$ref": "#/definitions/invoicesAdvancedGETByIdARINVOICEITEMSArinvoiceitem"
        }
      },
      "type": "object"
    },
    "userGroupsById": {
      "x-primary-key": [
        "RECORDNO"
      ],
      "title": "userGroupsById",
      "type": "object",
      "properties": {
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "CREATEDBY"
        },
        "DESCR": {
          "type": "string",
          "x-samplevalue": "Non Accounting Users",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "DESCR"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "MODIFIEDBY"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "Non Accounting Users",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "NAME"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "RECORDNO"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENCREATED"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "x-displayName": "WHENMODIFIED"
        }
      }
    },
    "updateAccountGroupGLSTATCATGRPS": {
      "properties": {
        "GLCOACATMEMBER": {
          "items": {
            "$ref": "#/definitions/updateAccountGroupGLSTATCATGRPSGLCOACATMEMBER"
          },
          "type": "array"
        }
      },
      "title": "GLSTATCATGRPS",
      "type": "object"
    },
    "OrderEntryTransactionLegacyListSotransitemsSotransitemRevrecstartdate": {
      "properties": {
        "day": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      },
      "title": "revrecstartdate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqSubtotalsSubtotal": {
      "properties": {
        "absval": {
          "type": "string",
          "x-samplevalue": "{absval}"
        },
        "classid": {
          "type": "string",
          "x-samplevalue": "{classid}"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "{contractid}"
        },
        "costtypeid": {
          "type": "string",
          "x-samplevalue": "{costtypeid}"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "{customerid}"
        },
        "customfields": {
          "type": "string",
          "x-samplevalue": "{cstom}"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "{departmentid}"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "{description}"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "{employeeid}"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "{itemid}"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "{locationid}"
        },
        "percentval": {
          "type": "string",
          "x-samplevalue": "{percentval}"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "{projectid}"
        },
        "taskid": {
          "type": "string",
          "x-samplevalue": "{taskid}"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "{total}"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "{vendorid}"
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "ccTransactionsListCCTRANSACTIONENTRIES": {
      "properties": {
        "CCTRANSACTIONENTRY": {
          "items": {
            "$ref": "#/definitions/ccTransactionsListCCTRANSACTIONENTRIESCCTRANSACTIONENTRY"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "locationsListSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Ace Tomato"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/locationsListSHIPTOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string",
          "x-samplevalue": "(303) 298-7788"
        },
        "PHONE2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedListSHIPTO": {
      "properties": {
        "CELLPHONE": {
          "type": "string"
        },
        "COMPANYNAME": {
          "type": "string"
        },
        "CONTACTNAME": {
          "type": "string"
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "shippingAddress.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "shippingAddress.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "shippingAddress.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedListSHIPTOMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "shippingAddress.phone"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string",
          "x-alias": "shippingAddress.contact.salutation"
        },
        "PRINTAS": {
          "type": "string"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/invoicesAdvancedListSHIPTOTAXGROUP"
        },
        "TAXID": {
          "type": "string"
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "employeesByIdEMPLOYEERATE": {
      "properties": {
        "employeerate": {
          "$ref": "#/definitions/employeesByIdEMPLOYEERATEEmployeerate"
        }
      },
      "type": "object"
    },
    "customersPOSTRequestCONTACTINFO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "type": "object"
    },
    "recurringOrderEntryTransactionsByIdVIRTUAL": {
      "properties": {
        "CUSTOMER": {
          "type": "string",
          "x-samplevalue": "10002--National Clean Energy"
        }
      },
      "title": "VIRTUAL",
      "type": "object"
    },
    "accountGroupsListGLCATGRPSGlcoacatmember": {
      "properties": {
        "CATEGORYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 806
        },
        "CATEGORYNAME": {
          "type": "string",
          "x-samplevalue": "Payroll Expense"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "PARENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 57
        },
        "SORTORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "WHENCREATED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "type": "object"
    },
    "itemsGetByIdUOMINVUOMDETAIL": {
      "properties": {
        "UNIT": {
          "type": "string",
          "x-alias": "inventoryStockUom",
          "x-samplevalue": "Each"
        }
      },
      "type": "object"
    },
    "entitiesListSHIPTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/entitiesListSHIPTOMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        },
        "PHONE2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsPAYMENTS": {
      "properties": {
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "DOCHDRKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Invoice-IN0001"
        },
        "DOCNO": {
          "type": "string",
          "x-samplevalue": "IN0001"
        },
        "DOCUMENTNUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2398
        },
        "ENTITY": {
          "type": "string",
          "x-samplevalue": "C10001"
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "PAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "PAYMENTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 511
        },
        "PAYMENTTYPE": {
          "type": "string",
          "x-samplevalue": "Printed Check"
        },
        "POSTINGDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "RECEIPTDATE": {
          "type": "string",
          "x-samplevalue": "03/02/2015"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "rp"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 70000
        },
        "VIEWPAYMENT": {
          "type": "string",
          "x-samplevalue": "rp"
        }
      },
      "type": "object"
    },
    "projectsGetByIdBILLTO": {
      "properties": {
        "CONTACTNAME": {
          "type": "string"
        }
      },
      "title": "BILLTO",
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPINCOMEACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedGETByIdSHIPTOTAXGROUP": {
      "properties": {
        "NAME": {
          "type": "string"
        },
        "RECORDNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesAdvancedListCONTACT": {
      "properties": {
        "CELLPHONE": {
          "type": "string",
          "x-alias": "customer.contact.mobile"
        },
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "EMAIL1": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "EMAIL2": {
          "type": "string"
        },
        "FAX": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "FIRSTNAME": {
          "type": "string",
          "x-alias": "customer.contact.firstName"
        },
        "INITIAL": {
          "type": "string",
          "x-alias": "customer.contact.middleName"
        },
        "LASTNAME": {
          "type": "string",
          "x-alias": "customer.contact.lastName"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/invoicesAdvancedListCONTACTMAILADDRESS"
        },
        "PAGER": {
          "type": "string"
        },
        "PHONE1": {
          "type": "string",
          "x-alias": "customer.contact.phone",
          "x-samplevalue": "617-374-4794"
        },
        "PHONE2": {
          "type": "string"
        },
        "PREFIX": {
          "type": "string"
        },
        "PRINTAS": {
          "type": "string",
          "x-samplevalue": "n2N Commerce, Inc."
        },
        "URL1": {
          "type": "string"
        },
        "URL2": {
          "type": "string"
        },
        "VISIBLE": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqNeedByDate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "needbydate",
      "type": "object"
    },
    "files": {
      "properties": {
        "recordno": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsLegacyReversePostReq": {
      "properties": {
        "arpaymentkey": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1234
        },
        "datereversed": {
          "$ref": "#/definitions/paymentsLegacyReversePostReqDatereversed"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "jgsydyv"
        },
        "nsfclosedaccount": {
          "type": "string",
          "x-samplevalue": "5698"
        }
      },
      "required": [
        "datereversed"
      ],
      "title": "paymentsLegacyReversePostReq",
      "type": "object"
    },
    "paymentsLegacyReversePostRes": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "paymentsLegacyReversePostRes",
      "type": "object"
    },
    "salesOrdersListSODOCUMENTENTRIESSodocumententryWAREHOUSE": {
      "properties": {
        "LOCATION_NO": {
          "type": "string"
        },
        "NAME": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "expenseReportsListEEXPENSESITEMSEexpensesitem": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6170
        },
        "ACCOUNTLABEL": {
          "type": "string",
          "x-samplevalue": "Meals"
        },
        "ACCOUNTLABELKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLABLECONTRACTSCHENTRYKEY": {
          "type": "string"
        },
        "BILLABLECONTRACTUSAGEBILLINGID": {
          "type": "string"
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTFIELD1": {
          "type": "string"
        },
        "CUSTFIELD10": {
          "type": "string"
        },
        "CUSTFIELD100": {
          "type": "string"
        },
        "CUSTFIELD11": {
          "type": "string"
        },
        "CUSTFIELD12": {
          "type": "string"
        },
        "CUSTFIELD13": {
          "type": "string"
        },
        "CUSTFIELD14": {
          "type": "string"
        },
        "CUSTFIELD15": {
          "type": "string"
        },
        "CUSTFIELD16": {
          "type": "string"
        },
        "CUSTFIELD17": {
          "type": "string"
        },
        "CUSTFIELD18": {
          "type": "string"
        },
        "CUSTFIELD19": {
          "type": "string"
        },
        "CUSTFIELD2": {
          "type": "string"
        },
        "CUSTFIELD20": {
          "type": "string"
        },
        "CUSTFIELD21": {
          "type": "string"
        },
        "CUSTFIELD22": {
          "type": "string"
        },
        "CUSTFIELD23": {
          "type": "string"
        },
        "CUSTFIELD24": {
          "type": "string"
        },
        "CUSTFIELD25": {
          "type": "string"
        },
        "CUSTFIELD26": {
          "type": "string"
        },
        "CUSTFIELD27": {
          "type": "string"
        },
        "CUSTFIELD28": {
          "type": "string"
        },
        "CUSTFIELD29": {
          "type": "string"
        },
        "CUSTFIELD3": {
          "type": "string"
        },
        "CUSTFIELD30": {
          "type": "string"
        },
        "CUSTFIELD31": {
          "type": "string"
        },
        "CUSTFIELD32": {
          "type": "string"
        },
        "CUSTFIELD33": {
          "type": "string"
        },
        "CUSTFIELD34": {
          "type": "string"
        },
        "CUSTFIELD35": {
          "type": "string"
        },
        "CUSTFIELD36": {
          "type": "string"
        },
        "CUSTFIELD37": {
          "type": "string"
        },
        "CUSTFIELD38": {
          "type": "string"
        },
        "CUSTFIELD39": {
          "type": "string"
        },
        "CUSTFIELD4": {
          "type": "string"
        },
        "CUSTFIELD40": {
          "type": "string"
        },
        "CUSTFIELD41": {
          "type": "string"
        },
        "CUSTFIELD42": {
          "type": "string"
        },
        "CUSTFIELD43": {
          "type": "string"
        },
        "CUSTFIELD44": {
          "type": "string"
        },
        "CUSTFIELD45": {
          "type": "string"
        },
        "CUSTFIELD46": {
          "type": "string"
        },
        "CUSTFIELD47": {
          "type": "string"
        },
        "CUSTFIELD48": {
          "type": "string"
        },
        "CUSTFIELD49": {
          "type": "string"
        },
        "CUSTFIELD5": {
          "type": "string"
        },
        "CUSTFIELD50": {
          "type": "string"
        },
        "CUSTFIELD51": {
          "type": "string"
        },
        "CUSTFIELD52": {
          "type": "string"
        },
        "CUSTFIELD53": {
          "type": "string"
        },
        "CUSTFIELD54": {
          "type": "string"
        },
        "CUSTFIELD55": {
          "type": "string"
        },
        "CUSTFIELD56": {
          "type": "string"
        },
        "CUSTFIELD57": {
          "type": "string"
        },
        "CUSTFIELD58": {
          "type": "string"
        },
        "CUSTFIELD59": {
          "type": "string"
        },
        "CUSTFIELD6": {
          "type": "string"
        },
        "CUSTFIELD60": {
          "type": "string"
        },
        "CUSTFIELD61": {
          "type": "string"
        },
        "CUSTFIELD62": {
          "type": "string"
        },
        "CUSTFIELD63": {
          "type": "string"
        },
        "CUSTFIELD64": {
          "type": "string"
        },
        "CUSTFIELD65": {
          "type": "string"
        },
        "CUSTFIELD66": {
          "type": "string"
        },
        "CUSTFIELD67": {
          "type": "string"
        },
        "CUSTFIELD68": {
          "type": "string"
        },
        "CUSTFIELD69": {
          "type": "string"
        },
        "CUSTFIELD7": {
          "type": "string"
        },
        "CUSTFIELD70": {
          "type": "string"
        },
        "CUSTFIELD71": {
          "type": "string"
        },
        "CUSTFIELD72": {
          "type": "string"
        },
        "CUSTFIELD73": {
          "type": "string"
        },
        "CUSTFIELD74": {
          "type": "string"
        },
        "CUSTFIELD75": {
          "type": "string"
        },
        "CUSTFIELD76": {
          "type": "string"
        },
        "CUSTFIELD77": {
          "type": "string"
        },
        "CUSTFIELD78": {
          "type": "string"
        },
        "CUSTFIELD79": {
          "type": "string"
        },
        "CUSTFIELD8": {
          "type": "string"
        },
        "CUSTFIELD80": {
          "type": "string"
        },
        "CUSTFIELD81": {
          "type": "string"
        },
        "CUSTFIELD82": {
          "type": "string"
        },
        "CUSTFIELD83": {
          "type": "string"
        },
        "CUSTFIELD84": {
          "type": "string"
        },
        "CUSTFIELD85": {
          "type": "string"
        },
        "CUSTFIELD86": {
          "type": "string"
        },
        "CUSTFIELD87": {
          "type": "string"
        },
        "CUSTFIELD88": {
          "type": "string"
        },
        "CUSTFIELD89": {
          "type": "string"
        },
        "CUSTFIELD9": {
          "type": "string"
        },
        "CUSTFIELD90": {
          "type": "string"
        },
        "CUSTFIELD91": {
          "type": "string"
        },
        "CUSTFIELD92": {
          "type": "string"
        },
        "CUSTFIELD93": {
          "type": "string"
        },
        "CUSTFIELD94": {
          "type": "string"
        },
        "CUSTFIELD95": {
          "type": "string"
        },
        "CUSTFIELD96": {
          "type": "string"
        },
        "CUSTFIELD97": {
          "type": "string"
        },
        "CUSTFIELD98": {
          "type": "string"
        },
        "CUSTFIELD99": {
          "type": "string"
        },
        "CUSTOMDIMENSIONS": {
          "type": "string"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 80
        },
        "CUSTOMERID": {
          "type": "string",
          "x-samplevalue": "10075--Capsule"
        },
        "DEFERREDREVACCTKEY": {
          "type": "string"
        },
        "DEFERREVENUE": {
          "type": "string"
        },
        "DEPARTMENT": {
          "type": "string",
          "x-samplevalue": "200--Services"
        },
        "DEPT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Restaurant"
        },
        "DESCRIPTION2": {
          "type": "string",
          "x-samplevalue": "Lunch with Lisa"
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 154
        },
        "EMPLOYEEID": {
          "type": "string",
          "x-samplevalue": "176--Newton, Isaac"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-12-07"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "type": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "EXPPMTTYPEKEY": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "GLENTRYKEY": {
          "type": "string"
        },
        "GLOFFSET": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 14
        },
        "ITEMID": {
          "type": "string",
          "x-samplevalue": "420--Billable Expenses"
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "110--San Francisco"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "NONREIMBURSABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "NR_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "NR_TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "OFFSETACCOUNTKEY": {
          "type": "string"
        },
        "OFFSETKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6302
        },
        "PARENTENTRY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8
        },
        "PROJECTID": {
          "type": "string",
          "x-samplevalue": "1004--Capsule Customization"
        },
        "QUANTITY": {
          "type": "string"
        },
        "RECORD": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6301
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1731
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6301
        },
        "RECORDTYPE": {
          "type": "string"
        },
        "REL1": {
          "type": "string"
        },
        "REL10": {
          "type": "string"
        },
        "REL100": {
          "type": "string"
        },
        "REL11": {
          "type": "string"
        },
        "REL12": {
          "type": "string"
        },
        "REL13": {
          "type": "string"
        },
        "REL14": {
          "type": "string"
        },
        "REL15": {
          "type": "string"
        },
        "REL16": {
          "type": "string"
        },
        "REL17": {
          "type": "string"
        },
        "REL18": {
          "type": "string"
        },
        "REL19": {
          "type": "string"
        },
        "REL2": {
          "type": "string"
        },
        "REL20": {
          "type": "string"
        },
        "REL21": {
          "type": "string"
        },
        "REL22": {
          "type": "string"
        },
        "REL23": {
          "type": "string"
        },
        "REL24": {
          "type": "string"
        },
        "REL25": {
          "type": "string"
        },
        "REL26": {
          "type": "string"
        },
        "REL27": {
          "type": "string"
        },
        "REL28": {
          "type": "string"
        },
        "REL29": {
          "type": "string"
        },
        "REL3": {
          "type": "string"
        },
        "REL30": {
          "type": "string"
        },
        "REL31": {
          "type": "string"
        },
        "REL32": {
          "type": "string"
        },
        "REL33": {
          "type": "string"
        },
        "REL34": {
          "type": "string"
        },
        "REL35": {
          "type": "string"
        },
        "REL36": {
          "type": "string"
        },
        "REL37": {
          "type": "string"
        },
        "REL38": {
          "type": "string"
        },
        "REL39": {
          "type": "string"
        },
        "REL4": {
          "type": "string"
        },
        "REL40": {
          "type": "string"
        },
        "REL41": {
          "type": "string"
        },
        "REL42": {
          "type": "string"
        },
        "REL43": {
          "type": "string"
        },
        "REL44": {
          "type": "string"
        },
        "REL45": {
          "type": "string"
        },
        "REL46": {
          "type": "string"
        },
        "REL47": {
          "type": "string"
        },
        "REL48": {
          "type": "string"
        },
        "REL49": {
          "type": "string"
        },
        "REL5": {
          "type": "string"
        },
        "REL50": {
          "type": "string"
        },
        "REL51": {
          "type": "string"
        },
        "REL52": {
          "type": "string"
        },
        "REL53": {
          "type": "string"
        },
        "REL54": {
          "type": "string"
        },
        "REL55": {
          "type": "string"
        },
        "REL56": {
          "type": "string"
        },
        "REL57": {
          "type": "string"
        },
        "REL58": {
          "type": "string"
        },
        "REL59": {
          "type": "string"
        },
        "REL6": {
          "type": "string"
        },
        "REL60": {
          "type": "string"
        },
        "REL61": {
          "type": "string"
        },
        "REL62": {
          "type": "string"
        },
        "REL63": {
          "type": "string"
        },
        "REL64": {
          "type": "string"
        },
        "REL65": {
          "type": "string"
        },
        "REL66": {
          "type": "string"
        },
        "REL67": {
          "type": "string"
        },
        "REL68": {
          "type": "string"
        },
        "REL69": {
          "type": "string"
        },
        "REL7": {
          "type": "string"
        },
        "REL70": {
          "type": "string"
        },
        "REL71": {
          "type": "string"
        },
        "REL72": {
          "type": "string"
        },
        "REL73": {
          "type": "string"
        },
        "REL74": {
          "type": "string"
        },
        "REL75": {
          "type": "string"
        },
        "REL76": {
          "type": "string"
        },
        "REL77": {
          "type": "string"
        },
        "REL78": {
          "type": "string"
        },
        "REL79": {
          "type": "string"
        },
        "REL8": {
          "type": "string"
        },
        "REL80": {
          "type": "string"
        },
        "REL81": {
          "type": "string"
        },
        "REL82": {
          "type": "string"
        },
        "REL83": {
          "type": "string"
        },
        "REL84": {
          "type": "string"
        },
        "REL85": {
          "type": "string"
        },
        "REL86": {
          "type": "string"
        },
        "REL87": {
          "type": "string"
        },
        "REL88": {
          "type": "string"
        },
        "REL89": {
          "type": "string"
        },
        "REL9": {
          "type": "string"
        },
        "REL90": {
          "type": "string"
        },
        "REL91": {
          "type": "string"
        },
        "REL92": {
          "type": "string"
        },
        "REL93": {
          "type": "string"
        },
        "REL94": {
          "type": "string"
        },
        "REL95": {
          "type": "string"
        },
        "REL96": {
          "type": "string"
        },
        "REL97": {
          "type": "string"
        },
        "REL98": {
          "type": "string"
        },
        "REL99": {
          "type": "string"
        },
        "RELEASETOPAY": {
          "type": "string"
        },
        "REQUESTID": {
          "type": "string",
          "x-samplevalue": "e979028bea437c14c6dc8a89bc320979"
        },
        "REVRECENDDATE": {
          "type": "string"
        },
        "REVRECSTARTDATE": {
          "type": "string"
        },
        "REVRECTEMPLATEKEY": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Approved"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "SUBTOTAL": {
          "type": "string"
        },
        "TAXABLE": {
          "type": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 29.22
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "UDDREL1": {
          "type": "string"
        },
        "UDDREL10": {
          "type": "string"
        },
        "UDDREL11": {
          "type": "string"
        },
        "UDDREL12": {
          "type": "string"
        },
        "UDDREL13": {
          "type": "string"
        },
        "UDDREL14": {
          "type": "string"
        },
        "UDDREL15": {
          "type": "string"
        },
        "UDDREL16": {
          "type": "string"
        },
        "UDDREL17": {
          "type": "string"
        },
        "UDDREL18": {
          "type": "string"
        },
        "UDDREL19": {
          "type": "string"
        },
        "UDDREL2": {
          "type": "string"
        },
        "UDDREL20": {
          "type": "string"
        },
        "UDDREL3": {
          "type": "string"
        },
        "UDDREL4": {
          "type": "string"
        },
        "UDDREL5": {
          "type": "string"
        },
        "UDDREL6": {
          "type": "string"
        },
        "UDDREL7": {
          "type": "string"
        },
        "UDDREL8": {
          "type": "string"
        },
        "UDDREL9": {
          "type": "string"
        },
        "UNITRATE": {
          "type": "string"
        },
        "VENDORACCTNOKEYVERSION": {
          "type": "string"
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VERSION": {
          "type": "string",
          "x-samplevalue": "2017/08/22 13:32:28.744803000"
        },
        "WAREHOUSEDIMKEY": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-22T00:00:00Z"
        }
      },
      "type": "object"
    },
    "purchasingTransactionDefinitionsPostReqRECALLSRECALL": {
      "properties": {
        "RECDOCPAR": {
          "type": "string",
          "x-samplevalue": "sample"
        }
      },
      "title": "RECALL",
      "type": "object"
    },
    "purchasingTransactionDefinitionsGetByIdTOTALS": {
      "properties": {
        "TOTAL": {
          "type": "string"
        }
      },
      "title": "TOTALS",
      "type": "object"
    },
    "purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Non-Inventory (Purchase only)"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "TAXGROUP": {
          "$ref": "#/definitions/purchaseOrdersListPODOCUMENTENTRIESPodocumententryITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "TaxDetailsGetAllResObject": {
      "properties": {
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Massachusetts Sales Tax",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DETAILID": {
          "type": "string",
          "x-samplevalue": "MA-SalesTax",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "GLACCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2110,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "INCLUDE": {
          "type": "string",
          "x-samplevalue": "Full Amount"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "MAXTAX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MAXTAXABLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MINTAX": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MINTAXABLE": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TAXAUTHORITY": {
          "type": "string",
          "x-samplevalue": "MADOR",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TAXTYPE": {
          "type": "string",
          "x-samplevalue": "Sale"
        },
        "TAXUID": {
          "type": "string"
        },
        "VALUE": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6.25,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "DETAILID"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "x-vendor-objectname": "TAXDTAILS",
      "type": "object"
    },
    "departmentGroupsByIdResMEMBERS": {
      "properties": {
        "departmentgrpmember": {
          "items": {
            "$ref": "#/definitions/departmentGroupsByIdResMEMBERSDepartmentgrpmember"
          },
          "type": "array"
        }
      },
      "title": "MEMBERS",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostResp": {
      "properties": {
        "key": {
          "type": "string",
          "x-samplevalue": "test"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "success"
        }
      },
      "title": "purchasingTransactionsLegacyPostResp",
      "x-primary-key": [
        "key"
      ],
      "type": "object"
    },
    "OrdersEntryTransactionLegacyPostReqSotransitemsSotransitemFulfillmentstatusDeliverydate": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "deliverydate",
      "type": "object"
    },
    "purchasingTransactionsLegacyPostReqSubtotals": {
      "properties": {
        "subtotal": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyPostReqSubtotalsSubtotal"
          },
          "type": "array"
        }
      },
      "title": "subtotals",
      "type": "object"
    },
    "checkingAccountsByIdCHECKINFOCONTACT": {
      "properties": {
        "COMPANYNAME": {
          "type": "string",
          "x-samplevalue": "NewCo3-abortnyk"
        },
        "CONTACTNAME": {
          "type": "string",
          "x-samplevalue": "ING(B500_ING)"
        },
        "MAILADDRESS": {
          "$ref": "#/definitions/checkingAccountsByIdCHECKINFOCONTACTMAILADDRESS"
        },
        "PHONE1": {
          "type": "string"
        }
      },
      "title": "CHECKINFOCONTACT",
      "type": "object"
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "apBillsListObject": {
      "properties": {
        "APBILLITEMS": {
          "$ref": "#/definitions/apBillsListAPBILLITEMS"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T15:29:12Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BILLTOPAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "BILLTOPAYTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 998
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "DESCRIPTION2": {
          "type": "string"
        },
        "DOCNUMBER": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DUE_IN_DAYS": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHANGE_RATE": {
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "string"
        },
        "EXCHRATE": {
          "type": "string"
        },
        "EXCHRATEDATE": {
          "type": "string"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "EXCH_RATE_DATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXTERNALURL": {
          "type": "string"
        },
        "FINANCIALENTITY": {
          "type": "string"
        },
        "FORM1099BOX": {
          "type": "string"
        },
        "FORM1099TYPE": {
          "type": "string"
        },
        "INCLUSIVETAX": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-samplevalue": "USARAJUTest"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ONHOLD": {
          "type": "boolean",
          "x-alias": "isOnHold",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "PAYMENTPRIORITY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PAYTO": {
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ],
          "$ref": "#/definitions/apBillsListPAYTO"
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Verizon(V20028)"
        },
        "PRBATCH": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PRBATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 28
        },
        "RAWSTATE": {
          "type": "string",
          "x-samplevalue": "A"
        },
        "RECORDID": {
          "type": "string",
          "x-alias": "purchase-order.id",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "3055"
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "pi"
        },
        "RECPAYMENTDATE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "Verizon(V20028)"
        },
        "RICKY_CUSTOM": {
          "type": "string"
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 670
        },
        "SHIPTORETURNTOCONTACTNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SHIPTORETURNTOKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 998
        },
        "STATE": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "Paid"
        },
        "SUPDOCID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "SYSTEMGENERATED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": 3
        },
        "TERMNAME": {
          "type": "string",
          "x-alias": "paymentTerms.name",
          "x-samplevalue": "string"
        },
        "TERMVALUE": {
          "type": "string",
          "x-samplevalue": "::#30#:O:"
        },
        "TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 0
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": 3535.93
        },
        "TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_ENTITYDUE": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 107669.3
        },
        "TRX_TOTALDUE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALPAID": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3535.93
        },
        "TRX_TOTALSELECTED": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "VENDOR": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "20028--Verizon Business"
        },
        "VENDORID": {
          "format": "int32",
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "string"
        },
        "VENDORNAME": {
          "type": "string",
          "x-samplevalue": "Verizon Business"
        },
        "VENDTYPE1099TYPE": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENDISCOUNT": {
          "type": "string",
          "x-alias": "discountDate"
        },
        "WHENDUE": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-11T17:09:04Z"
        },
        "WHENPAID": {
          "format": "date",
          "type": "string",
          "x-alias": "lastPaidDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-05-15"
        },
        "WHENPOSTED": {
          "format": "date",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "billsPaymentsListITEMS": {
      "properties": {
        "appymtentry": {
          "items": {
            "$ref": "#/definitions/billsPaymentsListITEMSAppymtentry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ccTransactionsByIdCCTRANSACTIONENTRIESCCTRANSACTIONENTRY": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LINEITEM": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATION": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "LOCATIONKEY": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "RECORDTYPE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "TRX_TOTALPAID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06"
        }
      },
      "title": "CCTRANSACTIONENTRY",
      "type": "object"
    },
    "createContractRequest": {
      "properties": {
        "ADVBILLBY": {
          "description": "Bill in advance. Number of months or days before the start date. Overrides bill-in-advance settings on the customer.",
          "format": "int64",
          "type": "integer"
        },
        "ADVBILLBYTYPE": {
          "description": "Bill-in-advance time period.",
          "enum": [
            "days",
            "month"
          ],
          "type": "string",
          "x-conditional-required-description": "Required if using bill in advance.",
          "x-sub-format": "Enum"
        },
        "BASECURR": {
          "enum": [
            "CAD",
            "EUR",
            "GBP",
            "USD"
          ],
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Enum"
        },
        "BEGINDATE": {
          "description": "Start date in format mm/dd/yyyy",
          "format": "date",
          "type": "string",
          "x-mask": "mm/dd/yyyy",
          "x-samplevalue": "01/01/18",
          "x-sub-format": "Date (mm/dd/yyyy)"
        },
        "BILLINGFREQUENCY": {
          "description": "Billing frequency.",
          "enum": [
            "Monthly",
            "Quarterly"
          ],
          "type": "string",
          "x-samplevalue": "Monthly",
          "x-sub-format": "Enum"
        },
        "BILLTOCONTACTNAME": {
          "description": "Bill to contact name. Leave blank to use customer s default.",
          "type": "string",
          "x-reference-objectname": "CONTACT",
          "x-samplevalue": "Entegris(C10459)"
        },
        "CLASSID": {
          "description": "Class ID",
          "type": "string",
          "x-reference-objectname": "class",
          "x-samplevalue": "300"
        },
        "CONTRACTID": {
          "description": "Contract ID to create.",
          "type": "string",
          "x-conditional-required-description": "Required if company does not use auto-numbering.",
          "x-samplevalue": "CN0431-1"
        },
        "CURRENCY": {
          "description": "Transaction currency.",
          "enum": [
            "CAD",
            "EUR",
            "GBP",
            "USD"
          ],
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Enum"
        },
        "CUSTOMERID": {
          "description": "Customer ID",
          "type": "string",
          "x-reference-objectname": "customer",
          "x-samplevalue": "Asa"
        },
        "DEPARTMENTID": {
          "description": "Department ID",
          "type": "string",
          "x-reference-objectname": "DEPARTMENT"
        },
        "DESCRIPTION": {
          "description": "Description",
          "type": "string",
          "x-samplevalue": "Entegris purchasing multiple licenses for subsidiary use"
        },
        "EMPLOYEEID": {
          "description": "Employee ID",
          "type": "string",
          "x-reference-objectname": "employee"
        },
        "ENDDATE": {
          "description": "End date in format mm/dd/yyyy",
          "format": "date",
          "type": "string",
          "x-mask": "mm/dd/yyyy",
          "x-samplevalue": "12/31/18",
          "x-sub-format": "Date (mm/dd/yyyy)"
        },
        "EXCHRATETYPE": {
          "description": "Exchange rate type. Leave blank to use Intacct Daily Rate.",
          "enum": [
            "Intacct Daily Rate"
          ],
          "type": "string",
          "x-conditional-required-description": "Required if company is configured for multi-currency",
          "x-samplevalue": "Intacct Daily Rate",
          "x-sub-format": "Enum"
        },
        "LOCATIONID": {
          "description": "Location ID",
          "type": "string",
          "x-reference-objectname": "location",
          "x-samplevalue": "US"
        },
        "MEAPRCLIST": {
          "description": "Fair value price list",
          "type": "string"
        },
        "NAME": {
          "description": "Contract name",
          "type": "string",
          "x-name": true,
          "x-samplevalue": "10459 - One-Year Contract"
        },
        "PRCLIST": {
          "description": "Billing price list",
          "type": "string"
        },
        "PROJECTID": {
          "description": "Project ID",
          "type": "string",
          "x-reference-objectname": "project"
        },
        "RENEWAL": {
          "default": false,
          "description": "Renewal. Use false for No, true for Yes.",
          "type": "boolean",
          "x-samplevalue": true
        },
        "RENEWALADVBILLBY": {
          "description": "Bill in advance for renewals. Number of months or days before the start date.",
          "format": "int64",
          "type": "integer"
        },
        "RENEWALADVBILLBYTYPE": {
          "description": "Bill-in-advance time period for renewals.",
          "enum": [
            "days",
            "month"
          ],
          "type": "string",
          "x-conditional-required-description": "Required if using bill in advance for renewals.",
          "x-sub-format": "Enum"
        },
        "RENEWALMACRO": {
          "description": "Renewal template",
          "type": "string",
          "x-samplevalue": "60 days no increase"
        },
        "RENEWTERMLENGTH": {
          "description": "Term length. Only used if RENEWAL is true",
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 12
        },
        "RENEWTERMPERIOD": {
          "default": "Months",
          "description": "Period. Only used if RENEWAL is true.",
          "enum": [
            "Years",
            "Months",
            "Days"
          ],
          "type": "string",
          "x-samplevalue": "Months",
          "x-sub-format": "Enum"
        },
        "SHIPTOCONTACTNAME": {
          "description": "Ship to contact name. Leave blank to use customer s default.",
          "type": "string",
          "x-reference-objectname": "CONTACT",
          "x-samplevalue": "Entegris(C10459)"
        },
        "SUPDOCID": {
          "description": "Attachments ID",
          "type": "string"
        },
        "TERMNAME": {
          "description": "Payment term",
          "type": "string",
          "x-reference-objectname": "arterm",
          "x-samplevalue": "Net 30"
        },
        "VENDORID": {
          "description": "Vendor ID",
          "type": "string",
          "x-reference-objectname": "vendor"
        }
      },
      "required": [
        "BEGINDATE",
        "BILLINGFREQUENCY",
        "CUSTOMERID",
        "ENDDATE",
        "LOCATIONID",
        "NAME",
        "TERMNAME",
        "EXCHRATETYPE",
        "CONTRACTID",
        "BASECURR",
        "CURRENCY"
      ],
      "title": "createContractRequest",
      "type": "object"
    },
    "purchasingTransactionsLegacyGetAllPotransitems": {
      "properties": {
        "potransitem": {
          "items": {
            "$ref": "#/definitions/purchasingTransactionsLegacyGetAllPotransitemsPotransitem"
          },
          "type": "array"
        }
      },
      "title": "potransitems",
      "type": "object"
    },
    "locationUpdate": {
      "properties": {
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Smith, John"
            }
          },
          "$ref": "#/definitions/locationUpdateLOCATIONCONTACTINFO"
        },
        "CUSTTITLE": {
          "type": "string"
        },
        "ENDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "110-SJC"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "San Jose CA"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "100-US"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Smith, Jane"
            }
          },
          "$ref": "#/definitions/locationUpdateLOCATIONSHIPTO"
        },
        "STARTDATE": {
          "type": "string",
          "x-samplevalue": "01/01/2000"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUPERVISORID": {
          "type": "string",
          "x-samplevalue": "E1010"
        }
      },
      "title": "locationUpdate",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "RECORDNO"
      ]
    },
    "transactionsGetById": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 134
        },
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9099
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "CMRR Customer Count"
        },
        "ADJ": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "ALLOCATION": {
          "type": "string"
        },
        "ALLOCATIONKEY": {
          "type": "string"
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BASELOCATION": {
          "type": "string"
        },
        "BASELOCATION_NAME": {
          "type": "string"
        },
        "BASELOCATION_NO": {
          "type": "string"
        },
        "BATCHNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 183
        },
        "BATCHTITLE": {
          "type": "string",
          "x-samplevalue": "Customer count - CN0042 Line No. 1 : 12/01/2015 Batch"
        },
        "BATCH_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01"
        },
        "BATCH_NUMBER": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 42
        },
        "BILLABLE": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "BILLED": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CLEARED": {
          "type": "string",
          "x-samplevalue": "F"
        },
        "CLRDATE": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 47
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10042
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-samplevalue": "Weyland-Yutani"
        },
        "DEPARTMENT": {
          "type": "string"
        },
        "DEPARTMENTKEY": {
          "type": "string"
        },
        "DEPARTMENTTITLE": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "DOCUMENT": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRY_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01"
        },
        "EXCHANGE_RATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCH_RATE_DATE": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01"
        },
        "EXCH_RATE_TYPE_ID": {
          "type": "string"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "IETYPE": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATION": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PARENTGLENTRYKEY": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECON_DATE": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 324
        },
        "RGLDIM169562_10003": {
          "type": "string"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "Posted"
        },
        "STATISTICAL": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "TIMEPERIOD": {
          "type": "string"
        },
        "TMPLENTRYKEY": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "TR_TYPE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "UNITS": {
          "type": "string"
        },
        "USERNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:41:08Z"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-08-08T13:41:08Z"
        }
      },
      "title": "transactionsGetById",
      "x-primary-key": [
        "RECORDNO"
      ],
      "type": "object"
    },
    "InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitem": {
      "properties": {
        "classid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contractid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "cost": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customerid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "customfields": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemCustomfields"
        },
        "departmentid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "employeeid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdesc": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "itemdetails": {
          "$ref": "#/definitions/InventoryTransactionLegacyPatchReqUpdateictransitemsIctransitemItemdetails"
        },
        "itemid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "linenum": {
          "type": "string",
          "x-conditionally-required-description": "linenum required to update other wise insertion will perform",
          "x-samplevalue": "string"
        },
        "locationid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "projectid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "unit": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "warehouseid": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "ictransitem",
      "type": "object"
    },
    "arAdjustmentsPatchReqAradjustmentitems": {
      "properties": {
        "lineitem": {
          "items": {
            "$ref": "#/definitions/arAdjustmentsPatchReqAradjustmentitemsLineitem"
          },
          "type": "array"
        }
      },
      "title": "aradjustmentitems",
      "type": "object"
    },
    "itemUpdate": {
      "properties": {
        "ALLOW_BACKORDER": {
          "type": "boolean",
          "x-alias": "backOrderAllowed",
          "x-displayName": "ALLOW_BACKORDER",
          "x-samplevalue": true
        },
        "BASEPRICE": {
          "format": "int32",
          "type": "integer",
          "x-alias": "price",
          "x-displayName": "BASEPRICE",
          "x-samplevalue": 0
        },
        "BASEUOM": {
          "type": "string",
          "x-displayName": "BASEUOM",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNBILLINGTEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNBILLINGTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNDEFAULTBUNDLE": {
          "type": "boolean",
          "x-displayName": "CNDEFAULTBUNDLE",
          "x-samplevalue": true
        },
        "CNEXPENSE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNEXPENSETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNEXPENSETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYKEY": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "CNMEACATEGORYNAME": {
          "type": "string",
          "x-displayName": "CNMEACATEGORYNAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUE2TEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUE2TEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLATENAME": {
          "type": "string",
          "x-displayName": "CNREVENUETEMPLATENAME",
          "x-samplevalue": "xyz"
        },
        "CNREVENUETEMPLKEY": {
          "format": "int32",
          "type": "string",
          "x-displayName": "CNREVENUETEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "COGSACCTKEY": {
          "type": "string",
          "x-displayName": "COGSACCTKEY",
          "x-samplevalue": "xyz"
        },
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-displayName": "COMPUTEFORSHORTTERM",
          "x-samplevalue": true
        },
        "COST_METHOD": {
          "type": "string",
          "x-alias": "costingMethod",
          "x-displayName": "COST_METHOD",
          "x-samplevalue": "xyz"
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 0
        },
        "CYCLE": {
          "type": "string",
          "x-displayName": "CYCLE",
          "x-samplevalue": "xyz"
        },
        "DEFAULTREVRECTEMPLKEY": {
          "type": "string",
          "x-displayName": "DEFAULTREVRECTEMPLKEY",
          "x-samplevalue": "xyz"
        },
        "DEFAULT_REPLENISHMENT_UOM": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string",
          "x-displayName": "DEFAULT_WAREHOUSE",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDEFERRALSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDEFERRALSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFCONTRACTDELIVERYSTATUS": {
          "type": "string",
          "x-displayName": "DEFCONTRACTDELIVERYSTATUS",
          "x-samplevalue": "xyz"
        },
        "DEFERREDREVACCTKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEFERREDREVACCTKEY",
          "x-samplevalue": 0
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-alias": "dropShip",
          "x-displayName": "DROPSHIP",
          "x-samplevalue": true
        },
        "ENABLELANDEDCOST": {
          "type": "boolean",
          "x-displayName": "ENABLELANDEDCOST",
          "x-samplevalue": true
        },
        "ENABLE_BINS": {
          "type": "string",
          "x-displayName": "ENABLE_BINS",
          "x-samplevalue": "xyz"
        },
        "ENABLE_EXPIRATION": {
          "type": "string",
          "x-displayName": "ENABLE_EXPIRATION",
          "x-samplevalue": "xyz"
        },
        "ENABLE_LOT_CATEGORY": {
          "type": "string",
          "x-displayName": "ENABLE_LOT_CATEGORY",
          "x-samplevalue": "xyz"
        },
        "ENABLE_REPLENISHMENT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "ENABLE_SERIALNO": {
          "type": "string",
          "x-displayName": "ENABLE_SERIALNO",
          "x-samplevalue": "xyz"
        },
        "EXPENSEACCTKEY": {
          "type": "string",
          "x-displayName": "EXPENSEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "EXTENDED_DESCRIPTION": {
          "type": "string",
          "x-displayName": "EXTENDED_DESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "GLGROUP": {
          "type": "string",
          "x-displayName": "GLGROUP",
          "x-samplevalue": "xyz"
        },
        "GLGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLGRPKEY",
          "x-samplevalue": 0
        },
        "HASSTARTENDDATES": {
          "type": "boolean",
          "x-displayName": "HASSTARTENDDATES",
          "x-samplevalue": true
        },
        "INCOMEACCTKEY": {
          "type": "string",
          "x-displayName": "INCOMEACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INVACCTKEY": {
          "type": "string",
          "x-displayName": "INVACCTKEY",
          "x-samplevalue": "xyz"
        },
        "INV_PRECISION": {
          "type": "string",
          "x-displayName": "INV_PRECISION",
          "x-samplevalue": "xyz"
        },
        "IONHAND": {
          "type": "string",
          "x-alias": "quantityOnHand",
          "x-displayName": "IONHAND",
          "x-samplevalue": "xyz"
        },
        "IONHOLD": {
          "type": "string",
          "x-displayName": "IONHOLD",
          "x-samplevalue": "xyz"
        },
        "IONORDER": {
          "type": "string",
          "x-alias": "quantityOnOrder",
          "x-displayName": "IONORDER",
          "x-samplevalue": "xyz"
        },
        "ITEMID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "ITEMID",
          "x-samplevalue": "ITEM1"
        },
        "ITEMTYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "ITEMTYPE",
          "x-samplevalue": "xyz"
        },
        "LANDEDCOSTINFO": {
          "$ref": "#/definitions/itemUpdateLANDEDCOSTINFO"
        },
        "LOT_CATEGORYKEY": {
          "type": "string",
          "x-displayName": "LOT_CATEGORYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": "xyz"
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "xyz"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 0
        },
        "MRR": {
          "type": "boolean",
          "x-displayName": "MRR",
          "x-samplevalue": true
        },
        "NAME": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "NAME",
          "x-samplevalue": "xyz"
        },
        "NOTE": {
          "type": "string",
          "x-alias": "inventoryStockDescription",
          "x-displayName": "NOTE",
          "x-samplevalue": "xyz"
        },
        "OFFSETOEGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETOEGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "OFFSETPOGLACCOUNTKEY": {
          "type": "string",
          "x-displayName": "OFFSETPOGLACCOUNTKEY",
          "x-samplevalue": "xyz"
        },
        "PODESCRIPTION": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-displayName": "PODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "PO_PRECISION": {
          "type": "string",
          "x-displayName": "PO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "PRODUCTLINEID": {
          "type": "string",
          "x-displayName": "PRODUCTLINEID",
          "x-samplevalue": "xyz"
        },
        "PRODUCTTYPE": {
          "type": "string",
          "x-displayName": "PRODUCTTYPE",
          "x-samplevalue": "xyz"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "string",
          "x-alias": "id",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "85"
        },
        "RENEWALMACROID": {
          "type": "string",
          "x-displayName": "RENEWALMACROID",
          "x-samplevalue": "xyz"
        },
        "RENEWALMACROKEY": {
          "type": "string",
          "x-displayName": "RENEWALMACROKEY",
          "x-samplevalue": "xyz"
        },
        "REORDER_POINT": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "REORDER_QTY": {
          "type": "string",
          "x-samplevalue": "xyz"
        },
        "REPLENISHMENT_METHOD": {
          "type": "string",
          "x-alias": "replenishmentMethod",
          "x-samplevalue": "xyz"
        },
        "REVPOSTING": {
          "type": "string",
          "x-displayName": "REVPOSTING",
          "x-samplevalue": "xyz"
        },
        "REVPRINTING": {
          "type": "string",
          "x-displayName": "REVPRINTING",
          "x-samplevalue": "xyz"
        },
        "SAFETY_STOCK": {
          "type": "string",
          "x-alias": "safetyStockUnits",
          "x-samplevalue": "xyz"
        },
        "SERIAL_MASKKEY": {
          "type": "string",
          "x-displayName": "SERIAL_MASKKEY",
          "x-samplevalue": "xyz"
        },
        "SHIP_WEIGHT": {
          "type": "string",
          "x-alias": "weight",
          "x-displayName": "SHIP_WEIGHT",
          "x-samplevalue": "xyz"
        },
        "SODESCRIPTION": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-displayName": "SODESCRIPTION",
          "x-samplevalue": "xyz"
        },
        "SO_PRECISION": {
          "type": "string",
          "x-displayName": "SO_PRECISION",
          "x-samplevalue": "xyz"
        },
        "STANDARD_COST": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-displayName": "STANDARD_COST",
          "x-samplevalue": "xyz"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "active",
          "x-displayName": "STATUS",
          "x-samplevalue": "xyz"
        },
        "SUBSTITUTEID": {
          "type": "string",
          "x-displayName": "SUBSTITUTEID",
          "x-samplevalue": "xyz"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-alias": "taxable",
          "x-displayName": "TAXABLE",
          "x-samplevalue": true
        },
        "TAXCODE": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-displayName": "TAXCODE",
          "x-samplevalue": "xyz"
        },
        "TAXGROUP": {
          "$ref": "#/definitions/itemUpdateTAXGROUP"
        },
        "TAXGROUPKEY": {
          "type": "string",
          "x-displayName": "TAXGROUPKEY",
          "x-samplevalue": "xyz"
        },
        "TERMPERIOD": {
          "type": "string",
          "x-displayName": "TERMPERIOD",
          "x-samplevalue": "xyz"
        },
        "TOTALPERIODS": {
          "type": "string",
          "x-displayName": "TOTALPERIODS",
          "x-samplevalue": "xyz"
        },
        "UOMGRP": {
          "type": "string",
          "x-displayName": "UOMGRP",
          "x-samplevalue": "xyz"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "UOMGRPKEY",
          "x-samplevalue": 0
        },
        "UPC": {
          "type": "string",
          "x-displayName": "UPC",
          "x-samplevalue": "xyz"
        },
        "VENDORINFO": {
          "$ref": "#/definitions/itemUpdateVENDORINFO"
        },
        "VSOECATEGORY": {
          "type": "string",
          "x-displayName": "VSOECATEGORY",
          "x-samplevalue": "xyz"
        },
        "VSOEDLVRSTATUS": {
          "type": "string",
          "x-displayName": "VSOEDLVRSTATUS",
          "x-samplevalue": "xyz"
        },
        "VSOEREVDEFSTATUS": {
          "type": "string",
          "x-displayName": "VSOEREVDEFSTATUS",
          "x-samplevalue": "xyz"
        },
        "WAREHOUSEINFO": {
          "$ref": "#/definitions/itemUpdateWAREHOUSEINFO"
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        },
        "WHENLASTRECEIVED": {
          "type": "string",
          "x-displayName": "WHENLASTRECEIVED",
          "x-samplevalue": "xyz"
        },
        "WHENLASTSOLD": {
          "type": "string",
          "x-displayName": "WHENLASTSOLD",
          "x-samplevalue": "xyz"
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "xyz"
        }
      },
      "x-vendor-objectname": "ITEM",
      "type": "object"
    },
    "savingsAccountsGetAllRespMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsBILLTOMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "ADDRESS2": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "STATE": {
          "type": "string"
        },
        "ZIP": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "recurringBillsListObject": {
      "properties": {
        "APRECURBILLENTRY": {
          "$ref": "#/definitions/recurringBillsListAPRECURBILLENTRY"
        },
        "AUWHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-08-24T03:21:37Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTDESC": {
          "type": "string",
          "x-displayName": "CONTRACTDESC",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-samplevalue": "Rent 2015 Location 120",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENDDATE": {
          "type": "string",
          "x-displayName": "ENDDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTITY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ENTITY",
          "x-samplevalue": 20008,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXCHRATE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXCHRATEDATE": {
          "type": "string",
          "x-displayName": "EXCHRATEDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXCHRATETYPE": {
          "type": "string",
          "x-displayName": "EXCHRATETYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EXECCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EXECCOUNT",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EXTERNALURL": {
          "type": "string",
          "x-displayName": "EXTERNALURL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "INTERVAL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "INTERVAL",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LASTEXECDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "LASTEXECDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-12-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "LOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MEGAENTITYID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYID",
          "x-samplevalue": 100
        },
        "MEGAENTITYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MEGAENTITYKEY",
          "x-samplevalue": 4
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-samplevalue": "USA",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "type": "string",
          "x-displayName": "MODIFIEDBY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "3.AP",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "NEXTEXECDATE": {
          "type": "string",
          "x-displayName": "NEXTEXECDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PAYTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "PAYTOCONTACTNAME",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "PRBATCH": {
          "type": "string",
          "x-displayName": "PRBATCH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRBATCHKEY": {
          "type": "string",
          "x-displayName": "PRBATCHKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-samplevalue": "Vendor Invoices",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-samplevalue": "pi",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REPEATBY": {
          "type": "string",
          "x-displayName": "REPEATBY",
          "x-samplevalue": "M",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "REPEATCOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "REPEATCOUNT",
          "x-samplevalue": 12,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "RETURNTOCONTACTNAME": {
          "type": "string",
          "x-displayName": "RETURNTOCONTACTNAME",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SCHOPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "SCHOPKEY",
          "x-samplevalue": 661,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SUPDOCID": {
          "type": "string",
          "x-displayName": "SUPDOCID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TERMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TERMKEY",
          "x-samplevalue": 3,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TERMNAME": {
          "type": "string",
          "x-displayName": "TERMNAME",
          "x-samplevalue": "Net 30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_TOTALENTERED": {
          "format": "double",
          "type": "number",
          "x-displayName": "TRX_TOTALENTERED",
          "x-samplevalue": 6850.62,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "USERKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "USERNAME": {
          "type": "string",
          "x-displayName": "USERNAME",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDOR": {
          "type": "string",
          "x-displayName": "VENDOR",
          "x-samplevalue": "20008--Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORID",
          "x-samplevalue": 20008,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "Boston Properties",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "inventoryTransactionsById_DOCPAR": {
      "properties": {
        "CATEGORY": {
          "type": "string",
          "x-samplevalue": "Adjustment"
        },
        "CONVTYPE": {
          "type": "string",
          "x-samplevalue": "Close Transaction"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CREATETYPE": {
          "type": "string",
          "x-samplevalue": "New document or Convert"
        },
        "CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "T"
        },
        "CUST_VEND": {
          "type": "string",
          "x-samplevalue": "Warehouse"
        },
        "DEFAULT_WAREHOUSE": {
          "type": "string"
        },
        "DELTYPE": {
          "type": "string",
          "x-samplevalue": "No Delete"
        },
        "DEPTOVERRIDE": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "DOCCLASS": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "DOCID": {
          "type": "string",
          "x-samplevalue": "Adjustment Increase"
        },
        "EDITTYPE": {
          "type": "string",
          "x-samplevalue": "No Edit"
        },
        "ENABLE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "FIXED_MESG": {
          "type": "string"
        },
        "INHERIT_SOURCE_DOCNO": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IN_OUT": {
          "type": "string",
          "x-samplevalue": "Increase"
        },
        "LATESTVERSIONKEY": {
          "type": "string"
        },
        "LOCATIONKEY": {
          "type": "string"
        },
        "LOCOVERRIDE": {
          "type": "string"
        },
        "MEGAENTITYID": {
          "type": "string"
        },
        "MEGAENTITYKEY": {
          "type": "string"
        },
        "MEGAENTITYNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "PRCLISTKEY": {
          "type": "string"
        },
        "PRESERVE_SEQNUM": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "PRICELISTID": {
          "type": "string"
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 44
        },
        "SALE_PUR_TRANS": {
          "type": "string",
          "x-samplevalue": "Internal"
        },
        "SEQUENCE": {
          "type": "string",
          "x-samplevalue": "ADJ"
        },
        "SHOW_TOTALS": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "SPCLPRCLISTKEY": {
          "type": "string"
        },
        "SPECIAL_PRICELISTID": {
          "type": "string"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "TD_CREATION_RULE": {
          "type": "string",
          "x-samplevalue": "Top level or Entity"
        },
        "UPDATES_COST": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UPDATES_GL": {
          "type": "string",
          "x-samplevalue": "N"
        },
        "UPDATES_INV": {
          "type": "string",
          "x-samplevalue": "Quantity"
        },
        "UPDPRCLISTKEY": {
          "type": "string"
        },
        "USERPERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "WAREHOUSESELMETHOD": {
          "type": "string",
          "x-samplevalue": "Sort by ID"
        },
        "WARNONLOWQTY": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "11/21/2015 05:11:43"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "08/06/2019 07:41:35"
        },
        "XSLTEMPLATE": {
          "type": "string"
        }
      },
      "title": "_DOCPAR",
      "type": "object"
    },
    "recurringBillsByIdAPRECURBILLENTRYAprecurbillentry": {
      "properties": {
        "ACCOUNTKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 93
        },
        "ACCOUNTLABEL": {
          "type": "string"
        },
        "ALLOCATION": {
          "type": "string",
          "x-samplevalue": "Department Allocation 120"
        },
        "ALLOCATIONKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62
        },
        "BASECURR": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "BILLABLE": {
          "type": "string"
        },
        "CLASSDIMKEY": {
          "type": "string"
        },
        "CLASSID": {
          "type": "string"
        },
        "CLASSNAME": {
          "type": "string"
        },
        "CONTRACTDIMKEY": {
          "type": "string"
        },
        "CONTRACTID": {
          "type": "string"
        },
        "CONTRACTNAME": {
          "type": "string"
        },
        "CREATEDBY": {
          "type": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "CUSTOMERDIMKEY": {
          "type": "string"
        },
        "CUSTOMERID": {
          "type": "string"
        },
        "CUSTOMERNAME": {
          "type": "string"
        },
        "DEPARTMENTID": {
          "type": "string"
        },
        "DEPARTMENTNAME": {
          "type": "string"
        },
        "EMPLOYEEDIMKEY": {
          "type": "string"
        },
        "EMPLOYEEID": {
          "type": "string"
        },
        "EMPLOYEENAME": {
          "type": "string"
        },
        "ENTRYDESCRIPTION": {
          "type": "string"
        },
        "EXCHRATE": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "EXCHRATEDATE": {
          "type": "string"
        },
        "EXCHRATETYPE": {
          "type": "string"
        },
        "FORM1099": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "GLACCOUNT": {
          "type": "string",
          "x-samplevalue": "6200--Rent"
        },
        "GLACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6200
        },
        "GLACCOUNTTITLE": {
          "type": "string",
          "x-samplevalue": "Rent"
        },
        "GLDIMCHANNEL": {
          "type": "string"
        },
        "ITEMDIMKEY": {
          "type": "string"
        },
        "ITEMID": {
          "type": "string"
        },
        "ITEMNAME": {
          "type": "string"
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "LOCATIONID": {
          "type": "string"
        },
        "LOCATIONNAME": {
          "type": "string"
        },
        "MODIFIEDBY": {
          "type": "string"
        },
        "OFFSET": {
          "type": "string"
        },
        "PROJECTDIMKEY": {
          "type": "string"
        },
        "PROJECTID": {
          "type": "string"
        },
        "PROJECTNAME": {
          "type": "string"
        },
        "RECORDKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "RECORDNO": {
          "type": "string"
        },
        "RGLDIM169562_10011": {
          "type": "string"
        },
        "TRX_AMOUNT": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6850.62
        },
        "VENDORDIMKEY": {
          "type": "string"
        },
        "VENDORID": {
          "type": "string"
        },
        "VENDORNAME": {
          "type": "string"
        },
        "WHENCREATED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss"
        }
      },
      "title": "aprecurbillentry",
      "type": "object"
    },
    "warehousesGetByIdMANAGER": {
      "properties": {
        "NAME": {
          "type": "string",
          "x-samplevalue": "Penny, Emma"
        }
      },
      "title": "MANAGER",
      "type": "object"
    },
    "ledgerDetailsGetResObject": {
      "properties": {
        "ACCOUNTNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ACCOUNTNO",
          "x-samplevalue": 1231,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ACCOUNTTITLE": {
          "type": "string",
          "x-displayName": "ACCOUNTTITLE",
          "x-samplevalue": "Unbilled AR - Subscriptions",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ADJ": {
          "type": "string",
          "x-displayName": "ADJ",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "AMOUNT",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "AUCREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "AUCREATEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "AUWHENCREATED": {
          "type": "string",
          "x-displayName": "AUWHENCREATED",
          "x-samplevalue": "08/08/2017 13:40:42",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BASECURR": {
          "type": "string",
          "x-displayName": "BASECURR",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCHKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BATCHKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_DATE": {
          "type": "string",
          "x-displayName": "BATCH_DATE",
          "x-samplevalue": "01/01/2015",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_NO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "BATCH_NO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_STATE": {
          "type": "string",
          "x-displayName": "BATCH_STATE",
          "x-samplevalue": "P",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BATCH_TITLE": {
          "type": "string",
          "x-displayName": "BATCH_TITLE",
          "x-samplevalue": "Contract CN0001 Line No. 1 : 01/01/2015 Batch",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "BOOKID": {
          "type": "string",
          "x-displayName": "BOOKID",
          "x-samplevalue": "605ACCRUAL",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CHILDENTITY": {
          "type": "string",
          "x-displayName": "CHILDENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CLASSDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CLASSID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CLASSNAME": {
          "type": "string",
          "x-displayName": "CLASSNAME",
          "x-samplevalue": "Small Businesses",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLEARED": {
          "type": "string",
          "x-displayName": "CLEARED",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CLRDATE": {
          "type": "string",
          "x-displayName": "CLRDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CONTRACTDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CONTRACTDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTID": {
          "type": "string",
          "x-displayName": "CONTRACTID",
          "x-samplevalue": "CN0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CONTRACTNAME": {
          "type": "string",
          "x-displayName": "CONTRACTNAME",
          "x-samplevalue": "10001 - One-Year Contract",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "type": "string",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": "admin",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREDITAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREDITAMOUNT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CURRENCY": {
          "type": "string",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTENTITY": {
          "type": "string",
          "x-displayName": "CUSTENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "CUSTOMERDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERDIMKEY",
          "x-samplevalue": 6,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CUSTOMERID",
          "x-samplevalue": 10001,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "CUSTOMERNAME": {
          "type": "string",
          "x-displayName": "CUSTOMERNAME",
          "x-samplevalue": "Corley Energy",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DEBITAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEBITAMOUNT",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DEPARTMENTTITLE": {
          "type": "string",
          "x-displayName": "DEPARTMENTTITLE",
          "x-samplevalue": "Sales",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "DESCRIPTION": {
          "type": "string",
          "x-displayName": "DESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCNUMBER": {
          "type": "string",
          "x-displayName": "DOCNUMBER",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "DOCUMENT": {
          "type": "string",
          "x-displayName": "DOCUMENT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPENTITY": {
          "type": "string",
          "x-displayName": "EMPENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "EMPLOYEEDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPLOYEEDIMKEY",
          "x-samplevalue": 137,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": 159,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "EMPLOYEENAME": {
          "type": "string",
          "x-displayName": "EMPLOYEENAME",
          "x-samplevalue": "Pasteur, Louise",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTRYDESCRIPTION": {
          "type": "string",
          "x-displayName": "ENTRYDESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "ENTRY_DATE": {
          "type": "string",
          "x-displayName": "ENTRY_DATE",
          "x-samplevalue": "01/01/2015",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "ENTRY_STATE": {
          "type": "string",
          "x-displayName": "ENTRY_STATE",
          "x-samplevalue": "P",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "FINANCIALENTITY": {
          "type": "string",
          "x-displayName": "FINANCIALENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "GLDIMCHANNEL": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLDIMCHANNEL",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "GLENTRYKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "GLENTRYKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ITEMDIMKEY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ITEMID",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ITEMNAME": {
          "type": "string",
          "x-displayName": "ITEMNAME",
          "x-samplevalue": "Machine Learning Core",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LINE_NO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LINE_NO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": 110,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "LOCATIONNAME": {
          "type": "string",
          "x-displayName": "LOCATIONNAME",
          "x-samplevalue": "San Francisco",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "LOCENTITY": {
          "type": "string",
          "x-displayName": "LOCENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIED": {
          "type": "string",
          "x-displayName": "MODIFIED",
          "x-samplevalue": "08/08/2017 13:40:42",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "MODULEKEY": {
          "type": "string",
          "x-displayName": "MODULEKEY",
          "x-samplevalue": "55.CONTRACT",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "OWNERSHIPKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "OWNERSHIPKEY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "PRCLEARED": {
          "type": "string",
          "x-displayName": "PRCLEARED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRCLRDATE": {
          "type": "string",
          "x-displayName": "PRCLRDATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PRDESCRIPTION": {
          "type": "string",
          "x-displayName": "PRDESCRIPTION",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTDIMKEY": {
          "type": "string",
          "x-displayName": "PROJECTDIMKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTID": {
          "type": "string",
          "x-displayName": "PROJECTID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "PROJECTNAME": {
          "type": "string",
          "x-displayName": "PROJECTNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDID": {
          "type": "string",
          "x-displayName": "RECORDID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "RECORDNO": {
          "type": "string",
          "x-displayName": "RECORDNO",
          "x-samplevalue": "1-1---605accrual",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDTYPE": {
          "type": "string",
          "x-displayName": "RECORDTYPE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "REFERENCENO": {
          "type": "string",
          "x-displayName": "REFERENCENO",
          "x-samplevalue": "CONTRACT CN0001 LINE NO - 1",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RGLDIM169562_10003": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RGLDIM169562_10003",
          "x-samplevalue": 10002,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "STATE": {
          "type": "string",
          "x-displayName": "STATE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATISTICAL": {
          "type": "string",
          "x-displayName": "STATISTICAL",
          "x-samplevalue": "F",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "SYMBOL": {
          "type": "string",
          "x-displayName": "SYMBOL",
          "x-samplevalue": "605R",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "TOTALDUE": {
          "type": "string",
          "x-displayName": "TOTALDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALENTERED": {
          "type": "string",
          "x-displayName": "TOTALENTERED",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TOTALPAID": {
          "type": "string",
          "x-displayName": "TOTALPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "TRX_AMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_AMOUNT",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_CREDITAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_CREDITAMOUNT",
          "x-samplevalue": 0,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TRX_DEBITAMOUNT": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TRX_DEBITAMOUNT",
          "x-samplevalue": 70000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "TR_TYPE": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "TR_TYPE",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDENTITY": {
          "type": "string",
          "x-displayName": "VENDENTITY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "VENDORDIMKEY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORDIMKEY",
          "x-samplevalue": 26,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "VENDORID",
          "x-samplevalue": 20026,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "VENDORNAME": {
          "type": "string",
          "x-displayName": "VENDORNAME",
          "x-samplevalue": "Microdot Technologies",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENDUE": {
          "type": "string",
          "x-displayName": "WHENDUE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENPAID": {
          "type": "string",
          "x-displayName": "WHENPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "creditMemosGetByIdARADJUSTMENTITEMS": {
      "properties": {
        "aradjustmentitem": {
          "items": {
            "$ref": "#/definitions/creditMemosGetByIdARADJUSTMENTITEMSAradjustmentitem"
          },
          "type": "array"
        }
      },
      "title": "ARADJUSTMENTITEMS",
      "type": "object"
    },
    "achBankConfigurationsListObject": {
      "properties": {
        "ACHBANKID": {
          "type": "string",
          "x-displayName": "ACHBANKID",
          "x-samplevalue": "100SVB",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "CREATEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "CREATEDBY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESTINATIONID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "DESTINATIONID",
          "x-samplevalue": 121140399,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "DESTINATIONNAME": {
          "type": "string",
          "x-displayName": "DESTINATIONNAME",
          "x-samplevalue": "Silicon Valley Bank",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "EOFMARKER": {
          "type": "boolean",
          "x-displayName": "EOFMARKER",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "MEGAENTITYID": {
          "type": "string",
          "x-displayName": "MEGAENTITYID",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYKEY": {
          "type": "string",
          "x-displayName": "MEGAENTITYKEY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MEGAENTITYNAME": {
          "type": "string",
          "x-displayName": "MEGAENTITYNAME",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "MODIFIEDBY": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "MODIFIEDBY",
          "x-samplevalue": 4,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ORIGINID": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "ORIGINID",
          "x-samplevalue": 1928374650,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "ORIGINNAME": {
          "type": "string",
          "x-displayName": "ORIGINNAME",
          "x-samplevalue": "NewCo",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "RECORDNO": {
          "format": "int32",
          "type": "integer",
          "x-displayName": "RECORDNO",
          "x-samplevalue": 1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">=",
            "IN",
            "NOT IN"
          ]
        },
        "REFERENCECODE": {
          "type": "string",
          "x-displayName": "REFERENCECODE",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "STATUS": {
          "type": "string",
          "x-displayName": "STATUS",
          "x-samplevalue": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            "NOT LIKE",
            "IN",
            "NOT IN"
          ]
        },
        "WHENCREATED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENCREATED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "WHENMODIFIED": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "WHENMODIFIED",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss",
          "x-samplevalue": "1987-01-09T10:15:06",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        }
      },
      "x-primary-key": [
        "RECORDNO"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "AND",
        "OR"
      ],
      "type": "object"
    },
    "orderEntryTransactionsByIdEXCHRATETYPES": {
      "properties": {
        "NAME": {
          "type": "string"
        }
      },
      "title": "EXCHRATETYPES",
      "type": "object"
    },
    "updateFolder": {
      "properties": {
        "folderDescription": {
          "type": "string"
        },
        "parentFolderName": {
          "type": "string"
        }
      },
      "required": [
        "folderDescription",
        "parentFolderName"
      ],
      "x-vendor_objectname": "supdocfolder",
      "type": "object"
    },
    "employeesPatch": {
      "properties": {
        "ACHACCOUNTNUMBER": {
          "type": "string",
          "x-displayName": "ACHACCOUNTNUMBER",
          "x-samplevalue": "string"
        },
        "ACHACCOUNTTYPE": {
          "type": "string",
          "x-displayName": "ACHACCOUNTTYPE",
          "x-samplevalue": "string"
        },
        "ACHBANKROUTINGNUMBER": {
          "type": "string",
          "x-displayName": "ACHBANKROUTINGNUMBER",
          "x-samplevalue": "string"
        },
        "ACHENABLED": {
          "type": "string",
          "x-displayName": "ACHENABLED",
          "x-samplevalue": "string"
        },
        "ACHREMITTANCETYPE": {
          "type": "string",
          "x-displayName": "ACHREMITTANCETYPE",
          "x-samplevalue": "string"
        },
        "BIRTHDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "dob",
          "x-displayName": "BIRTHDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "CLASSID": {
          "type": "string",
          "x-displayName": "CLASSID",
          "x-samplevalue": "string"
        },
        "CURRENCY": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "CURRENCY",
          "x-samplevalue": "string"
        },
        "DEPARTMENTID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "DEPARTMENTID",
          "x-samplevalue": "string"
        },
        "EARNINGTYPENAME": {
          "type": "string",
          "x-displayName": "EARNINGTYPENAME",
          "x-samplevalue": "string"
        },
        "EMPLOYEEID": {
          "format": "int32",
          "type": "string",
          "x-alias": "externalId",
          "x-displayName": "EMPLOYEEID",
          "x-samplevalue": "202"
        },
        "EMPLOYEETYPE": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "EMPLOYEETYPE",
          "x-samplevalue": "string"
        },
        "ENDDATE": {
          "type": "string",
          "x-alias": "releaseDate",
          "x-displayName": "ENDDATE",
          "x-samplevalue": "string"
        },
        "EXTERNALID": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "FORM1099BOX": {
          "type": "string",
          "x-displayName": "FORM1099BOX",
          "x-samplevalue": "string"
        },
        "FORM1099TYPE": {
          "type": "string",
          "x-displayName": "FORM1099TYPE",
          "x-samplevalue": "string"
        },
        "GENDER": {
          "type": "string",
          "x-alias": "gender",
          "x-displayName": "GENDER",
          "x-samplevalue": "string"
        },
        "ISOCOUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LATITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "LOCATIONID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "LOCATIONID",
          "x-samplevalue": "string"
        },
        "LONGITUDE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "MERGEPAYMENTREQ": {
          "type": "string",
          "x-displayName": "MERGEPAYMENTREQ",
          "x-samplevalue": "string"
        },
        "NAME1099": {
          "type": "string",
          "x-displayName": "NAME1099",
          "x-samplevalue": "string"
        },
        "PAYMENTNOTIFY": {
          "type": "string",
          "x-displayName": "PAYMENTNOTIFY",
          "x-samplevalue": "string"
        },
        "PAYMETHOD": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "PERSONALINFO": {
          "$ref": "#/definitions/employeesPatchPERSONALINFO"
        },
        "POSTACTUALCOST": {
          "type": "string",
          "x-displayName": "POSTACTUALCOST",
          "x-samplevalue": "string"
        },
        "SSN": {
          "format": "int32",
          "type": "string",
          "x-alias": "ssn",
          "x-displayName": "SSN",
          "x-samplevalue": "string"
        },
        "STARTDATE": {
          "format": "date",
          "type": "string",
          "x-alias": "hireDate",
          "x-displayName": "STARTDATE",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "string"
        },
        "STATUS": {
          "type": "string",
          "x-alias": "status",
          "x-displayName": "STATUS",
          "x-samplevalue": "string"
        },
        "SUPERVISORID": {
          "format": "int32",
          "type": "string",
          "x-displayName": "SUPERVISORID",
          "x-samplevalue": "string"
        },
        "TAXABLE": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXGROUP": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "TAXID": {
          "type": "string",
          "x-alias": "taxId",
          "x-samplevalue": "string"
        },
        "TERMINATIONTYPE": {
          "type": "string",
          "x-displayName": "TERMINATIONTYPE",
          "x-samplevalue": "string"
        },
        "TITLE": {
          "type": "string",
          "x-alias": "title",
          "x-displayName": "TITLE",
          "x-samplevalue": "string"
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "itemsGetByIdITEMGLGROUPOEGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "itemsListITEMGLGROUPDEFRRGLACCOUNT": {
      "properties": {
        "ACCTNO": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "classGroupsListMEMBERS": {
      "properties": {
        "classgrpmember": {
          "$ref": "#/definitions/classGroupsListMEMBERSClassgrpmember"
        }
      },
      "type": "object"
    },
    "inventoryTransactionEntriesByIDITEM": {
      "properties": {
        "COMPUTEFORSHORTTERM": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DROPSHIP": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ITEMTYPE": {
          "type": "string",
          "x-samplevalue": "Inventory"
        },
        "NUMDEC_PUR": {
          "type": "string"
        },
        "NUMDEC_SALE": {
          "type": "string"
        },
        "NUMDEC_STD": {
          "type": "string"
        },
        "RENEWALMACRO": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDITEMRENEWALMACRO"
        },
        "RENEWALMACROKEY": {
          "type": "string"
        },
        "REVPOSTING": {
          "type": "string",
          "x-samplevalue": "Kit Level"
        },
        "REVPRINTING": {
          "type": "string",
          "x-samplevalue": "Kit"
        },
        "TAXABLE": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "TAXGROUP": {
          "$ref": "#/definitions/inventoryTransactionEntriesByIDITEMTAXGROUP"
        },
        "UOMGRPKEY": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21
        }
      },
      "title": "ITEM",
      "type": "object"
    },
    "locations": {
      "properties": {
        "CONTACTINFO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Smith, John"
            }
          },
          "$ref": "#/definitions/locationsLOCATIONCONTACTINFO"
        },
        "CUSTTITLE": {
          "type": "string"
        },
        "ENDDATE": {
          "type": "string"
        },
        "LOCATIONID": {
          "type": "string",
          "x-samplevalue": "110-SJC"
        },
        "NAME": {
          "type": "string",
          "x-samplevalue": "San Jose CA"
        },
        "PARENTID": {
          "type": "string",
          "x-samplevalue": "100-US"
        },
        "SHIPTO": {
          "properties": {
            "CONTACTNAME": {
              "type": "string",
              "x-samplevalue": "Smith, Jane"
            }
          },
          "$ref": "#/definitions/locationsLOCATIONSHIPTO"
        },
        "STARTDATE": {
          "type": "string",
          "x-samplevalue": "01/01/2000"
        },
        "STATUS": {
          "type": "string",
          "x-samplevalue": "active"
        },
        "SUPERVISORID": {
          "type": "string",
          "x-samplevalue": "E1010"
        }
      },
      "required": [
        "LOCATIONID",
        "NAME"
      ],
      "title": "locations",
      "type": "object"
    },
    "vendorsListOWNERACCOUNTLABEL": {
      "properties": {
        "LABEL": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderEntryTransactionLegacyGetByIdSotransitemsSotransitemRevrecstartdate": {
      "properties": {
        "day": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      },
      "title": "revrecstartdate",
      "type": "object"
    },
    "orderEntryTransactionDefinitionsByIdADDGL_ACCOUNTS": {
      "properties": {
        "ADDGL_ACCOUNT": {
          "type": "string"
        }
      },
      "title": "ADDGL_ACCOUNTS",
      "type": "object"
    },
    "purchasingTransactionsLegacyPatchReqExecutedon": {
      "properties": {
        "day": {
          "type": "string",
          "x-samplevalue": "{executedon.day}"
        },
        "month": {
          "type": "string",
          "x-samplevalue": "{executedon.month}"
        },
        "year": {
          "type": "string",
          "x-samplevalue": "{executedon.year}"
        }
      },
      "title": "executedon",
      "type": "object"
    },
    "foldersFiles": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orderEntryTransactionsListsCONTACTMAILADDRESS": {
      "properties": {
        "ADDRESS1": {
          "type": "string",
          "x-samplevalue": "233 S Wacker Dr"
        },
        "ADDRESS2": {
          "type": "string",
          "x-samplevalue": "Suite 1000"
        },
        "CITY": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "COUNTRY": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "COUNTRYCODE": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "STATE": {
          "type": "string",
          "x-samplevalue": "IL"
        },
        "ZIP": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60606
        }
      },
      "type": "object"
    },
    "inventoryTransactionsListsINVDOCUMENTENTRIES": {
      "properties": {
        "invdocumententry": {
          "items": {
            "$ref": "#/definitions/inventoryTransactionsListsINVDOCUMENTENTRIESInvdocumententry"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "Sage Intacct V3",
    "x-element-hub": "finance",
    "x-element-key": "intacctv3",
    "title": "intacctv3",
    "x-element-id": 20157,
    "version": "api-v2",
    "description": "Sage Intacct provides generic or open functions that can operate on multiple types of accounting objects. Add a Intacct instance to connect to your existing Sage Intacct. You will need your Intacct account information to add an instance."
  },
  "tags": [
    {
      "name": "ACH Bank Configurations"
    },
    {
      "name": "Account Balances"
    },
    {
      "name": "Account Groups"
    },
    {
      "name": "Account Titles"
    },
    {
      "name": "Accounts Payable Account Labels"
    },
    {
      "name": "Accounts Payable Adjustments"
    },
    {
      "name": "Accounts Payable Bills"
    },
    {
      "name": "Accounts Payable Terms"
    },
    {
      "name": "Accounts Receivable Account Labels"
    },
    {
      "name": "Accounts Receivable Adjustments"
    },
    {
      "name": "Accounts Receivable Adjustments Legacy"
    },
    {
      "name": "Accounts Receivable Terms"
    },
    {
      "name": "Allocations"
    },
    {
      "name": "Audit Logs"
    },
    {
      "name": "Audits"
    },
    {
      "name": "Bills Payments"
    },
    {
      "name": "Bills Payments Details"
    },
    {
      "name": "Bulk"
    },
    {
      "name": "Charge Card Accounts"
    },
    {
      "name": "Charge Card Transactions"
    },
    {
      "name": "Checking Accounts"
    },
    {
      "name": "Class Groups"
    },
    {
      "name": "Classes"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Contracts"
    },
    {
      "name": "Credit Card Charges"
    },
    {
      "name": "Credit Card Fee Entries"
    },
    {
      "name": "Credit Card Fees"
    },
    {
      "name": "Customer Types"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Department Groups"
    },
    {
      "name": "Departments"
    },
    {
      "name": "Deposits"
    },
    {
      "name": "Dimensions"
    },
    {
      "name": "Employees"
    },
    {
      "name": "Entities"
    },
    {
      "name": "Exchange Rate Entries"
    },
    {
      "name": "Exchange Rate Types"
    },
    {
      "name": "Exchange Rates"
    },
    {
      "name": "Expense Reports"
    },
    {
      "name": "Folders Legacy"
    },
    {
      "name": "Inventory Control Price Lists"
    },
    {
      "name": "Inventory Transaction Definitions"
    },
    {
      "name": "Inventory Transaction Entries"
    },
    {
      "name": "Inventory Transactions"
    },
    {
      "name": "Inventory Transactions Legacy"
    },
    {
      "name": "Invoices"
    },
    {
      "name": "Item Gl Groups"
    },
    {
      "name": "Item Groups"
    },
    {
      "name": "Item Tax Groups"
    },
    {
      "name": "Items"
    },
    {
      "name": "Journals"
    },
    {
      "name": "Ledger Accounts"
    },
    {
      "name": "Ledger Details"
    },
    {
      "name": "Location Groups"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Order Entry Price Lists"
    },
    {
      "name": "Order Entry Transaction Definitions"
    },
    {
      "name": "Order Entry Transactions"
    },
    {
      "name": "Order Entry Transactions Legacy"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Payments Legacy"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Projects"
    },
    {
      "name": "Purchase Orders"
    },
    {
      "name": "Purchasing Price Lists"
    },
    {
      "name": "Purchasing Transaction Definitions"
    },
    {
      "name": "Purchasing Transaction Entries"
    },
    {
      "name": "Purchasing Transactions Legacy"
    },
    {
      "name": "Recurring Bills"
    },
    {
      "name": "Recurring Invoices"
    },
    {
      "name": "Recurring Order Entry Transactions"
    },
    {
      "name": "Reporting Periods"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Sales Orders"
    },
    {
      "name": "Sales Receipts"
    },
    {
      "name": "Savings Accounts"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Tax Details"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Trial Balances"
    },
    {
      "name": "Unit Of Measures"
    },
    {
      "name": "User Groups"
    },
    {
      "name": "Users"
    },
    {
      "name": "Vendor Types"
    },
    {
      "name": "Vendors"
    },
    {
      "name": "Warehouses"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Provides generic or open functions that can operate on multiple types of accounting objects(version 3)",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/intacct"
  }
}