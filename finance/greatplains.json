{
  "basePath": "/elements/api-v2",
  "paths": {
    "/banks": {
      "get": {
        "operationId": "getBanks",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/banksGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression.  Supported fields are id, name, and branch.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Banks"
        ],
        "summary": "Search for banks"
      }
    },
    "/bulk/download": {
      "post": {
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ],
        "summary": "Create a new bulk download job (asynchronous)"
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Fetch all the bulk jobs for an instance"
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Create an asynchronous bulk query job."
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Cancel an asynchronous bulk query job."
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Retrieve the errors of a bulk job."
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Retrieve the status of a bulk job."
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ],
        "summary": "Retrieve the results of an asynchronous bulk query."
      }
    },
    "/bulk/{objectName}": {
      "post": {
        "operationId": "createBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of the object for which data needs to be uploaded.",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" :&lt;path for the sub resource&gt;, \"format\": &lt;json/csv&gt;, \"callback-payload\":&lt;json&gt;}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          },
          {
            "description": "The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line",
            "in": "formData",
            "name": "file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkUploadResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Bulk"
        ],
        "summary": "Upload a file of objects to be bulk uploaded to the provider."
      }
    },
    "/cash-receipts": {
      "post": {
        "operationId": "createCashReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceiptObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceiptObject"
              }
            },
            "in": "body",
            "name": "body",
            "description": "The Cash Receipt object to be created.<br>",
            "required": true
          }
        ],
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Create a cash receipt in the Finance system."
      },
      "get": {
        "operationId": "getCashReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceipt"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL Expression to filter the return values",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Find cash receipt in the Finance system."
      }
    },
    "/cash-receipts/{id}": {
      "patch": {
        "operationId": "updateCashReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceiptObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Cash Receipt to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceiptObject"
              }
            },
            "in": "body",
            "name": "body",
            "description": "The Cash Receipt object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Update a cash receipt given a set of partial attributes associated with a given ID in the Finance system."
      },
      "get": {
        "operationId": "getCashReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashReceiptObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Cash Receipt to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Retrieve a defined cash receipt associated with a given ID from the Finance system."
      },
      "delete": {
        "operationId": "deleteCashReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Cash Receipt to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Delete a cash receipt associated with a given ID from the Finance system."
      }
    },
    "/classes": {
      "get": {
        "operationId": "getClasses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Class"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Classes"
        ],
        "summary": "Find classes in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for classes last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all classes are returned."
      }
    },
    "/classes/{id}": {
      "get": {
        "operationId": "getClasseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Class"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the class or category to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Classes"
        ],
        "summary": "Retrieve a defined class or category associated with a given ID from the Finance system. Specifying a class or category with an associated ID that does not exist will result in an error response."
      }
    },
    "/companies": {
      "get": {
        "operationId": "getCompanies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/companiesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Companies"
        ],
        "summary": "Find details of the company in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for employees last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all employees are returned."
      }
    },
    "/company-addresses": {
      "get": {
        "operationId": "getCompanyAddresses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/companyAddressesGetRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Company Addresses"
        ],
        "summary": "Find company addresses in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for employees last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all employees are returned."
      }
    },
    "/company-addresses/{id}": {
      "get": {
        "operationId": "getCompanyAddresseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/companyAddressesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the company addresss.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Company Addresses"
        ],
        "summary": "Retrieve a defined company address associated with a given ID from the Finance system."
      }
    },
    "/credit-terms": {
      "get": {
        "operationId": "getCreditTerms",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreditTerm"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. Valid query fields are 'id', 'description', the search expression will be <i>where=id='111'</i>. When this parameter is omitted, all credit-terms are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credit Terms"
        ],
        "summary": "Find credit terms in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for credit terms last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all credit terms are returned."
      }
    },
    "/credit-terms/{id}": {
      "get": {
        "operationId": "getCreditTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditTerm"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the credit term to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Credit Terms"
        ],
        "summary": "Retrieve a defined credit term lookup associated with a given ID from the Finance system. Specifying a credit term with an associated ID that does not exist will result in an error response."
      }
    },
    "/customers": {
      "post": {
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "in": "body",
            "name": "body",
            "description": "The Customer object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Customer' model are those required to create a new customer",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Create a customer in the Finance system. Customer creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all customers are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Find customers in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for customers last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all customers are returned."
      }
    },
    "/customers/{id}": {
      "patch": {
        "operationId": "updateCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the customer to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "in": "body",
            "name": "body",
            "description": "The customer object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Update a customer given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the customer object will be updated, and those fields not provided will be left alone. Updating an customer with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the customer to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve a customer associated with a given ID from the Finance system. Specifying a customer with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the customer to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "summary": "Delete a customer associated with a given ID from the Finance system. This marks the customer as inactive. Specifying a customer associated with a given ID that does not exist will result in an error message."
      }
    },
    "/employees": {
      "post": {
        "operationId": "createEmployee",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Employee"
            },
            "in": "body",
            "name": "body",
            "description": "The Employee object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Employee' model are those required to create a new employee",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ],
        "summary": "Create an employee in the Finance system. Employee creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getEmployees",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all employees are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Employees"
        ],
        "summary": "Find employees in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for employees last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all employees are returned."
      }
    },
    "/employees/{id}": {
      "patch": {
        "operationId": "updateEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the employee to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Employee"
            },
            "in": "body",
            "name": "body",
            "description": "The employee object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ],
        "summary": "Update an employee given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the employee object will be updated, and those fields not provided will be left alone. Updating an employee with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the employee to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ],
        "summary": "Retrieve an employee associated with a given ID from the Finance system. Specifying an employee with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the employee to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ],
        "summary": "Delete an employee associated with a given ID from the Finance system. This marks the employee as inactive. Specifying an employee associated with a given ID that does not exist will result in an error message."
      }
    },
    "/inventory-adjustments": {
      "post": {
        "operationId": "createInventoryAdjustment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryAdjustmentsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/inventoryAdjustmentsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object of Inventory Adjustment.",
            "required": true
          }
        ],
        "tags": [
          "Inventory Adjustments"
        ],
        "summary": "Create an inventory adjustment in the Finance system."
      },
      "get": {
        "operationId": "getInventoryAdjustments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryAdjustmentsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Inventory Adjustment last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Inventory Adjustments"
        ],
        "summary": "Find inventory adjustment in the Finance system"
      }
    },
    "/inventory-adjustments/{id}": {
      "get": {
        "operationId": "getInventoryAdjustmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryAdjustmentsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Inventory Adjustment to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Inventory Adjustments"
        ],
        "summary": "Retrieve an inventory adjustment in the Finance system."
      }
    },
    "/inventory-transfers": {
      "post": {
        "operationId": "createInventoryTransfer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransfersPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/inventoryTransfersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Inventory Transfer object to be created.",
            "required": true
          }
        ],
        "tags": [
          "Inventory Transfers"
        ],
        "summary": "Create an inventory transfer in the Finance system."
      },
      "get": {
        "operationId": "getInventoryTransfers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryTransfersGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Inventory Transfer last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Inventory Transfers"
        ],
        "summary": "Find inventory transfer in the Finance system"
      }
    },
    "/inventory-transfers/{id}": {
      "get": {
        "operationId": "getInventoryTransferById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/inventoryTransfersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Inventory Transfer to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Inventory Transfers"
        ],
        "summary": "Retrieve an inventory transfer by id"
      }
    },
    "/invoices": {
      "post": {
        "operationId": "createInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Invoice"
            },
            "in": "body",
            "name": "body",
            "description": "The Invoice object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Invoice' model are those required to create a new invoice",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ],
        "summary": "Create an invoice in the Finance system. Invoice creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Invoices"
        ],
        "summary": "Find invoices in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all invoices are returned."
      }
    },
    "/invoices/{id}": {
      "patch": {
        "operationId": "updateInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the invoice to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Invoice"
            },
            "in": "body",
            "name": "body",
            "description": "The invoice object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ],
        "summary": "Update an invoice given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the invoice object will be updated, and those fields not provided will be left alone. Updating an invoice with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the invoice to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieve an invoice associated with a given ID from the Finance system. Specifying an invoice with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the invoice to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ],
        "summary": "Delete an invoice associated with a given ID from the Finance system. Specifying an invoice associated with a given ID that does not exist will result in an error message."
      }
    },
    "/journal-entries": {
      "post": {
        "operationId": "createJournalEntry",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLTransactionObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLTransactionObject"
              }
            },
            "in": "body",
            "name": "body",
            "description": "The Journal Entry object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'JournalEntry' model are those required to create a new journal entry",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ],
        "summary": "Create a journal entry in the Finance system. Journal entry creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getJournalEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLTransaction"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Journal Entries"
        ],
        "summary": "Find journal entries in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for ledger accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all ledger accounts are returned."
      }
    },
    "/journal-entries/{id}": {
      "get": {
        "operationId": "getJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLTransactionObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the journal entry to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ],
        "summary": "Retrieve a journal entry associated with a given ID from the Finance system. Specifying a journal entry with an associated ID that does not exist will result in an error response."
      }
    },
    "/ledger-accounts": {
      "post": {
        "operationId": "createLedgerAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ledgerAccount object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'LedgerAccount' model are those required to create a new ledgerAccount",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Create a ledger account in the Finance system. ledger account creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getLedgerAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LedgerAccountListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Find ledger accounts in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for ledger accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all ledger accounts are returned."
      }
    },
    "/ledger-accounts/{id}": {
      "get": {
        "operationId": "getLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/LedgerAccount"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the ledger account to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Retrieve a ledger account associated with a given ID from the Finance system. Specifying a ledger account method with an associated ID that does not exist will result in an error response."
      }
    },
    "/locations": {
      "post": {
        "operationId": "createLocation",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/locationsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Customer Address object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Customer Address' model are those required to create a new Customer Address",
            "required": true
          }
        ],
        "tags": [
          "Locations"
        ],
        "summary": "Create a customer address in the Finance system."
      },
      "get": {
        "operationId": "getLocations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationsGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, For example, to search customer address by city the search expression will be where=city='redmond'.",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ],
        "summary": "Finds customer address in the Finance system"
      }
    },
    "/locations/{id}": {
      "patch": {
        "operationId": "updateLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Customer Address to retrieve from the finance system. id is in the format of `customerKey:customerAddessKey`.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/locationsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The invoice object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Locations"
        ],
        "summary": "Update a customer address given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the customer address object will be updated, and those fields not provided will be left alone. Updating a customer address with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/locationsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Customer Address to retrieve from the finance system.\\nId is in the format of `customerKey:customerAddessKey`",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Locations"
        ],
        "summary": "Retrieve a customer address associated with a given ID from the Finance system. Specifying a customer address with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteLocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Customer Address to retrieve from the finance system. Id is in the format of `customerKey:customerAddessKey`. Cannot delete the primary address of a customer.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Locations"
        ],
        "summary": "Delete a location associated with a given id from the Finance system."
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Objects"
        ],
        "summary": "Get a list of all the available objects."
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Objects"
        ],
        "summary": "Get swagger docs for an object."
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Objects"
        ],
        "summary": "Get a list of all the field for an object."
      }
    },
    "/payable-credit-memos": {
      "post": {
        "operationId": "createPayableCreditMemo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableCreditMemosPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/payableCreditMemosPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The PayableCreditMemo object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'PayableCreditMemo' model are those required to create a new PayableCreditMemo",
            "required": true
          }
        ],
        "tags": [
          "Payable Credit Memos"
        ],
        "summary": "Create a payable credit memo in the Finance system. Payable credit memo creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getPayableCreditMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/payableCreditMemosGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payable Credit Memos"
        ],
        "summary": "Find payable credit memos in the Finance system"
      }
    },
    "/payable-credit-memos/{id}": {
      "get": {
        "operationId": "getPayableCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableCreditMemosGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Payable credit memos to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payable Credit Memos"
        ],
        "summary": "Retrieve a payable credit memo associated with a given ID from the Finance system. Specifying a payable credit memo method with an associated ID that does not exist will result in an error response."
      }
    },
    "/payable-invoices": {
      "post": {
        "operationId": "createPayableInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableInvoicesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/payableInvoicesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Payable Invoices"
        ],
        "summary": "Create a new payable invoice in the Finance system."
      },
      "get": {
        "operationId": "getPayableInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/payableInvoicesGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payable Invoices"
        ],
        "summary": "Find details of the company in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for employees last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all employees are returned."
      }
    },
    "/payable-invoices/{id}": {
      "get": {
        "operationId": "getPayableInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableInvoicesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payable invoices.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payable Invoices"
        ],
        "summary": "Retrieve a defined payable invoices associated with a given ID from the Finance system."
      }
    },
    "/payable-returns": {
      "post": {
        "operationId": "createPayableReturn",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableReturnsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/payableReturnsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Payable Return Object.",
            "required": true
          }
        ],
        "tags": [
          "Payable Returns"
        ],
        "summary": "Create a payable return in the Finance system."
      },
      "get": {
        "operationId": "getPayableReturns",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/payableReturnsGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Payable Returns last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned.",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payable Returns"
        ],
        "summary": "Search for payable returns in Finance system."
      }
    },
    "/payable-returns/{id}": {
      "get": {
        "operationId": "getPayableReturnById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/payableReturnsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Payable Return to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payable Returns"
        ],
        "summary": "Retrieve a payable return by id."
      }
    },
    "/payments": {
      "post": {
        "operationId": "createPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Payment object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'Payment' model are those required to create a new Payment",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ],
        "summary": "Create a payment in the Finance system. Payment creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all payments are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payments"
        ],
        "summary": "Find payments in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for payments last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all payments are returned."
      }
    },
    "/payments/{id}": {
      "get": {
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the payment to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ],
        "summary": "Retrieve a defined payment associated with a given ID from the Finance system. Specifying a payment with an associated ID that does not exist will result in an error response."
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Ping"
        ],
        "summary": "Ping the element to confirm that the hub element has a heartbeat. If the element does not have a heartbeat, an error message will be returned."
      }
    },
    "/posted-payables-vendor-payments": {
      "get": {
        "operationId": "getPostedPayablesVendorPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Posted Payables Vendor Payments"
        ],
        "summary": "Search for posted payables vendor payments"
      }
    },
    "/posted-payables-vendor-payments/{id}": {
      "get": {
        "operationId": "getPostedPayablesVendorPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/postedPayablesVendorPaymentsGetRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Posted Payable Document Id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Posted Payables Vendor Payments"
        ],
        "summary": "Retrieve a posted payables vendor payment"
      }
    },
    "/pricing": {
      "post": {
        "operationId": "createPricing",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/pricingPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/pricingPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Pricing object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'Pricing' model are those required to create a new Pricing",
            "required": true
          }
        ],
        "tags": [
          "Pricing"
        ],
        "summary": "Create a pricing in the Finance system. Pricing creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getPricing",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pricingGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pricing"
        ],
        "summary": "Find pricing in the Finance system"
      }
    },
    "/pricing/{id}": {
      "get": {
        "operationId": "getPricingById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/pricingGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Pricing to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Pricing"
        ],
        "summary": "Retrieve a pricing object associated with a given ID from the Finance system. Specifying a precing object method with an associated ID that does not exist will result in an error response."
      }
    },
    "/products": {
      "get": {
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Products"
        ],
        "summary": "Find products or services in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for products or services last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all products or services are returned."
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product or service to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a defined product or service associated with a given ID from the Finance system. Specifying a product or service with an associated ID that does not exist will result in an error response."
      }
    },
    "/purchase-invoices": {
      "post": {
        "operationId": "createPurchaseInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchase invoices request body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ],
        "summary": "Create a new purchase invoices object"
      },
      "get": {
        "operationId": "getPurchaseInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseInvoicesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. Searchable fields are transactionState, id, vendorId, batchId, date, modifiedDate, createdDate",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Invoices"
        ],
        "summary": "Search for purchase invoices"
      }
    },
    "/purchase-invoices/{id}": {
      "get": {
        "operationId": "getPurchaseInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Invoice Id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ],
        "summary": "Retrieve a(n) purchase invoice"
      }
    },
    "/purchase-orders": {
      "post": {
        "operationId": "createPurchaseOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            },
            "in": "body",
            "name": "body",
            "description": "The PurchaseOrder object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'PurchaseOrder' model are those required to create a new purchase order",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create a purchase order in the Finance system. Purchase order creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getPurchaseOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseordersGetResListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all purchase orders are returned. IN Clause for status is also supported e.g. status IN ('New','Released'). It is advisable to use the following filters in where clause to fetch data and prevent call failure when there is a huge amount of data: id, transactionState, vendorId, buyerId, date, status, modifiedDate, createdDate. For e.g. <i>where=vendorId='USER1'</i> .",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Find purchase orders in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for purchase orders last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all purchase orders are returned."
      }
    },
    "/purchase-orders/{id}": {
      "patch": {
        "operationId": "updatePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase order to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            },
            "in": "body",
            "name": "body",
            "description": "The PurchaseOrder object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Update a purchase order given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the payment object will be updated, and those fields not provided will be left alone. Updating a purchase order with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getPurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the purchase order to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Retrieve a defined purchase order associated with a given ID from the Finance system. Specifying a purchase order with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deletePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase order to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete a purchase order associated with a given ID from the Finance system. Specifying a purchase order associated with a given ID that does not exist will result in an error message."
      }
    },
    "/purchase-receipts": {
      "post": {
        "operationId": "createPurchaseReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseReceiptsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseReceiptsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchase receipts request body",
            "required": true
          }
        ],
        "tags": [
          "Purchase Receipts"
        ],
        "summary": "Create a new purchase receipts object"
      },
      "get": {
        "operationId": "getPurchaseReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseReceiptsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. Searchable fields are transactionState, id, vendorId, batchId, date, modifiedDate, createdDate",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Receipts"
        ],
        "summary": "Search for purchase receipts"
      }
    },
    "/purchase-receipts/{id}": {
      "get": {
        "operationId": "getPurchaseReceiptById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseReceiptsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase receipt ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Receipts"
        ],
        "summary": "Retrieve a(n) purchase receipt"
      }
    },
    "/receivable-credit-memos": {
      "post": {
        "operationId": "createReceivableCreditMemo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receivableCreditMemosPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/receivableCreditMemosPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ReceivableCreditMemo object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'ReceivableCreditMemo' model are those required to create a new ReceivableCreditMemo",
            "required": true
          }
        ],
        "tags": [
          "Receivable Credit Memos"
        ],
        "summary": "Create a receivable credit memo in the Finance system. Receivable credit memo creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getReceivableCreditMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/receivableCreditMemosGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Receivable Credit Memos"
        ],
        "summary": "Find receivable credit memos in the Finance system"
      }
    },
    "/receivable-credit-memos/{id}": {
      "get": {
        "operationId": "getReceivableCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receivableCreditMemosGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the receivable credit memo to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Receivable Credit Memos"
        ],
        "summary": "Retrieve a receivable credit memo associated with a given ID from the Finance system. Specifying a receivable credit memo method with an associated ID that does not exist will result in an error response."
      }
    },
    "/receivable-debit-memos": {
      "post": {
        "operationId": "createReceivableDebitMemo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receivableDebitMemosPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/receivableDebitMemosPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ReceivableDebitMemo object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'ReceivableDebitMemo' model are those required to create a new ReceivableDebitMemo",
            "required": true
          }
        ],
        "tags": [
          "Receivable Debit Memos"
        ],
        "summary": "Create a receivable debit memo in the Finance system. Receivable debit memo creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getReceivableDebitMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/receivableDebitMemosGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be where=modifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Receivable Debit Memos"
        ],
        "summary": "Find receivable debit memos in the Finance system"
      }
    },
    "/receivable-debit-memos/{id}": {
      "get": {
        "operationId": "getReceivableDebitMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/receivableDebitMemosGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the receivable debit memo to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Receivable Debit Memos"
        ],
        "summary": "Retrieve a receivable debit memo associated with a given ID from the Finance system. Specifying a receivable debit memo method with an associated ID that does not exist will result in an error response."
      }
    },
    "/receivables-invoices": {
      "get": {
        "operationId": "getReceivablesInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceivablesInvoice"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Receivables Invoices"
        ],
        "summary": "Find invoices in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all invoices are returned."
      }
    },
    "/receivables-invoices/{id}": {
      "get": {
        "operationId": "getReceivablesInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ReceivablesInvoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the invoice to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Receivables Invoices"
        ],
        "summary": "Retrieve an invoice associated with a given ID from the Finance system. Specifying an invoice with an associated ID that does not exist will result in an error response."
      }
    },
    "/sales-fulfillment-orders": {
      "post": {
        "operationId": "createSalesFulfillmentOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesFulfillmentOrdersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesFulfillmentOrdersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The SalesFulfillmentOrder object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'SalesFulfillmentOrder' model are those required to create a new sales fulfillment order",
            "required": true
          }
        ],
        "tags": [
          "Sales Fulfillment Orders"
        ],
        "summary": "Create a sales fulfillment order in the Finance system. Sales fulfillment order creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getSalesFulfillmentOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesFulfillmentOrdersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all records are returned",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Fulfillment Orders"
        ],
        "summary": "Find sales fulfillment orders in the Finance system"
      }
    },
    "/sales-fulfillment-orders/{id}": {
      "get": {
        "operationId": "getSalesFulfillmentOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesFulfillmentOrdersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the sales fulfillment order to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Fulfillment Orders"
        ],
        "summary": "Retrieve a sales fulfillment order associated with a given ID from the Finance system. Specifying a sales fulfillment order method with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteSalesFulfillmentOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The sales fulfullment order Id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Fulfillment Orders"
        ],
        "summary": "Delete sales fulfillment orders"
      }
    },
    "/sales-items": {
      "post": {
        "operationId": "createSalesItem",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesItemsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesItemsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The SalesItem object to be created.\\nWith the exception of the 'id' field, the required fields indicated in the 'SalesItem' model are those required to create a new sales item",
            "required": true
          }
        ],
        "tags": [
          "Sales Items"
        ],
        "summary": "Create a sales item in the Finance system. Sales item creation will flow through cloud elements to the Finance service."
      }
    },
    "/sales-orders": {
      "post": {
        "operationId": "createSalesOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesOrdersPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Sales Orders body",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ],
        "summary": "Create a sales order"
      },
      "get": {
        "operationId": "getSalesOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesOrdersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Orders"
        ],
        "summary": "Search for sales orders"
      }
    },
    "/sales-orders/{id}": {
      "get": {
        "operationId": "getSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesOrdersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ],
        "summary": "Retrieve a sales order"
      },
      "delete": {
        "operationId": "deleteSalesOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The sales order Key",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Orders"
        ],
        "summary": "Delete a sales order"
      }
    },
    "/sales-quotes": {
      "post": {
        "operationId": "createSalesQuote",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuotesPostResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesQuotesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Sales Quote Object.",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ],
        "summary": "Create a sales quote"
      },
      "get": {
        "operationId": "getSalesQuotes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesQuotesGetAllObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Quotes"
        ],
        "summary": "Search for sales quotes"
      }
    },
    "/sales-quotes/{id}": {
      "patch": {
        "operationId": "updateSalesQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuotesPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The sales quote key",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesQuotesPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ],
        "summary": "Update a sales quote"
      },
      "get": {
        "operationId": "getSalesQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuotesById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Quote Key",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ],
        "summary": "Retrieve a sales quote by id"
      },
      "delete": {
        "operationId": "deleteSalesQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Quote Key",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ],
        "summary": "Delete a sales quote"
      }
    },
    "/sales-returns": {
      "post": {
        "operationId": "createSalesReturn",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesReturnsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesReturnsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Sales Returns body",
            "required": true
          }
        ],
        "tags": [
          "Sales Returns"
        ],
        "summary": "Create a sales return"
      },
      "get": {
        "operationId": "getSalesReturns",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesReturnsGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Returns"
        ],
        "summary": "Search for sales returns"
      }
    },
    "/sales-returns/{id}": {
      "patch": {
        "operationId": "updateSalesReturnById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesReturnsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of Sales Return Document",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesReturnsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Sales Return body",
            "required": true
          }
        ],
        "tags": [
          "Sales Returns"
        ],
        "summary": "Update a sales return"
      },
      "get": {
        "operationId": "getSalesReturnById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesReturnsById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Return Key",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Returns"
        ],
        "summary": "Retrieve a sales return"
      },
      "delete": {
        "operationId": "deleteSalesReturnById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Return Key",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Returns"
        ],
        "summary": "Delete a sales return"
      }
    },
    "/services": {
      "post": {
        "operationId": "createService",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/services"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/servicesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The services object to be created.<br/> With the exception of the 'id' field, the required fields indicated in the 'Services' model are those required to create a new service",
            "required": true
          }
        ],
        "tags": [
          "Services"
        ],
        "summary": "Create a service in the Finance system. service creation will flow through cloud elements to the Finance service."
      }
    },
    "/tax-rates": {
      "get": {
        "operationId": "getTaxRates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxRate"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Rates"
        ],
        "summary": "Find tax rates in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for tax rates last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all tax rates are returned."
      }
    },
    "/tax-rates/{id}": {
      "get": {
        "operationId": "getTaxRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxRate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Tax Rate to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Rates"
        ],
        "summary": "Retrieve a defined tax rate associated with a given ID from the Finance system. Specifying a tax rate with an associated ID that does not exist will result in an error response."
      }
    },
    "/tax-schedule-details": {
      "get": {
        "operationId": "getTaxScheduleDetails",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxScheduleDetailsGetResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query.\\nQuerable fields are taxScheduleKeyId, taxDetailKeyId, taxDetailBase, isTaxDetailTaxable, isAutoCalculate;",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Schedule Details"
        ],
        "summary": "Find all the tax-schedules defined in the system"
      }
    },
    "/tax-schedule-details/{id}": {
      "get": {
        "operationId": "getTaxScheduleDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxScheduleDetailsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The tax schedule details ID, ce_id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Schedule Details"
        ],
        "summary": "Retrieve a defined tax-schedule address associated with a given ID from the Finance system."
      }
    },
    "/tax-schedules": {
      "get": {
        "operationId": "getTaxSchedules",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxSchedulesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query.\\nQuerable fields are taxScheduleKeyId and taxScheduleDescription. Example taxScheduleDescription = 'Schedule with all Details'",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Schedules"
        ],
        "summary": "Find all the tax-schedules defined in the system"
      }
    },
    "/tax-schedules/{id}": {
      "get": {
        "operationId": "getTaxScheduleById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxSchedulesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The tax schedule ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Schedules"
        ],
        "summary": "Retrieve a defined tax-schedule address associated with a given ID from the Finance system."
      }
    },
    "/vendor-details": {
      "post": {
        "operationId": "createVendorDetail",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorDetailsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorDetailsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendor Details"
        ],
        "summary": "Create a vendor addres"
      },
      "get": {
        "operationId": "getVendorDetails",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorDetailsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendor Details"
        ],
        "summary": "Search for vendor addresses"
      }
    },
    "/vendor-details/{id}": {
      "patch": {
        "operationId": "updateVendorDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorDetailsPatchRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorDetailsPatchReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Vendor Details"
        ],
        "summary": "Update a vendor address detail"
      },
      "get": {
        "operationId": "getVendorDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorDetailsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The vendor details id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Details"
        ],
        "summary": "Retrieve vendor addresses"
      },
      "delete": {
        "operationId": "deleteVendorDetailById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The vendor details ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Details"
        ],
        "summary": "Delete a vendor addres"
      }
    },
    "/vendors": {
      "post": {
        "operationId": "createVendor",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Vendor"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Vendor' model are those required to create a new vendor",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ],
        "summary": "Create a new vendor in the Finance system. Vendor creation will flow through cloud elements to the Finance service."
      },
      "get": {
        "operationId": "getVendors",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all vendors are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of items returned in a query. Defaults to 100 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendors"
        ],
        "summary": "Find vendors in the Finance system, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for vendors last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all vendors are returned."
      }
    },
    "/vendors/{id}": {
      "patch": {
        "operationId": "updateVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Vendor"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ],
        "summary": "Update a vendor order given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the vendor order object will be updated, and those fields not provided will be left alone. Updating a vendor order with a specified ID that does not exist will result in an error response."
      },
      "get": {
        "operationId": "getVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the vendor to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ],
        "summary": "Retrieve a defined vendor associated with a given ID from the Finance system. Specifying a vendor with an associated ID that does not exist will result in an error response."
      },
      "delete": {
        "operationId": "deleteVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ],
        "summary": "Delete a vendor associated with a given ID from the Finance system. This marks it as inactive in the system specifying a vendor associated with a given ID that does not exist will result in an error message."
      }
    },
    "/{objectName}": {
      "get": {
        "operationId": "getByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Search for object name"
      },
      "post": {
        "operationId": "createByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Create an object name"
      }
    },
    "/{objectName}/{objectId}": {
      "delete": {
        "operationId": "deleteObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Delete an object name"
      },
      "get": {
        "operationId": "getObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Retrieve an object name"
      },
      "patch": {
        "operationId": "updateObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Update an object name"
      },
      "put": {
        "operationId": "replaceObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Update an object name"
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Search for child object name"
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Create an object name"
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Delete an child object name"
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Retrieve an child object name"
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Update an child object name"
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "tags": [
          "Object Name"
        ],
        "summary": "Update an child object name"
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "EmployeeListAddressesEmployeeAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "RCT1160"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPatchReqLinesSalesQuoteLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "128 SDRAM"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "receivableDebitMemosPostReqTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "paymentsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4YM295"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "discountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetAllKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsPatchReqLinesSalesReturnLineReturnQuantityReturnedQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDiscountPercent"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributions": {
      "properties": {
        "receivablesDistribution": {
          "items": {
            "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "payableInvoicesPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "Employee": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/EmployeeAddresses"
        },
        "benefitStartDate": {
          "description": "Date Format is YYYY-MM-DD",
          "type": "string"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/EmployeeDefaultAddressKey"
        },
        "departmentKey": {
          "description": " Valid Departments are 'ADMN','ACCT','SALE','SPTS','INST'",
          "$ref": "#/definitions/EmployeeDepartmentKey"
        },
        "employmentStartDate": {
          "description": "Date Format is YYYY-MM-DD",
          "type": "string",
          "x-alias": "hireDate"
        },
        "employmentType": {
          "description": "Valid values are 'FULL_TIME_REGULAR','FULL_TIME_TEMP','INTERN','PART_TIME_REGULAR','PART_TIME_TEMP','OTHER'",
          "type": "string",
          "x-alias": "type"
        },
        "name": {
          "$ref": "#/definitions/EmployeeName"
        },
        "positionKey": {
          "$ref": "#/definitions/EmployeePositionKey"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "ssn"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "salesOrdersPostResShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "commissionAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKeyPricingKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "1-A3261A"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentPaymentCard"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RECEIVING ENTRY"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "pricingPostResRound": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/pricingPostResRoundAmount"
        },
        "option": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "policy": {
          "type": "string",
          "x-samplevalue": "NONE"
        }
      },
      "title": "round",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDamagedGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPurchaseTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdPurchaseTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "salesItemsPostReqInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "required": [
        "id"
      ],
      "title": "companyKey",
      "type": "object"
    },
    "inventoryTransfersPostRespBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "000000000001006"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "banksGetAllResKey": {
      "type": "object",
      "title": "key",
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/banksGetAllResKeyCompanyKey"
        },
        "id": {
          "x-samplevalue": "STEVESBANKID",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ],
          "x-primary-key": true,
          "type": "string"
        }
      }
    },
    "salesFulfillmentOrdersGetByIdResBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdRes": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResBatchKey"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributions"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLines"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T00:00:00+05:30"
        },
        "postedBy": {
          "type": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Receivings Transaction Entry"
        },
        "subtotal": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResSubtotal"
        },
        "totalLandedCostAmount": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResTotalLandedCostAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "345"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "Fabricam, Inc."
        }
      },
      "title": "purchaseReceiptsGetByIdRes",
      "type": "object"
    },
    "salesOrdersGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLines": {
      "properties": {
        "purchaseInvoiceLine": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1589764465000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200518H06",
          "x-searchable": true,
          "x-searchable-name": "batchId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesOrdersPostReqSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentCashAmount"
        },
        "documentId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetRes": {
      "properties": {
        "items": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResItems"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "array"
        }
      },
      "title": "companyAddressesGetRes",
      "type": "object"
    },
    "payableReturnsGetByIdAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "LocationsGetAllKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/LocationsGetAllKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/LocationsGetAllKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Check Number"
        },
        "number": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Number"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPatchReqKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistribution": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "creditAmount": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "purchaseDistribution",
      "type": "object"
    },
    "salesTaxAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salespersonKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKeyTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetail": {
      "properties": {
        "key": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "uofMPrice": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailUofMPrice"
        }
      },
      "title": "pricingDetail",
      "type": "object"
    },
    "PurchaseOrderLinesPurchaseOrderLineWarehouseKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pricingGetAllResKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "1-A3261A",
          "x-searchable": true,
          "x-searchable-name": "itemId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInServiceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES QUOTES"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResTermsDiscountAvailableTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableTakenAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsPatchReqPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "locationsPatchReqPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesQuotesGetAllBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Created Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "currencyKey": {
          "$ref": "#/definitions/salesQuotesGetAllCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesQuotesGetAllCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Customer Name",
          "x-samplevalue": "Aaron Fitz Electrical Test"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Customer Po Number"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesQuotesGetAllDocumentTypeKey"
        },
        "freightAmount": {
          "x-searchable-names": [
            "documentTypeId"
          ],
          "$ref": "#/definitions/salesQuotesGetAllFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/salesQuotesGetAllKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "contact.lastName",
          "x-displayName": "Last Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-04-06T21:22:47+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesQuotesGetAllLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Master Number",
          "x-samplevalue": 318
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesQuotesGetAllMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-04-06T21:22:47+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesQuotesGetAllSalespersonKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesQuotesGetAllTaxAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesQuotesGetAllTotalAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/salesQuotesGetAllTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAYABLES BATCH"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLots": {
      "properties": {
        "salesLineLot": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLot"
          },
          "type": "array"
        }
      },
      "title": "lots",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        }
      },
      "title": "documentTypeKey",
      "type": "object"
    },
    "receivableDebitMemosGetAllResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001",
          "x-searchable": true,
          "x-searchable-name": "customerId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLines": {
      "properties": {
        "inventoryAdjustmentLine": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLine"
        }
      },
      "type": "object"
    },
    "InvoiceLinesSalesInvoiceLineWarehouseKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "inventoryTransfersGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "000000000001006"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "IV_Trans"
        }
      },
      "type": "object"
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "salesFulfillmentOrdersPostReqTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLinePriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLinePriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKeyPropertiesId": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "INTERNATIONAL-A"
        }
      },
      "title": "id",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesQuotesPostReqLinesSalesQuoteLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "128 SDRAM"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchReqLinesSalesReturnLineReturnQuantity": {
      "properties": {
        "returnedQuantity": {
          "$ref": "#/definitions/salesReturnsPatchReqLinesSalesReturnLineReturnQuantityReturnedQuantity"
        }
      },
      "type": "object"
    },
    "check": {
      "properties": {
        "bankAccountKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "checkNumber": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "receivableDebitMemosGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "EmployeeDepartmentKey": {
      "properties": {
        "id": {
          "description": " Valid Departments are 'ADMN','ACCT','SALE','SPTS','INST'",
          "type": "string",
          "x-alias": "department.name"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLineKeyInventoryKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPatchResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "paymentsPostResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CELLULAR0001"
        }
      },
      "type": "object"
    },
    "InvoiceListLinesSalesInvoiceLine": {
      "properties": {
        "comment": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "itemKey": {
          "$ref": "#/definitions/InvoiceListLinesSalesInvoiceLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/InvoiceListLinesSalesInvoiceLineQuantity"
        },
        "warehouseKey": {
          "$ref": "#/definitions/InvoiceListLinesSalesInvoiceLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "PurchaseOrderShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "shippingAddress.contact.mobile"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKey": {
      "properties": {
        "receivablesDocumentKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "EmployeeName": {
      "properties": {
        "alternate": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "given": {
          "type": "string"
        },
        "middle": {
          "type": "string"
        },
        "preferred": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseordersGetResListKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/payableReturnsGetAllBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableReturnsGetAllCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/payableReturnsGetAllDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableReturnsGetAllFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/payableReturnsGetAllKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableReturnsGetAllMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2021-03-16T02:33:53+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/payableReturnsGetAllTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableReturnsGetAllTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "vendorKey": {
          "$ref": "#/definitions/payableReturnsGetAllVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Vendor Name",
          "x-samplevalue": "API CC"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResRemitToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivablesTax": {
      "properties": {
        "freightTaxAmount": {
          "$ref": "#/definitions/freightTaxAmount"
        },
        "glaccountKey": {
          "$ref": "#/definitions/glaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean"
        },
        "key": {
          "$ref": "#/definitions/key"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/miscellaneousTaxAmount"
        },
        "salesTaxAmount": {
          "$ref": "#/definitions/salesTaxAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/taxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/taxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/totalAmount"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "LocationsGetAllKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResWorkflows": {
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdResWorkflowsWorkflow"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/payableInvoicesGetResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableInvoicesGetResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "!=",
            "<",
            "<=",
            ">="
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/payableInvoicesGetResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableInvoicesGetResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesGetResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableInvoicesGetResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-03-19T23:02:56+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "!=",
            "<",
            "<=",
            ">="
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/payableInvoicesGetResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableInvoicesGetResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "vendorKey": {
          "$ref": "#/definitions/payableInvoicesGetResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "A Travel Company"
        }
      },
      "title": "payableInvoicesGetRes",
      "type": "object"
    },
    "EmployeeAddressesEmployeeAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "phone",
              "path": "addresses.employeeAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLine": {
      "properties": {
        "billOfLadingNumber": {
          "type": "string"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineExtendedCost"
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineInventoryGLAccountKey"
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLinePurchaseOrderKey"
        },
        "quantityRejected": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineQuantityRejected"
        },
        "quantityShipped": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineQuantityShipped"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "GTES5043"
        },
        "warehouseKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineWarehouseKey"
        }
      },
      "title": "purchaseReceiptLine",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLineQuantity"
        },
        "warehouseKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchReqCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKeyPricingKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKeyPricingKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKeyPricingKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKeyPricingKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        }
      },
      "title": "pricingKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsPatchReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesReturnsPatchReqBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Return"
        },
        "customerKey": {
          "$ref": "#/definitions/salesReturnsPatchReqCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "lines": {
          "$ref": "#/definitions/salesReturnsPatchReqLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales return note"
        },
        "postedBy": {
          "type": "string",
          "x-displayName": "Posted By",
          "x-samplevalue": "John"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Posted Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": 1389744000000
        }
      },
      "required": [
        "date",
        "batchKey",
        "lines"
      ],
      "type": "object"
    },
    "salesReturnsPatchRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesReturnsPatchResBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Return"
        },
        "customerKey": {
          "$ref": "#/definitions/salesReturnsPatchResCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/salesReturnsPatchResKey"
        },
        "lines": {
          "$ref": "#/definitions/salesReturnsPatchResLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales return note"
        },
        "postedBy": {
          "type": "string",
          "x-displayName": "Posted By",
          "x-samplevalue": "John"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Posted Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": 1389744000000
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "VendorAddressesVendorAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.city",
              "path": "addresses.vendorAddress[*].city | [0]"
            }
          ]
        },
        "contactPerson": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "addresses.vendorAddress[*].firstName | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.country",
              "path": "addresses.vendorAddress[*].country | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/VendorAddressesVendorAddressFax"
        },
        "key": {
          "description": "Address Key must be match in Addresses",
          "$ref": "#/definitions/VendorAddressesVendorAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line1",
              "path": "addresses.vendorAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line2",
              "path": "addresses.vendorAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/VendorAddressesVendorAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.postalCode",
              "path": "addresses.vendorAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.province",
              "path": "addresses.vendorAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLine": {
      "properties": {
        "comment": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "costOfSalesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineCostOfSalesGLAccountKey"
        },
        "damagedGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDamagedGLAccountKey"
        },
        "discount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDiscount"
        },
        "discountGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDiscountGLAccountKey"
        },
        "extendedCost": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineExtendedCost"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "inServiceGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInServiceGLAccountKey"
        },
        "inUseGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInUseGLAccountKey"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInventoryGLAccountKey"
        },
        "isDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Sleek UX-2100 fax"
        },
        "itemKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineItemKey"
        },
        "itemTaxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineItemTaxScheduleKey"
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLinePriceLevelKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantity"
        },
        "quantityAllocated": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantityAllocated"
        },
        "quantityCanceled": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantityCanceled"
        },
        "quantityFulfilled": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantityFulfilled"
        },
        "quantityToBackorder": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantityToBackorder"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineQuantityToInvoice"
        },
        "returnsGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineReturnsGLAccountKey"
        },
        "salesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalesGLAccountKey"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalespersonKey"
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxes"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTotalAmount"
        },
        "unitPrice": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineUnitPrice"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.salesUom",
          "x-samplevalue": "Each"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResWorkflowsWorkflow": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "NOT_ENABLED"
        },
        "workflowName": {
          "type": "string",
          "x-samplevalue": "Dynamics GP Customer Credit Limit Override Approval Workflow"
        }
      },
      "title": "workflow",
      "type": "object"
    },
    "vendorDetailsGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineQuantityShipped": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "title": "quantityShipped",
      "type": "object"
    },
    "purchaseReceiptsGetAllResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FABRIKAM0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "vendorDetailsPatchReqPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 81.25
        }
      },
      "title": "unitCost",
      "type": "object"
    },
    "EmployeeDefaultAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "inventoryGLAccountKey",
      "type": "object"
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM20005"
        }
      },
      "title": "receivablesDocumentKey",
      "type": "object"
    },
    "vendorDetailsPatchReqPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "payableInvoicesPostResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailUofMPricePercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "percent",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "salesQuotesPostRespLinesSalesQuoteLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey"
        },
        "receiptKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey"
        },
        "receiptLineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKeyPurchaseTransactionKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "locationsGetByIdResKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsGetByIdResKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "pricingGetByIdRes": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJpdGVtS2V5IiA6IHsKICAgICJpZCIgOiAiMjRYIElERSIKICB9LAogICJjdXJyZW5jeUtleSIgOiB7CiAgICAiaXNvY29kZSIgOiAiVVNEIgogIH0sCiAgInByaWNlTGV2ZWxLZXkiIDogewogICAgImlkIiA6ICJSRVRBSUwiCiAgfSwKICAidW9mTSIgOiAiRWFjaCIKfQ=="
        },
        "details": {
          "$ref": "#/definitions/pricingGetByIdResDetails"
        },
        "key": {
          "$ref": "#/definitions/pricingGetByIdResKey"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "round": {
          "$ref": "#/definitions/pricingGetByIdResRound"
        },
        "uofMSalesOption": {
          "type": "string",
          "x-samplevalue": "UNIT_OF_MEASURE_MUST_BE_SOLD_IN_WHOLE_QUANTITIES"
        }
      },
      "title": "pricingGetByIdRes",
      "x-primary-key": [
        "ce_id"
      ],
      "type": "object"
    },
    "companyAddressesGetRes": {
      "properties": {
        "companyAddressesGetRes": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetRes"
        },
        "companyAddressesGetResFax": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResFax"
        },
        "companyAddressesGetResKey": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKey"
        },
        "companyAddressesGetResKeyCompanyKey": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyCompanyKey"
        },
        "companyAddressesGetResObject": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObject"
        },
        "companyAddressesGetResPhone1": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone1"
        },
        "companyAddressesGetResPhone2": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone2"
        },
        "companyAddressesGetResPhone3": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone3"
        }
      },
      "title": "companyAddressesGetRes",
      "type": "object"
    },
    "receivableCreditMemosPostResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "receivableCreditMemosPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111CADVFD1",
          "x-required": true
        }
      },
      "title": "key",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsGetResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesReturnsGetResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "RMA004000"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTermsDiscountPercent"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "COMPANYPUR"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReq": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBatchKey",
          "x-required": true
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBillToAddressKey"
        },
        "comment": {
          "type": "string"
        },
        "commissionAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqCommissionSaleAmount"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "WS_GP_WEB_USER"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqCustomerKey",
          "x-required": true
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "depositAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqDiscountAmount"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqDocumentTypeKey",
          "x-required": true
        },
        "freightAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "isDirectDebit": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqKey",
          "x-required": true
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T20:48:04+05:30"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 410
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T20:48:04+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqPriceLevelKey"
        },
        "reference": {
          "type": "string"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "READY_TO_PICK"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTaxScheduleKey"
        },
        "terms": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTerms"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqWarehouseKey"
        },
        "workflowPriority": {
          "type": "string",
          "x-samplevalue": "NORMAL"
        },
        "workflows": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqWorkflows"
        }
      },
      "title": "salesFulfillmentOrdersPostReq",
      "type": "object",
      "required": [
        "batchKey",
        "customerKey",
        "documentTypeKey",
        "key"
      ]
    },
    "salesQuotesPostReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES QUOTES"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "CashReceiptCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/companyKey"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPurchaseTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostRes": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBatchKey"
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBillToAddressKey"
        },
        "comment": {
          "type": "string"
        },
        "commissionAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResCommissionSaleAmount"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "WS_GP_WEB_USER"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "depositAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResDiscountAmount"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "isDirectDebit": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T20:48:04+05:30"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 410
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T20:48:04+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResPriceLevelKey"
        },
        "reference": {
          "type": "string"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "READY_TO_PICK"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTaxScheduleKey"
        },
        "terms": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTerms"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResWarehouseKey"
        },
        "workflowPriority": {
          "type": "string",
          "x-samplevalue": "NORMAL"
        },
        "workflows": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResWorkflows"
        }
      },
      "title": "salesFulfillmentOrdersPostRes",
      "type": "object"
    },
    "locationsPatchReqFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "ACCS-CRD-12WH"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "warehouseKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "CustomerAddressesCustomerAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.city",
              "path": "addresses.customerAddress[*].city | [0]"
            }
          ]
        },
        "contactPerson": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "addresses.customerAddress[*].contactPerson | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.country",
              "path": "addresses.customerAddress[*].countryRegion | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/CustomerAddressesCustomerAddressFax"
        },
        "key": {
          "$ref": "#/definitions/CustomerAddressesCustomerAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line1",
              "path": "addresses.customerAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line2",
              "path": "addresses.customerAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/CustomerAddressesCustomerAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.postalCode",
              "path": "addresses.customerAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.province",
              "path": "addresses.customerAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "discountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "ACCS-CRD-12WH"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResLinesSalesQuoteLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesQuotesPatchResLinesSalesQuoteLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesQuotesPatchResLinesSalesQuoteLineQuantity"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesQuotesPatchResLinesSalesQuoteLineQuantityToInvoice"
        },
        "quantityToOrder": {
          "$ref": "#/definitions/salesQuotesPatchResLinesSalesQuoteLineQuantityToOrder"
        }
      },
      "type": "object"
    },
    "CustomerListDefaultAddressKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdDiscountReturnedAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDiscountGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesItemsPostReqUofMScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesItemsPostReqUofMScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EACH"
        }
      },
      "title": "uofMScheduleKey",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResRemitToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKeyCompanyKey": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyCompanyKeyProperties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "companyKey"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResKeyCompanyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesReturnsPostReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES RETURNS"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResLinesSalesQuoteLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTermsDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTermsDiscountAmount"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseFromKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseordersGetResListVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "DecimalCurrencyType": {
      "properties": {
        "currency": {
          "description": "Usually USD",
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 812.5
        }
      },
      "title": "extendedCost",
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKeyPricingKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResWorkflowsWorkflow": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "NOT_ENABLED"
        },
        "workflowName": {
          "type": "string",
          "x-samplevalue": "Dynamics GP Customer Credit Limit Override Approval Workflow"
        }
      },
      "title": "workflow",
      "type": "object"
    },
    "salesReturnsPatchResLinesSalesReturnLineReturnQuantity": {
      "properties": {
        "returnedQuantity": {
          "$ref": "#/definitions/salesReturnsPatchResLinesSalesReturnLineReturnQuantityReturnedQuantity"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesCountryRegion": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "Australia"
        }
      },
      "title": "countryRegion",
      "type": "object"
    },
    "payableCreditMemosGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000052"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "receivableDebitMemosPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "locationsGetByIdResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Additional Information"
        },
        "emailBccAddress": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Email Bcc Address"
        },
        "emailCcAddress": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Email Cc Address"
        },
        "emailToAddress": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Email To Address"
        },
        "internetField1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Internet Field 1"
        },
        "internetField2": {
          "type": "string",
          "x-alias": "contact.address.line2",
          "x-displayName": "Internet Field 2"
        },
        "internetField3": {
          "type": "string",
          "x-alias": "corporateAddress.line3",
          "x-displayName": "Internet Field 3"
        },
        "internetField4": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Internet Field 4"
        },
        "internetField5": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Internet Field 5"
        },
        "internetField6": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Internet Field 6"
        },
        "internetField7": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Internet Field 7"
        },
        "internetField8": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Internet Field 8"
        },
        "messengerAddress": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "Messenger Address"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "taxId",
          "x-displayName": "Value",
          "x-samplevalue": 8.4
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantityFulfilled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesQuotesPostRespLinesSalesQuoteLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "128 SDRAM"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetAllResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "salesQuotesGetAllBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "totalAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTradeDiscountAmount"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqRemitToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "400-6520-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKeyPricingKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "GLTransactionObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/GLTransactionBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/GLTransactionCurrencyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1543"
        },
        "key": {
          "$ref": "#/definitions/GLTransactionKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-11T15:41:26Z"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Bank Transfer Entry"
        },
        "sourceDocumentKey": {
          "$ref": "#/definitions/GLTransactionSourceDocumentKey"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        }
      },
      "title": "GLTransaction",
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "payableInvoicesPostReqDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "payableReturnsPostResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesQuotesGetAllDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "STDQTE",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "QUOTE"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineInUseGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "companyKey": {
      "properties": {
        "id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInServiceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInServiceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "salesOrdersPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResLines": {
      "properties": {
        "salesQuoteLine": {
          "$ref": "#/definitions/salesQuotesPatchResLinesSalesQuoteLine"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchReqInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1161"
        }
      },
      "title": "key",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInUseGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "INVENTORY BATCH"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4100-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "salesGLAccountKey",
      "type": "object"
    },
    "VendorDefaultAddressKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000052"
        }
      },
      "title": "payablesDocumentKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLinePriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesQuotesPostReqLinesSalesQuoteLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResWorkflowsWorkflow": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "NOT_ENABLED"
        },
        "workflowName": {
          "type": "string",
          "x-samplevalue": "Dynamics GP Customer Credit Limit Override Approval Workflow"
        }
      },
      "type": "object"
    },
    "pricingPostResKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "payableCreditMemosPostResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKeyInventoryKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Sequence Number",
          "x-samplevalue": 16384
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineWarehouseToKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "102G"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPurchaseTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPurchaseTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "purchaseTaxScheduleKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyPayablesDocumentKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1009EGS"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM20005"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchReqTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSNSWST+20"
        }
      },
      "required": [
        "id"
      ],
      "title": "taxScheduleKey",
      "type": "object"
    },
    "PurchaseOrderCustomerKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "key",
      "type": "object"
    },
    "LocationsGetAllWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "salesQuotesPostRespLinesSalesQuoteLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousTaxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineReturnsGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineReturnsGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1330-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "returnsGLAccountKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLine": {
      "properties": {
        "inventoryGLAccount": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryGLAccount"
        },
        "inventoryOffsetGLAccount": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryOffsetGLAccount"
        },
        "itemKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineQuantity"
        },
        "serials": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerials"
        },
        "unitCost": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Uofm",
          "x-samplevalue": "Each"
        },
        "warehouseKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "taxSchedulesGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "paymentsPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RM CASH BATCH"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Cash"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "ProductListKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTermsDiscountAmountAppliedTaken": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmountAppliedTaken",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "payableCreditMemosPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributions": {
      "properties": {
        "payablesDistribution": {
          "items": {
            "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "VendorAddresses": {
      "properties": {
        "vendorAddress": {
          "items": {
            "$ref": "#/definitions/VendorAddressesVendorAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "VendorAddressesVendorAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.id",
              "path": "addresses.vendorAddress[*].key.id | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STDORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineKeyInventoryKey"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResRemitToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResRemitToAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "remitToAddressKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailUofMPrice": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailUofMPricePercent"
        }
      },
      "title": "uofMPrice",
      "type": "object"
    },
    "salesOrdersGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Bob Fitz"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "11403 45 St. South"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "phone1": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "60603-0776"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "IL"
        }
      },
      "title": "shipToAddress",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentCashAmount"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "purchaseInvoicesGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "services": {
      "properties": {
        "description": {
          "type": "string",
          "x-samplevalue": "sample test service 1"
        },
        "key": {
          "$ref": "#/definitions/servicesKey"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "SERVICE"
        },
        "uofMScheduleKey": {
          "$ref": "#/definitions/servicesUofMScheduleKey"
        }
      },
      "title": "services",
      "type": "object"
    },
    "purchaseReceiptsPostReqLines": {
      "properties": {
        "purchaseReceiptLine": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLine"
          },
          "type": "array"
        }
      },
      "title": "lines",
      "type": "object"
    },
    "purchaseInvoicesPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ENTER/MATCH"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "currencyKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "isocode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesQuotesPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesQuotesPostReqBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Quote comment"
        },
        "customerKey": {
          "$ref": "#/definitions/salesQuotesPostReqCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesQuotesPostReqDocumentTypeKey"
        },
        "isProspect": {
          "type": "boolean",
          "x-displayName": "Is Prospect",
          "x-samplevalue": true
        },
        "lines": {
          "$ref": "#/definitions/salesQuotesPostReqLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales quote note"
        }
      },
      "required": [
        "date",
        "batchKey",
        "customerKey",
        "lines"
      ],
      "type": "object"
    },
    "salesOrdersPostReqTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CENTRALD0001",
          "x-searchable": true,
          "x-searchable-names": [
            "customerId"
          ],
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLine": {
      "properties": {
        "backoutTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineBackoutTaxAmount"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineExtendedCost"
        },
        "isLandedCost": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderKey"
        },
        "purchaseOrderLineKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineQuantityInvoiced"
        },
        "receipts": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceipts"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.purchaseUom",
          "x-samplevalue": "Each"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineVarianceGLAccountKey"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Phone Cord - 12' White"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "CRD-12WH"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 103.79
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetAllResBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsGetAllResKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:44+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK",
          "x-searchable": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "payableInvoicesPostReqWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetail": {
      "properties": {
        "key": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "uofMPrice": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailUofMPrice"
        }
      },
      "title": "pricingDetail",
      "type": "object"
    },
    "receivableDebitMemosPostReqPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLinePriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantityCanceled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "paymentTermsKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "receivableCreditMemosPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "GLTransaction": {
      "items": {
        "$ref": "#/definitions/GLTransactionObject"
      },
      "type": "array"
    },
    "payableReturnsGetAllKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "InvoiceListLinesSalesInvoiceLineWarehouseKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "XXPM_Payment"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResp": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesQuotesPostRespBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Quote comment"
        },
        "customerKey": {
          "$ref": "#/definitions/salesQuotesPostRespCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesQuotesPostRespDocumentTypeKey"
        },
        "isProspect": {
          "type": "boolean",
          "x-displayName": "Is Prospect",
          "x-samplevalue": true
        },
        "lines": {
          "$ref": "#/definitions/salesQuotesPostRespLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales quote note"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResLines": {
      "properties": {
        "inventoryAdjustmentLine": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLine"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineKeyInventoryKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "commissionPercent": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "inventoryGLAccountKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosPostReqDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 175.62
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "vendorDetailsPatchResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "salesReturnsPatchResLinesSalesReturnLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineReturnsGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "paymentAmount",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResFaxPropertiesValue": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "2155550103"
        }
      },
      "title": "value",
      "type": "object"
    },
    "payableCreditMemosGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "CashReceiptCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/CashReceiptCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CELLULAR0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "miscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLines": {
      "properties": {
        "purchaseReceiptLine": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLine"
          },
          "type": "array"
        }
      },
      "title": "lines",
      "type": "object"
    },
    "payableCreditMemosGetAllResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesTerritoryKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "salesOrdersGetByIdResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionNoncommissionedAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "noncommissionedAmount",
      "type": "object"
    },
    "companiesGetAllResDefaultAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31243626710000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "pricingGetAllResKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL",
          "x-searchable": true,
          "x-searchable-name": "priceLevelId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistribution": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionCompanyKey"
        },
        "creditAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "payablesDistribution",
      "type": "object"
    },
    "companiesGetAllResDefaultAddressPhone2": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommission": {
      "properties": {
        "commissionAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionCommissionAmount"
        },
        "commissionPercent": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionCommissionPercent"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionCommissionSaleAmount"
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionKey"
        },
        "noncommissionedAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionNoncommissionedAmount"
        },
        "percentOfSale": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionPercentOfSale"
        },
        "salesAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionSalesAmount"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionSalespersonKey"
        }
      },
      "type": "object"
    },
    "companiesGetAllResDefaultAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "payableReturnsGetByIdTotalPayments": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AMEX"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "payableInvoicesPostReqFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "purchaseReceiptsPostReqRemitToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqRemitToAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "remitToAddressKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersGetAllResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 1925.95
        }
      },
      "type": "object"
    },
    "PurchaseOrderShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "shippingAddress.country"
        },
        "fax": {
          "$ref": "#/definitions/PurchaseOrderShipToAddressFax"
        },
        "key": {
          "$ref": "#/definitions/PurchaseOrderShipToAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "shippingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/PurchaseOrderShipToAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode"
        },
        "state": {
          "type": "string",
          "x-alias": "shippingAddress.province"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailUofMPricePercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "percent",
      "type": "object"
    },
    "receivableDebitMemosGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableReturnsGetByIdAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone2PropertiesValue": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "20555501030000"
        }
      },
      "title": "value",
      "type": "object"
    },
    "Invoice": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/InvoiceBatchKey"
        },
        "customerKey": {
          "$ref": "#/definitions/InvoiceCustomerKey"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "lines": {
          "$ref": "#/definitions/InvoiceLines"
        },
        "note": {
          "type": "string",
          "x-alias": "description"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "banksGetAllResAddressPhone1": {
      "type": "object",
      "title": "phone1",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "banksGetAllResAddressPhone3": {
      "type": "object",
      "title": "phone3",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDamagedGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDamagedGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4700-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "damagedGLAccountKey",
      "type": "object"
    },
    "banksGetAllResAddressPhone2": {
      "type": "object",
      "title": "phone2",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "purchaseInvoicesGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "freightAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "subtotal": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResSubtotal"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResTaxAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "WORK",
          "x-searchable": "true",
          "x-searchable-operators": [
            "="
          ]
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResVendorKey"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 175.62
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "purchaseInvoicesPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "locationsPostReq": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "deleteOnUpdate": {
          "type": "boolean",
          "x-displayName": "Delete On Update",
          "x-samplevalue": false
        },
        "fax": {
          "$ref": "#/definitions/locationsPostReqFax"
        },
        "key": {
          "$ref": "#/definitions/locationsPostReqKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/locationsPostReqPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/locationsPostReqPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911"
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        }
      },
      "required": [
        "name",
        "key"
      ],
      "type": "object"
    },
    "locationsPostRes": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "deleteOnUpdate": {
          "type": "boolean",
          "x-displayName": "Delete On Update",
          "x-samplevalue": false
        },
        "fax": {
          "$ref": "#/definitions/locationsPostResFax"
        },
        "key": {
          "$ref": "#/definitions/locationsPostResKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/locationsPostResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/locationsPostResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911"
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "payableReturnsGetAllBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/cash"
        },
        "check": {
          "$ref": "#/definitions/check"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCard"
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 162.5
        }
      },
      "title": "extendedCost",
      "type": "object"
    },
    "purchaseInvoicesPostResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "miscellaneousTaxScheduleKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionCommissionPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.03
        }
      },
      "type": "object"
    },
    "salesOrdersPostResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STDORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributions": {
      "properties": {
        "payablesDistribution": {
          "items": {
            "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "receivableDebitMemosPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxKeyPayablesDocumentKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxKeyTaxDetailKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "companyAddressesGetByIdResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "2155550103"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDiscountPercent"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantityToBackorder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "salesOrdersPostResBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostResBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "PRIMARY"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001",
          "x-searchable": true,
          "x-searchable-name": "customerId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDiscountPercent"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ENTER/MATCH",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Ivc"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResDocumentTypeKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "STDQTE"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "QUOTE"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PHON-GTE-5043"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "inventoryTransfersGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "payableInvoicesPostResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "shipToAddressKey",
      "type": "object"
    },
    "receivableDebitMemosPostResWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineReturnsGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "payableReturnsGetByIdMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "taxableAmount",
      "type": "object"
    },
    "payableInvoicesPostResRemitToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResRemitToAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "REMIT TO"
        }
      },
      "title": "remitToAddressKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "paymentAmount",
      "type": "object"
    },
    "InvoiceLines": {
      "properties": {
        "salesInvoiceLine": {
          "items": {
            "$ref": "#/definitions/InvoiceLinesSalesInvoiceLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPostResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "payableInvoicesGetByIdResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "vendorDetailsPostResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "vendorDetailsPostReqFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqSalesTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPostResKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "shipToAddressKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "documentAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PHON-GTE-5043"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "EmployeeAddresses": {
      "properties": {
        "employeeAddress": {
          "items": {
            "$ref": "#/definitions/EmployeeAddressesEmployeeAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTermsDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/purchaseInvoicesPostResTermsDiscountAmount"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4180-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "discountGLAccountKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2111-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLine": {
      "properties": {
        "billOfLadingNumber": {
          "type": "string"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineExtendedCost"
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineInventoryGLAccountKey"
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLinePurchaseOrderKey"
        },
        "quantityRejected": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineQuantityRejected"
        },
        "quantityShipped": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineQuantityShipped"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "PHON-GTE-5043"
        }
      },
      "title": "purchaseReceiptLine",
      "type": "object"
    },
    "vendorDetailsPostReqKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineUnitPrice": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "servicesPostReqKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "5-DBLLABOR"
        }
      },
      "title": "key",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "warehouseKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "CustomerListAddressesCustomerAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.city",
              "path": "addresses.customerAddress[*].city | [0]"
            }
          ]
        },
        "contactPerson": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "addresses.customerAddress[*].contactPerson | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.country",
              "path": "addresses.customerAddress[*].countryRegion | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/CustomerListAddressesCustomerAddressFax"
        },
        "key": {
          "$ref": "#/definitions/CustomerListAddressesCustomerAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line1",
              "path": "addresses.customerAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line2",
              "path": "addresses.customerAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/CustomerListAddressesCustomerAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.postalCode",
              "path": "addresses.customerAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.province",
              "path": "addresses.customerAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqSalesTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqSalesTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "salesTaxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1200-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "purchaseInvoicesPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "pricingPostRes": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJpdGVtS2V5IiA6IHsKICAgICJpZCIgOiAiU0RGNDU2IgogIH0sCiAgImN1cnJlbmN5S2V5IiA6IHsKICAgICJpc29jb2RlIiA6ICJVU0QiCiAgfSwKICAicHJpY2VMZXZlbEtleSIgOiB7CiAgICAiaWQiIDogIlJFVEFJTCIKICB9LAogICJ1b2ZNIiA6ICJFYWNoIgp9"
        },
        "details": {
          "$ref": "#/definitions/pricingPostResDetails"
        },
        "key": {
          "$ref": "#/definitions/pricingPostResKey"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "round": {
          "$ref": "#/definitions/pricingPostResRound"
        },
        "uofMSalesOption": {
          "type": "string",
          "x-samplevalue": "UNIT_OF_MEASURE_MUST_BE_SOLD_IN_WHOLE_QUANTITIES"
        }
      },
      "title": "pricingPostRes",
      "x-primary-key": [
        "ce_id"
      ],
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "pricingPostReq": {
      "properties": {
        "details": {
          "$ref": "#/definitions/pricingPostReqDetails"
        },
        "key": {
          "$ref": "#/definitions/pricingPostReqKey",
          "x-required": true
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "round": {
          "$ref": "#/definitions/pricingPostReqRound"
        },
        "uofMSalesOption": {
          "type": "string",
          "x-samplevalue": "UNIT_OF_MEASURE_MUST_BE_SOLD_IN_WHOLE_QUANTITIES"
        }
      },
      "title": "pricingPostReq",
      "type": "object",
      "required": [
        "key"
      ]
    },
    "payableCreditMemosGetByIdResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "receivableDebitMemosPostReqWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 1925.95
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineQuantity"
        },
        "warehouseFromKey": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineWarehouseFromKey"
        },
        "warehouseToKey": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineWarehouseToKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmount",
      "type": "object"
    },
    "salesOrdersPostReqTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 1925.95
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "billToAddressKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "payableInvoicesPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "purchaseReceiptsPostReqVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "receivableCreditMemosPostResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectProperties": {
      "properties": {
        "city": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesCity"
        },
        "contactPerson": {
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE",
            "!="
          ],
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesContactPerson"
        },
        "countryRegion": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesCountryRegion"
        },
        "county": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesCounty"
        },
        "fax": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesFax"
        },
        "key": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesKey"
        },
        "line1": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine1"
        },
        "line2": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine2"
        },
        "line3": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine3"
        },
        "modifiedBy": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesModifiedBy"
        },
        "name": {
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE",
            "!="
          ],
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesName"
        },
        "phone1": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone3"
        },
        "postalCode": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesPostalCode"
        },
        "state": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectPropertiesState"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "salesOrdersPostReqPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "salesReturnsPostResLinesSalesReturnLineReturnQuantity": {
      "properties": {
        "returnedQuantity": {
          "$ref": "#/definitions/salesReturnsPostResLinesSalesReturnLineReturnQuantityReturnedQuantity"
        }
      },
      "type": "object"
    },
    "purchaseordersGetResListKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseordersGetResListKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "PO2079"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "taxAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALC0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "vendorDetailsGetByIdResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "salesQuotesPatchReqLinesSalesQuoteLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPatchResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSNSWST+20"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDamagedGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightTaxAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesReturnsPostReqBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Return"
        },
        "customerKey": {
          "$ref": "#/definitions/salesReturnsPostReqCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "lines": {
          "$ref": "#/definitions/salesReturnsPostReqLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales return note"
        },
        "postedBy": {
          "type": "string",
          "x-displayName": "Posted By",
          "x-samplevalue": "John"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Posted Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": 1389744000000
        }
      },
      "required": [
        "date",
        "batchKey",
        "lines"
      ],
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone3PropertiesValue": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "value",
      "type": "object"
    },
    "salesReturnsPostRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesReturnsPostResBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Return"
        },
        "customerKey": {
          "$ref": "#/definitions/salesReturnsPostResCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "lines": {
          "$ref": "#/definitions/salesReturnsPostResLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales return note"
        },
        "postedBy": {
          "type": "string",
          "x-displayName": "Posted By",
          "x-samplevalue": "John"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Posted Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": 1389744000000
        }
      },
      "type": "object"
    },
    "salesReturnsPostReqLinesSalesReturnLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesReturnsPostReqLinesSalesReturnLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesReturnsPostReqLinesSalesReturnLineQuantity"
        },
        "returnQuantity": {
          "$ref": "#/definitions/salesReturnsPostReqLinesSalesReturnLineReturnQuantity"
        }
      },
      "type": "object"
    },
    "percent": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLinesPurchaseOrderLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/PurchaseOrderLinesPurchaseOrderLineItemKey"
        },
        "quantityOrdered": {
          "$ref": "#/definitions/PurchaseOrderLinesPurchaseOrderLineQuantityOrdered"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/PurchaseOrderLinesPurchaseOrderLineShippingMethodKey"
        },
        "warehouseKey": {
          "$ref": "#/definitions/PurchaseOrderLinesPurchaseOrderLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "salesQuotesPostReqLinesSalesQuoteLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesCounty": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "county",
      "type": "object"
    },
    "purchaseInvoicesGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTax": {
      "properties": {
        "freightTaxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxFreightTaxAmount"
        },
        "glaccountKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxKey"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxMiscellaneousTaxAmount"
        },
        "purchasesTaxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxPurchasesTaxAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxTotalAmount"
        }
      },
      "title": "payablesTax",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentCashAmount"
        },
        "documentId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "salesOrdersPostReqDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKeyPropertiesCompanyKey": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResKeyCompanyKey"
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesQuotesPatchResLinesSalesQuoteLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "128 SDRAM"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPostReqShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostReqShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantityAllocated": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "payableInvoicesPostResPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "salesReturnsPatchReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES RETURNS"
        }
      },
      "type": "object"
    },
    "vendorDetailsPostReqTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesReturnsPostResLines": {
      "properties": {
        "salesReturnLine": {
          "$ref": "#/definitions/salesReturnsPostResLinesSalesReturnLine"
        }
      },
      "type": "object"
    },
    "pricingPostReqRound": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/pricingPostReqRoundAmount"
        },
        "option": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "policy": {
          "type": "string",
          "x-samplevalue": "NONE"
        }
      },
      "title": "round",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxPurchasesTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchasesTaxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTermsDiscount"
        },
        "discountAmountAppliedTaken": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTermsDiscountAmountAppliedTaken"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTermsDiscountAvailableAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTermsDiscountTakenAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-21T00:00:00+05:30"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInUseGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInUseGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1520-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "inUseGLAccountKey",
      "type": "object"
    },
    "payableInvoicesPostReqAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "vendorDetailsPostResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "locationsGetByIdResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "GLTransactionKey": {
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-08T00:00:00Z"
        },
        "fiscalYear": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2014
        },
        "journalId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1543
        },
        "recurringTransactionSequence": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionNoncommissionedAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResGstdiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "gstdiscountAmount",
      "type": "object"
    },
    "pricingGetAllResKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD",
          "x-searchable": true,
          "x-searchable-name": "currencyISOCode",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "Customer": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/CustomerAddresses"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/CustomerDefaultAddressKey"
        },
        "isActive": {
          "type": "string",
          "x-alias": "active"
        },
        "isOnHold": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "priority": {
          "type": "number"
        },
        "shortname": {
          "type": "string"
        },
        "statementCycle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResAddressKey"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "RMSLS00000003"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResBatchKey"
        },
        "commissionAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-27T00:00:00+05:30"
        },
        "description": {
          "type": "string"
        },
        "distributions": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResFreightTaxScheduleKey"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-01-29T00:00:00+05:30"
        },
        "gstdiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResGstdiscountAmount"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-11T15:39:34+05:30"
        },
        "payment": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentTermsKey"
        },
        "postedBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResSalesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "OPEN"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "DEBIT_MEMO"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResWriteoffAmount"
        }
      },
      "title": "receivableDebitMemosGetByIdRes",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 19
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "Product": {
      "properties": {
        "classKey": {
          "$ref": "#/definitions/ProductClassKey"
        },
        "description": {
          "type": "string",
          "x-alias": "name"
        },
        "genericDescription": {
          "type": "string"
        },
        "isDiscontinued": {
          "type": "boolean",
          "x-alias": "active"
        },
        "key": {
          "$ref": "#/definitions/ProductKey"
        },
        "shortDescription": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        }
      },
      "type": "object"
    },
    "pricingGetByIdResRound": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/pricingGetByIdResRoundAmount"
        },
        "option": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "policy": {
          "type": "string",
          "x-samplevalue": "NONE"
        }
      },
      "title": "round",
      "type": "object"
    },
    "vendorDetailsPatchResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001",
          "x-searchable": true,
          "x-searchable-name": "customerId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-18T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-18T13:50:16+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "receivableDebitMemosGetAllRes",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M.",
          "x-searchable": true,
          "x-searchable-names": [
            "salesPersonId"
          ],
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1161",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingGetByIdResKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "24X IDE"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "payableReturnsGetAllTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetAllObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryTransfersGetAllBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-09-09T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "key": {
          "x-searchable": false,
          "$ref": "#/definitions/inventoryTransfersGetAllKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-16T22:03:21+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "HISTORY"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKeyTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKeyTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "salesQuotesPostRespBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES QUOTES"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLine": {
      "properties": {
        "backoutTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineBackoutTaxAmount"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineExtendedCost"
        },
        "isLandedCost": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderKey"
        },
        "purchaseOrderLineKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineQuantityInvoiced"
        },
        "receipts": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceipts"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.purchaseUom",
          "x-samplevalue": "Each"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineVarianceGLAccountKey"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Phone Cord - 12' White"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "CRD-12WH"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineItemTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineItemTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResTaxes": {
      "properties": {
        "salesDocumentTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPurchaseTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-18T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "<",
            ">",
            "<=",
            ">="
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/payableCreditMemosGetAllResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableCreditMemosGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosGetAllResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableCreditMemosGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-18T11:44:25+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetAllResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableCreditMemosGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "vendorKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "Central Cellular, Inc."
        }
      },
      "title": "payableCreditMemosGetAllRes",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReqLinesSalesQuoteLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLines"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLines"
        }
      },
      "required": [
        "date",
        "batchKey",
        "lines",
        "key"
      ],
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineKeyInventoryKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantityAllocated": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDiscountGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDiscountGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1205-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "ledgerAccountsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineUnitPrice": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 19.95
        }
      },
      "title": "unitPrice",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResTotalLandedCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalLandedCostAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "ProductKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id"
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "payableCreditMemosGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightTaxAmount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-13T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<"
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T19:01:51+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<"
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "HISTORY",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "type": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "PAYMENT"
        },
        "vendorKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Comnet Enterprises, Inc"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTermsDiscountAvailableAmount"
        },
        "discountDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTermsDiscountTakenAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-12T00:00:00+05:30"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineQuantity"
        },
        "warehouseFromKey": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineWarehouseFromKey"
        },
        "warehouseToKey": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLineWarehouseToKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesOrdersPostResTradeDiscountAmount"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "paymentsPostResBankAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "BulkUploadResponse": {
      "description": "BulkLoad response of bulk download.",
      "properties": {
        "id": {
          "description": "Id of the bulk job",
          "type": "string"
        },
        "instanceId": {
          "description": "Instance Id of the bulk job",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKeyPricingKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "1-A3261A"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BEG BAL"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "companyAddressesGetByIdResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "purchaseInvoicesPostReqLines": {
      "properties": {
        "purchaseInvoiceLine": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetAllResObject": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJjb21wYW55S2V5IiA6IHsKICAgICJpZCIgOiAtMQogIH0sCiAgInZlbmRvcktleSIgOiB7CiAgICAiY29tcGFueUtleSIgOiB7CiAgICAgICJpZCIgOiAtMQogICAgfSwKICAgICJpZCIgOiAiQUNFVFJBVkUwMDAxIgogIH0sCiAgImlkIiA6ICJQUklNQVJZIgp9"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsGetAllResFax"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsGetAllResKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "123 Riley Street",
          "x-searchable": true,
          "x-searchable-names": [
            "address"
          ],
          "x-searchable-operators": [
            "=",
            "LIKE"
          ]
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "x-searchable": true,
          "x-searchable-names": [
            "phoneNumber"
          ],
          "x-searchable-operators": [
            "="
          ],
          "$ref": "#/definitions/vendorDetailsGetAllResPhone1"
        },
        "phone2": {
          "x-searchable": true,
          "x-searchable-names": [
            "phoneNumber"
          ],
          "x-searchable-operators": [
            "="
          ],
          "$ref": "#/definitions/vendorDetailsGetAllResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "vendorDetailsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "ce_id"
      ]
    },
    "payableInvoicesGetResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000457"
        }
      },
      "title": "key",
      "type": "object"
    },
    "pricingPostResDetails": {
      "properties": {
        "pricingDetail": {
          "items": {
            "$ref": "#/definitions/pricingPostResDetailsPricingDetail"
          },
          "type": "array"
        }
      },
      "title": "details",
      "type": "object"
    },
    "payableReturnsGetByIdPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentPaymentCard"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryTransfersGetAllBatchKey": {
      "properties": {
        "companyKey": {
          "x-searchable": false,
          "$ref": "#/definitions/inventoryTransfersGetAllBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "000000000001006",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "IV_Trans",
          "x-searchable": false
        }
      },
      "type": "object"
    },
    "salesReturnsGetResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Value",
          "x-samplevalue": 120
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "locationsGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsGetByIdResKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/locationsGetByIdResKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt": {
      "properties": {
        "cost": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost"
        },
        "doesRevalueInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey"
        }
      },
      "type": "object"
    },
    "creditAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "payableInvoicesPostReqRemitToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqRemitToAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "REMIT TO"
        }
      },
      "title": "remitToAddressKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1495477800000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SOP ORDERS"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchResKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchResKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LOCAL DELIVERY"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "payableInvoicesPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqKeyCompanyKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "receivableDebitMemosPostResCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesOrdersPostReqLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesOrdersPostResPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKeySalesDocumentKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "payableInvoicesGetByIdRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/payableInvoicesGetByIdResAmount1099"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResBatchKey"
        },
        "chargeAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResChargeAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "PM"
        },
        "distributions": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResFreightTaxScheduleKey"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "hasIntercompanyDistributions": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntercompanyTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesGetByIdResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-03-19T23:02:56+05:30"
        },
        "payment": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentTermsKey"
        },
        "ponumber": {
          "type": "string"
        },
        "postedBy": {
          "type": "string"
        },
        "purchaseTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPurchaseTaxScheduleKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPurchasesAmount"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxAmount"
        },
        "taxDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1492713000000
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxes"
        },
        "terms": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTerms"
        },
        "totalPayments": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTotalPayments"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "INVOICE"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "DOCUMENT 1"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "A Travel Company"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResWriteoffAmount"
        }
      },
      "title": "payableInvoicesGetByIdRes",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryToGLAccountCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/purchaseInvoicesPostResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResTermsDiscountAvailableAmount"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "InvoiceListLines": {
      "properties": {
        "salesInvoiceLine": {
          "items": {
            "$ref": "#/definitions/InvoiceListLinesSalesInvoiceLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "paymentsPostReqBankAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostReqBankAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "UPTOWN TRUST"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "PurchaseOrderVendorKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ATTRACTI00001"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTermsDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 54
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "locationsPatchResKeyCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLine": {
      "properties": {
        "billOfLadingNumber": {
          "type": "string"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineExtendedCost"
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineInventoryGLAccountKey"
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLinePurchaseOrderKey"
        },
        "quantityRejected": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineQuantityRejected"
        },
        "quantityShipped": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineQuantityShipped"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-samplevalue": "Cordless-Grand S5043"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "PHON-GTE-5043"
        }
      },
      "required": [
        "purchaseOrderKey",
        "itemKey",
        "VendorItemNumber",
        "key"
      ],
      "title": "purchaseReceiptLine",
      "type": "object"
    },
    "salesOrdersPostResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "discount": {
      "properties": {
        "amount": {
          "type": "string"
        },
        "percent": {
          "$ref": "#/definitions/percent"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsPostResLinesSalesReturnLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "payableInvoicesPostReqPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "payableInvoicesGetResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKeyPricingKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableDebitMemosGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "purchaseordersGetResListRemainingSubtotal": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1838
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "ProductClassKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObject": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResObjectProperties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetRes"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResObject",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Iso Code",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableReturnsPostResVendorKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "API CC00000"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "LocationsGetAllFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "debitAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "distributions": {
      "properties": {
        "receivablesDistribution": {
          "items": {
            "$ref": "#/definitions/receivablesDistribution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "locationsPatchResKey": {
      "properties": {
        "customerKey": {
          "$ref": "#/definitions/locationsPatchResKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1009"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressKeyCustomerKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "pricingGetByIdResDetails": {
      "properties": {
        "pricingDetail": {
          "items": {
            "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetail"
          },
          "type": "array"
        }
      },
      "title": "details",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTermsDiscountAvailableAmount"
        },
        "discountDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1589999400000
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTermsDiscountTakenAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-06-20T00:00:00+05:30"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "payableInvoicesGetByIdResWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "companiesGetAllResPurchasesTaxScheduleKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "COMPANYPUR"
        }
      },
      "title": "purchasesTaxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 1"
        }
      },
      "title": "salesTerritoryKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostResSalesTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "taxScheduleDetailsGetByIdRes": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJjb21wYW55S2V5IiA6IHsKICAgICJpZCIgOiAtMQogIH0sCiAgInRheFNjaGVkdWxlS2V5IiA6IHsKICAgICJjb21wYW55S2V5IiA6IHsKICAgICAgImlkIiA6IC0xCiAgICB9LAogICAgImlkIiA6ICJBTEwgREVUQUlMUyIKICB9LAogICJ0YXhEZXRhaWxLZXkiIDogewogICAgImNvbXBhbnlLZXkiIDogewogICAgICAiaWQiIDogLTEKICAgIH0sCiAgICAiaWQiIDogIkFVU1NURStQUzBOMCIKICB9Cn0="
        },
        "isAutoCalculate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxDetailTaxable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "taxDetailBase": {
          "type": "string",
          "x-samplevalue": "PERCENT_OF_SALES_PURCHASE"
        },
        "taxScheduleDetailKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKey"
        }
      },
      "title": "taxScheduleDetailsGetByIdRes",
      "x-primary-key": [
        "ce_id"
      ],
      "type": "object"
    },
    "LedgerAccountKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "000-1311-00"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-displayName": "Value",
          "x-samplevalue": 79.95
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000001"
        }
      },
      "type": "object"
    },
    "LedgerAccount": {
      "properties": {
        "accountType": {
          "type": "string",
          "x-alias": "accCategory"
        },
        "alias": {
          "type": "string",
          "x-samplevalue": "$OB"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Cash - Operating Account"
        },
        "isActive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/LedgerAccountKey"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResTotalPayments": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalPayments",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "vendorDetailsPatchReqShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivablesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/creditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/debitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/distributionTypeKey"
        },
        "isPosted": {
          "type": "boolean"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/payableInvoicesPostResTermsDiscount"
        },
        "discountAmountAppliedTaken": {
          "$ref": "#/definitions/payableInvoicesPostResTermsDiscountAmountAppliedTaken"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/payableInvoicesPostResTermsDiscountAvailableAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/payableInvoicesPostResTermsDiscountTakenAmount"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "pricingGetByIdResKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingGetByIdResKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingGetByIdResKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingGetByIdResKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Bob Fitz"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "11403 45 St. South"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "phone1": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "60603-0776"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "IL"
        }
      },
      "title": "shipToAddress",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "paymentsPostReqBankAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "discountAvailableTakenAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLines": {
      "properties": {
        "inventoryTransferLine": {
          "$ref": "#/definitions/inventoryTransfersPostRespLinesInventoryTransferLine"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "CashReceiptBankAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingGetAllResObject": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJpdGVtS2V5IiA6IHsKICAgICJpZCIgOiAiMS1BMzI2MUEiCiAgfSwKICAiY3VycmVuY3lLZXkiIDogewogICAgImlzb2NvZGUiIDogIlVTRCIKICB9LAogICJwcmljZUxldmVsS2V5IiA6IHsKICAgICJpZCIgOiAiUkVUQUlMIgogIH0sCiAgInVvZk0iIDogIkVhY2giCn0="
        },
        "key": {
          "$ref": "#/definitions/pricingGetAllResKey"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30",
          "x-searchable": true,
          "x-searchable-name": "documentId",
          "x-searchable-operators": [
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        }
      },
      "title": "pricingGetAllRes",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5AE9AH0DSN8FUVC",
          "x-searchable": true,
          "x-searchable-name": "documentId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W."
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "salesReturnsPostReqLinesSalesReturnLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "PurchaseOrder": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "customerKey": {
          "$ref": "#/definitions/PurchaseOrderCustomerKey"
        },
        "lines": {
          "$ref": "#/definitions/PurchaseOrderLines"
        },
        "shipToAddress": {
          "$ref": "#/definitions/PurchaseOrderShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/PurchaseOrderShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/PurchaseOrderShippingMethodKey"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorKey": {
          "$ref": "#/definitions/PurchaseOrderVendorKey"
        }
      },
      "type": "object"
    },
    "locationsPostReqFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "salesItemsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseToKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseToKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "102G"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "type": "object"
    },
    "locationsGetByIdResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "shippingMethod",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryOffsetGLAccount": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryOffsetGLAccountCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "000-1312-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-displayName": "Is Encrypted",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKeyCompanyKeyPropertiesId": {
      "properties": {
        "format": {
          "type": "string",
          "x-samplevalue": "int32"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "integer"
        },
        "x-samplevalue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "id",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineUnitPrice": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableReturnsPostReqKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000468"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "vendorDetailsGetByIdResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "payableInvoicesPostResTermsDiscountAmountAppliedTaken": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmountAppliedTaken",
      "type": "object"
    },
    "companyAddressesGetByIdRes": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Jordan, Katie"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "county": {
          "type": "string"
        },
        "fax": {
          "$ref": "#/definitions/companyAddressesGetByIdResFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/companyAddressesGetByIdResInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/companyAddressesGetByIdResKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "416 Glen Eira Place"
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "Suite 32"
        },
        "line3": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "International TeleCom Assoc."
        },
        "phone1": {
          "$ref": "#/definitions/companyAddressesGetByIdResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/companyAddressesGetByIdResPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/companyAddressesGetByIdResPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        }
      },
      "title": "companyAddressesGetByIdRes",
      "type": "object"
    },
    "payableReturnsPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/payableReturnsPostReqBatchKey"
        },
        "key": {
          "$ref": "#/definitions/payableReturnsPostReqKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableReturnsPostReqPurchasesAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Vendor Document Number",
          "x-samplevalue": "12345"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableReturnsPostReqVendorKey"
        }
      },
      "required": [
        "batchKey",
        "vendorKey",
        "vendorDocumentNumber",
        "key",
        "purchasesAmount"
      ],
      "type": "object"
    },
    "payableReturnsPostRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/payableReturnsPostResBatchKey"
        },
        "key": {
          "$ref": "#/definitions/payableReturnsPostResKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableReturnsPostResPurchasesAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Vendor Document Number",
          "x-samplevalue": "12345"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableReturnsPostResVendorKey"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "salesReturnsGetResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesReturnsGetResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": 1491935400000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES RETURNS"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "InvoiceBatchKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKeyToQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 999999999999
        }
      },
      "title": "toQuantity",
      "type": "object"
    },
    "EmployeeListDefaultAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineReturnsGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTradeDiscountAmount"
        }
      },
      "title": "tradeDiscount",
      "type": "object"
    },
    "salesReturnsPatchReqLinesSalesReturnLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Id",
          "x-samplevalue": "32X IDE"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SUPERIOR0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryGLAccountCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResSalesTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResSalesTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "salesTaxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "paymentAmount",
      "type": "object"
    },
    "salesOrdersPostResPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "purchaseordersGetResListVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseordersGetResListVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ATTRACTI00001"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD",
          "x-searchable": true,
          "x-searchable-name": "batchId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "purchaseInvoicesPostResDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxes": {
      "properties": {
        "salesLineTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentListObject": {
      "properties": {},
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "depositAmount",
      "type": "object"
    },
    "payableReturnsGetByIdWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "Number"
        },
        "receiptNumber": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "Receipt Number"
        }
      },
      "type": "object"
    },
    "pricingPostReqKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingPostReqKeyCurrencyKey",
          "x-required": true
        },
        "itemKey": {
          "$ref": "#/definitions/pricingPostReqKeyItemKey",
          "x-required": true
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingPostReqKeyPriceLevelKey",
          "x-required": true
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-required": true
        }
      },
      "title": "key",
      "type": "object",
      "required": [
        "currencyKey",
        "itemKey",
        "priceLevelKey",
        "uofM"
      ]
    },
    "salesItemsPostResStandardCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "standardCost",
      "type": "object"
    },
    "salesQuotesById": {
      "properties": {},
      "type": "object"
    },
    "taxSchedulesGetAllResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxSchedulesGetAllResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "taxScheduleKey",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesReturnsGetResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Iso Code",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "CustomerListAddressesCustomerAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.id",
              "path": "addresses.customerAddress[*].key.id | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object"
    },
    "vendorDetailsPatchResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsPatchResKeyVendorKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxPurchasesTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "locationsGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "noncommissionedAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "RCT1160"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostRespLinesSalesQuoteLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesQuotesPostRespLinesSalesQuoteLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesQuotesPostRespLinesSalesQuoteLineQuantity"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesQuotesPostRespLinesSalesQuoteLineQuantityToInvoice"
        },
        "quantityToOrder": {
          "$ref": "#/definitions/salesQuotesPostRespLinesSalesQuoteLineQuantityToOrder"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "inventoryTransfersPostReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "000000000001006"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "lineTotalAmount",
      "type": "object"
    },
    "salesReturnsGetResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2111-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-19T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-19T16:44:38+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "receivableCreditMemosGetAllRes",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKey": {
      "properties": {
        "pricingKey": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKeyPricingKey"
        },
        "toQuantity": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKeyToQuantity"
        }
      },
      "title": "key",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 10
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "InvoiceLinesSalesInvoiceLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111",
          "x-searchable": true,
          "x-searchable-name": "documentId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone1": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone1Properties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "phone1"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResPhone1",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone2": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone2Properties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "phone2"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResPhone2",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone3": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone3Properties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "phone3"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResPhone3",
      "type": "object"
    },
    "payableInvoicesPostResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineQuantityRejected": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "quantityRejected",
      "type": "object"
    },
    "payableInvoicesPostReqMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1003"
        }
      },
      "title": "salesDocumentKey",
      "type": "object"
    },
    "salesOrdersPostResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorDetailsPostReq": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsPostReqFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/vendorDetailsPostReqInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsPostReqKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "Hemadurga wonders apartment"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/vendorDetailsPostReqPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/vendorDetailsPostReqPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/vendorDetailsPostReqShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/vendorDetailsPostReqTaxScheduleKey"
        },
        "upszone": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "vendorDetailsPostReq",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "vendorDetailsPostRes": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJjb21wYW55S2V5IiA6IHsKICAgICJpZCIgOiAtMQogIH0sCiAgInZlbmRvcktleSIgOiB7CiAgICAiY29tcGFueUtleSIgOiB7CiAgICAgICJpZCIgOiAtMQogICAgfSwKICAgICJpZCIgOiAiQUNFVFJBVkUwMDAxIgogIH0sCiAgImlkIiA6ICJXQVJFSE9VU0UiCn0="
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsPostResFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/vendorDetailsPostResInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsPostResKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "Hemadurga wonders apartment"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/vendorDetailsPostResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/vendorDetailsPostResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/vendorDetailsPostResShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/vendorDetailsPostResTaxScheduleKey"
        },
        "upszone": {
          "type": "string"
        }
      },
      "title": "vendorDetailsPostRes",
      "x-primary-key": [
        "ce_id"
      ],
      "type": "object"
    },
    "payableInvoicesPostResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "payableInvoicesPostReqTermsDiscountAmountAppliedTaken": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmountAppliedTaken",
      "type": "object"
    },
    "purchaseInvoicesPostResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2111-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "paymentsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "EmployeeAddressesEmployeeAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.city",
              "path": "addresses.employeeAddress[*].city | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.country",
              "path": "addresses.employeeAddress[*].countryRegion | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/EmployeeAddressesEmployeeAddressFax"
        },
        "key": {
          "$ref": "#/definitions/EmployeeAddressesEmployeeAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.line1",
              "path": "addresses.employeeAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.line2",
              "path": "addresses.employeeAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/EmployeeAddressesEmployeeAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.postalCode",
              "path": "addresses.employeeAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.province",
              "path": "addresses.employeeAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1009"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousTaxAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInServiceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInServiceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTradeDiscountAmount"
        }
      },
      "title": "tradeDiscount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineItemTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "paymentsPostResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "freightTaxScheduleKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchReqTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 103.79
        }
      },
      "type": "object"
    },
    "salesReturnsGetResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesReturnsGetResBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Created Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "currencyKey": {
          "$ref": "#/definitions/salesReturnsGetResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesReturnsGetResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Customer Name",
          "x-samplevalue": "Adam Park Resort"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Customer Po Number"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesReturnsGetResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesReturnsGetResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/salesReturnsGetResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "contact.lastName",
          "x-displayName": "Last Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesReturnsGetResLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Master Number",
          "x-samplevalue": 400
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesReturnsGetResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<=",
            ">",
            "<"
          ]
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesReturnsGetResSalespersonKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesReturnsGetResTaxAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesReturnsGetResTotalAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/salesReturnsGetResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/payableInvoicesPostReqTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "salesQuotesGetAllDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "type",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTermsDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "companyAddressesGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/companyAddressesGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INTERNATIONAL-A"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesQuotesGetAllMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1589771965000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200518H08",
          "x-searchable": true,
          "x-searchable-name": "batchId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "payableReturnsGetByIdFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "pricingPostReqKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqTermsDiscountAvailableTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableTakenAmount",
      "type": "object"
    },
    "salesOrdersPostReqDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "writeoffAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesItemsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesItemsPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SDF456FD0!",
          "x-required": true
        }
      },
      "title": "key",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "payableInvoicesGetByIdResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "payableInvoicesPostResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "banksGetAllResAddressFax": {
      "type": "object",
      "title": "fax",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryGLAccount": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryGLAccountCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "000-1300-02"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-displayName": "Is Encrypted",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKeyProperties": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyPropertiesCompanyKey"
        },
        "id": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyPropertiesId"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "purchaseInvoicesGetAllResSubtotal": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 103.79
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsPostResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "shippingMethodKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "locationsPostResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "VendorListObject": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/VendorListAddresses"
        },
        "checkName": {
          "type": "string"
        },
        "comment1": {
          "type": "string"
        },
        "comment2": {
          "type": "string"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/VendorListDefaultAddressKey"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "notes": {
          "type": "string",
          "x-alias": "description"
        },
        "shortName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "shippingAddress.phone",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "vendorDetailsPatchResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "locationsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPostReqKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/locationsPostReqKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineQuantityRejected": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "quantityRejected",
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineCostOfSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "banksGetAllResAddress": {
      "type": "object",
      "title": "address",
      "properties": {
        "city": {
          "x-samplevalue": "Zionsville",
          "type": "string"
        },
        "postalCode": {
          "x-samplevalue": "18092",
          "type": "string"
        },
        "countryRegion": {
          "x-samplevalue": "USA",
          "type": "string"
        },
        "phone2": {
          "$ref": "#/definitions/banksGetAllResAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/banksGetAllResAddressPhone3"
        },
        "state": {
          "x-samplevalue": "PA",
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "fax": {
          "$ref": "#/definitions/banksGetAllResAddressFax"
        },
        "line2": {
          "type": "string"
        },
        "line1": {
          "x-samplevalue": "6245 Tollgate Road",
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/banksGetAllResAddressPhone1"
        }
      }
    },
    "receivableDebitMemosPostReqDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "taxScheduleKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDamagedGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDiscountGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDiscountGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1205-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-6630-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "salesQuotesPostReqDocumentTypeKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "STDQTE"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "QUOTE"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesOrdersPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineBackoutTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDiscountGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "EmployeeListPositionKey": {
      "properties": {
        "id": {
          "description": "Valid values are 'ADA' - Administrative,'CSP' - Consultant,'FSR' - Field Rep, 'TEC' - Technician",
          "type": "string",
          "x-alias": "title"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineCostOfSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4510-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "locationsPostReqPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersPostResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "GLTransactionSourceDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/GLTransactionSourceDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CMXFR"
        }
      },
      "title": "sourceDocumentKey",
      "type": "object"
    },
    "locationsPostReqPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "CashReceiptKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string",
          "x-alias": "checkNumber"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKeyCompanyKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxDetailKey"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxScheduleKey"
        }
      },
      "title": "taxScheduleDetailKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTax": {
      "properties": {
        "freightTaxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxFreightTaxAmount"
        },
        "glaccountKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxKey"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxMiscellaneousTaxAmount"
        },
        "purchasesTaxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxPurchasesTaxAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxTotalAmount"
        }
      },
      "type": "object"
    },
    "servicesPostReqUofMScheduleKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "HR"
        }
      },
      "title": "uofMScheduleKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLine": {
      "properties": {
        "comment": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "costOfSalesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineCostOfSalesGLAccountKey"
        },
        "damagedGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDamagedGLAccountKey"
        },
        "discount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDiscount"
        },
        "discountGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDiscountGLAccountKey"
        },
        "extendedCost": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineExtendedCost"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "inServiceGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInServiceGLAccountKey"
        },
        "inUseGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInUseGLAccountKey"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInventoryGLAccountKey"
        },
        "isDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Sleek UX-2100 fax"
        },
        "itemKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineItemKey"
        },
        "itemTaxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineItemTaxScheduleKey"
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLinePriceLevelKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantity"
        },
        "quantityAllocated": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantityAllocated"
        },
        "quantityCanceled": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantityCanceled"
        },
        "quantityFulfilled": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantityFulfilled"
        },
        "quantityToBackorder": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantityToBackorder"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineQuantityToInvoice"
        },
        "returnsGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineReturnsGLAccountKey"
        },
        "salesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalesGLAccountKey"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalespersonKey"
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxes"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTotalAmount"
        },
        "unitPrice": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineUnitPrice"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.salesUom",
          "x-samplevalue": "Each"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES QUOTES"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "account",
              "path": "distributions.payablesDistribution[*].glaccountKey.id | [0]"
            }
          ],
          "x-samplevalue": "000-1100-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111FGTA1",
          "x-required": true
        }
      },
      "title": "key",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "VendorAddressesVendorAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.fax",
              "path": "addresses.vendorAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.5
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "3-D2657A"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "3-D2657A"
        }
      },
      "type": "object"
    },
    "LocationsGetAllWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/LocationsGetAllWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "RETURNS"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200520H16"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "vendorDetailsPatchResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceipts": {
      "properties": {
        "purchaseInvoiceApplyReceipt": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetAllResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "salesOrdersGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesOrdersGetAllResBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<"
          ]
        },
        "currencyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersGetAllResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Central Distributing",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "customerPONumber",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<"
          ]
        },
        "documentTypeKey": {
          "x-searchable": true,
          "$ref": "#/definitions/salesOrdersGetAllResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetAllResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<"
          ]
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 317
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<"
          ]
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersGetAllResSalespersonKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResTaxAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResTotalAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/salesOrdersGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineBillingQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "billingQuantity",
      "type": "object"
    },
    "payableReturnsGetByIdKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000468"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "costAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 812.5
        }
      },
      "title": "extendedCost",
      "type": "object"
    },
    "taxScheduleDetailsGetResObject": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJjb21wYW55S2V5IiA6IHsKICAgICJpZCIgOiAtMQogIH0sCiAgInRheFNjaGVkdWxlS2V5IiA6IHsKICAgICJjb21wYW55S2V5IiA6IHsKICAgICAgImlkIiA6IC0xCiAgICB9LAogICAgImlkIiA6ICJBTEwgREVUQUlMUyIKICB9LAogICJ0YXhEZXRhaWxLZXkiIDogewogICAgImNvbXBhbnlLZXkiIDogewogICAgICAiaWQiIDogLTEKICAgIH0sCiAgICAiaWQiIDogIkFVU1NURStQUzBOMCIKICB9Cn0="
        },
        "isAutoCalculate": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!"
          ]
        },
        "isTaxDetailTaxable": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!"
          ]
        },
        "taxDetailBase": {
          "type": "string",
          "x-samplevalue": "PERCENT_OF_SALES_PURCHASE",
          "x-searchable": "true",
          "x-searchable-operators": [
            "="
          ]
        },
        "taxScheduleDetailKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKey"
        }
      },
      "title": "taxScheduleDetailsGetRes",
      "type": "object",
      "x-primary-key": [
        "ce_id"
      ]
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "CashReceiptObject": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/CashReceiptAmount"
        },
        "bankAccountKey": {
          "$ref": "#/definitions/CashReceiptBankAccountKey"
        },
        "batchKey": {
          "$ref": "#/definitions/CashReceiptBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/CashReceiptCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/CashReceiptCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-27T00:00:00+0000"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Sample Cash Receipt"
        },
        "key": {
          "$ref": "#/definitions/CashReceiptKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-28T00:00:00+0000"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        }
      },
      "title": "CashReceipt",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "shipToAddressKey",
      "type": "object"
    },
    "salesOrdersGetByIdRes": {
      "properties": {
        "actualShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBatchKey"
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBillToAddressKey"
        },
        "comment": {
          "type": "string",
          "x-alias": "description"
        },
        "commissionAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionSaleAmount"
        },
        "commissions": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissions"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Central Distributing"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "customerPONumber"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "salesOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "daysToIncrement": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "depositAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResDiscountAmount"
        },
        "documentFrequency": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "documentTypeKey": {
          "x-searchable": true,
          "$ref": "#/definitions/salesOrdersGetByIdResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isRepeating": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetByIdResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLineTotalAmount"
        },
        "lines": {
          "$ref": "#/definitions/salesOrdersGetByIdResLines"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 317
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResPaymentTermsKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResPriceLevelKey"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "requestedShipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "NEW"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxes"
        },
        "timesToRepeat": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResWarehouseKey"
        },
        "workflowPriority": {
          "type": "string",
          "x-samplevalue": "NORMAL"
        },
        "workflows": {
          "$ref": "#/definitions/salesOrdersGetByIdResWorkflows"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "locationsPatchReqKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "chargeAmount",
      "type": "object"
    },
    "gstdiscountAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetAllResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 81.25
        }
      },
      "title": "unitCost",
      "type": "object"
    },
    "receivableCreditMemosPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "salesQuotesGetAllBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesQuotesGetAllBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": 1488652200000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES QUOTES"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "purchaseReceiptsGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "VendorListDefaultAddressKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesQuotesPatchResLinesSalesQuoteLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001",
          "x-required": true
        }
      },
      "title": "customerKey",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "salesOrdersGetByIdResLinesSalesOrderLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 98.31
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "CustomerListAddresses": {
      "properties": {
        "customerAddress": {
          "items": {
            "$ref": "#/definitions/CustomerListAddressesCustomerAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesQuotesPostReqCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "payableCreditMemosGetByIdResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineWarehouseFromKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqLines": {
      "properties": {
        "inventoryTransferLine": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLine"
        }
      },
      "type": "object"
    },
    "taxSchedulesGetAllResObject": {
      "properties": {
        "notes": {
          "type": "string"
        },
        "taxScheduleDescription": {
          "type": "string",
          "x-samplevalue": "Schedule with all Details",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/taxSchedulesGetAllResTaxScheduleKey"
        }
      },
      "title": "taxSchedulesGetAllRes",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineQuantityShipped": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "quantityShipped",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "EmployeeListAddressesEmployeeAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "phone",
              "path": "addresses.employeeAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineQuantityRejected": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "quantityRejected",
      "type": "object"
    },
    "receivableDebitMemosPostReqGstdiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "gstdiscountAmount",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKeyPricingKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "salesQuotesGetAllSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "salesQuotesPostReqLinesSalesQuoteLineQuantityToOrder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companyAddressesGetByIdResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "02-55501030"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "companyAddressesGetByIdResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "20555501030000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "companyAddressesGetByIdResPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLine": {
      "properties": {
        "backoutTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineBackoutTaxAmount"
        },
        "extendedCost": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineExtendedCost"
        },
        "isLandedCost": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineKey"
        },
        "purchaseOrderKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderKey"
        },
        "purchaseOrderLineKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineQuantityInvoiced"
        },
        "receipts": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceipts"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineUnitCost"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.purchaseUom",
          "x-samplevalue": "Each"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineVarianceGLAccountKey"
        },
        "vendorItemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Phone Cord - 12' White"
        },
        "vendorItemNumber": {
          "type": "string",
          "x-samplevalue": "CRD-12WH"
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "payableInvoicesGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAYABLES BATCH"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKeyToQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 999999999999
        }
      },
      "title": "toQuantity",
      "type": "object"
    },
    "purchaseInvoicesGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "RCT1160",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "ledgerAccountsPostReq": {
      "properties": {
        "alias": {
          "type": "string",
          "x-samplevalue": "$OB"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Cash - Operating Account"
        },
        "isActive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/ledgerAccountsPostReqKey"
        },
        "type": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "POSTING"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Iso Code",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentCashAmount"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1.5
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LOCAL DELIVERY"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesOrdersPostRes": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesOrdersPostResBatchKey"
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostResBillToAddressKey"
        },
        "comment": {
          "type": "string",
          "x-alias": "description"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesOrdersPostResCommissionSaleAmount"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesOrdersPostResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Central Distributing"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "customerPONumber"
        },
        "depositAmount": {
          "$ref": "#/definitions/salesOrdersPostResDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesOrdersPostResDiscountAmount"
        },
        "documentFrequency": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "documentTypeKey": {
          "x-searchable": true,
          "$ref": "#/definitions/salesOrdersPostResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesOrdersPostResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesOrdersPostResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostResKey"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesOrdersPostResLineTotalAmount"
        },
        "lines": {
          "$ref": "#/definitions/salesOrdersPostResLines"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 317
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesOrdersPostResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesOrdersPostResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesOrdersPostResPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesOrdersPostResPaymentTermsKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersPostResPriceLevelKey"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersPostResSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersPostResSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersPostResShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "NEW"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostResTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersPostResTaxes"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostResTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesOrdersPostResTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersPostResWarehouseKey"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "pricingGetByIdResRoundAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesOrdersPostReq": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesOrdersPostReqBatchKey"
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostReqBillToAddressKey"
        },
        "comment": {
          "type": "string",
          "x-alias": "description"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesOrdersPostReqCommissionSaleAmount"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesOrdersPostReqCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostReqCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Central Distributing"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "customerPONumber"
        },
        "depositAmount": {
          "$ref": "#/definitions/salesOrdersPostReqDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesOrdersPostReqDiscountAmount"
        },
        "documentFrequency": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesOrdersPostReqDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesOrdersPostReqFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostReqKey"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLineTotalAmount"
        },
        "lines": {
          "$ref": "#/definitions/salesOrdersPostReqLines"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 317
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesOrdersPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesOrdersPostReqPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesOrdersPostReqPaymentTermsKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersPostReqPriceLevelKey"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersPostReqSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersPostReqSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersPostReqShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "NEW"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersPostReqTaxes"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesOrdersPostReqTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersPostReqWarehouseKey"
        }
      },
      "required": [
        "customerKey",
        "key"
      ],
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "paymentsPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "ledgerAccountsPostRes": {
      "properties": {
        "alias": {
          "type": "string",
          "x-samplevalue": "$OB"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Cash - Operating Account"
        },
        "isActive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/ledgerAccountsPostResKey"
        },
        "type": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "POSTING"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqWorkflowsWorkflow": {
      "properties": {
        "status": {
          "type": "string",
          "x-samplevalue": "NOT_ENABLED"
        },
        "workflowName": {
          "type": "string",
          "x-samplevalue": "Dynamics GP Customer Credit Limit Override Approval Workflow"
        }
      },
      "title": "workflow",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionPercentOfSale": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineBackoutTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsPostReqKeyVendorKey"
        }
      },
      "required": [
        "id"
      ],
      "title": "key",
      "type": "object"
    },
    "purchaseReceiptsGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T00:00:00+05:30",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "subtotal": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResSubtotal"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": "true",
          "x-searchable-operators": [
            "="
          ]
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "345"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResVendorKey"
        }
      },
      "title": "purchaseReceiptsGetAllRes",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W."
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResItems": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResObject"
        }
      },
      "title": "items",
      "type": "object"
    },
    "vendorDetailsPostReqTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostReqTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSNSWST+20"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "payableCreditMemosGetAllResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALC0001",
          "x-searchable": true,
          "x-searchable-name": "vendorId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "FAXX-SLK-2100"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "account",
              "path": "distributions.purchaseDistribution[*].glaccountKey.id | [0]"
            }
          ],
          "x-samplevalue": "000-2100-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "batchKey": {
      "properties": {
        "createdDateTime": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BEG BAL1"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "receivableDebitMemosPostReqPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "paymentCard",
      "type": "object"
    },
    "payableReturnsGetAllVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetAllVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "API CC00000",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CM1000.1"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "receivableDebitMemosGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "vendorDetailsGetAllResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResTotalLandedCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalLandedCostAmount",
      "type": "object"
    },
    "vendorDetailsGetAllResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "receivableDebitMemosPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200520H16"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W."
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "banksGetAllResKeyCompanyKey": {
      "type": "object",
      "title": "companyKey",
      "properties": {
        "id": {
          "x-samplevalue": -1,
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "receivablesCommission": {
      "properties": {
        "commissionAmount": {
          "$ref": "#/definitions/commissionAmount"
        },
        "commissionPercent": {
          "$ref": "#/definitions/commissionPercent"
        },
        "noncommissionedAmount": {
          "$ref": "#/definitions/noncommissionedAmount"
        },
        "percentOfSale": {
          "$ref": "#/definitions/percentOfSale"
        },
        "salesAmount": {
          "$ref": "#/definitions/salesAmount"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salespersonKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLines": {
      "properties": {
        "inventoryAdjustmentLine": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLine"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Bob Fitz"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "11403 45 St. South"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "phone1": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "60603-0776"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "IL"
        }
      },
      "title": "shipToAddress",
      "type": "object"
    },
    "pricingGetByIdResKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "salesOrdersPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTermsDiscountAvailableTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableTakenAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKey": {
      "properties": {
        "receivablesDocumentKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "locationsPostResKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPostResKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "commissionSaleAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightTaxAmount",
      "type": "object"
    },
    "vendorDetailsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE+PS6N0"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReqLinesSalesQuoteLineQuantityToOrder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "EmployeeListName": {
      "properties": {
        "alternate": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "given": {
          "type": "string"
        },
        "middle": {
          "type": "string"
        },
        "preferred": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostReqMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTermsDiscountAmountAppliedTaken": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 186.92
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesOrdersPostResBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineReturnsGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineReturnsGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1330-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKeyInventoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKeyInventoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKeyInventoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKeyInventoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "VendorListAddresses": {
      "properties": {
        "vendorAddress": {
          "items": {
            "$ref": "#/definitions/VendorListAddressesVendorAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistribution": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "creditAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDamagedGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "purchaseInvoicesGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "locationsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKeyInventoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "vendorDetailsPostResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "percentOfSale": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableCreditMemosPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "title": "unitCost",
      "type": "object"
    },
    "salesOrdersPostResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "payableInvoicesGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 39.9
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResAddressKeyCustomerKey"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDiscountGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDiscountGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1205-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BK MOUSE"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesItemsPostReqUofMScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableReturnsGetAllDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "companiesGetAllResSalesTaxScheduleKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "COMPANYSALES"
        }
      },
      "title": "salesTaxScheduleKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-6650-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USEXMT+PSONO"
        }
      },
      "title": "taxDetailKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "taxSchedulesGetByIdRes": {
      "properties": {
        "notes": {
          "type": "string"
        },
        "taxScheduleDescription": {
          "type": "string",
          "x-samplevalue": "Schedule with all Details"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/taxSchedulesGetByIdResTaxScheduleKey"
        }
      },
      "title": "taxSchedulesGetByIdRes",
      "type": "object"
    },
    "salesOrdersPostResSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseFromKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseFromKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "billToAddressKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object"
    },
    "vendorDetailsPostReqInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "payableInvoicesPostReqPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "salesOrdersGetByIdResBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPatchReqLinesSalesReturnLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKey"
        },
        "postingDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1389551400000
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableReturnsPostReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "developer"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTax": {
      "properties": {
        "freightTaxAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxFreightTaxAmount"
        },
        "glaccountKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxKey"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxMiscellaneousTaxAmount"
        },
        "purchasesTaxAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxPurchasesTaxAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxTotalAmount"
        }
      },
      "title": "payablesTax",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 899
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKeyPricingKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKeyPricingKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKeyPricingKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKeyPricingKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        }
      },
      "title": "pricingKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        }
      },
      "title": "documentTypeKey",
      "type": "object"
    },
    "salesOrdersPostResCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxKeyPayablesDocumentKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxKeyTaxDetailKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "locationsPostResKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "CustomerListObject": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/CustomerListAddresses"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/CustomerListDefaultAddressKey"
        },
        "isActive": {
          "type": "string",
          "x-alias": "active"
        },
        "isOnHold": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "priority": {
          "type": "number"
        },
        "shortname": {
          "type": "string"
        },
        "statementCycle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "shipToAddressKey",
      "type": "object"
    },
    "LocationsGetAllCountryRegionCodeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/LocationsGetAllCountryRegionCodeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "COMNETEN0001",
          "x-searchable": true,
          "x-searchable-names": [
            "vendorId"
          ],
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "InvoiceListLinesSalesInvoiceLineQuantity": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number",
          "x-alias": "lines[*].quantity"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone3Properties": {
      "properties": {
        "value": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone3PropertiesValue"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "purchaseInvoicesPostReqVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 126
        }
      },
      "type": "object"
    },
    "salesOrdersPostResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceipts": {
      "properties": {
        "purchaseInvoiceApplyReceipt": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineKeyInventoryKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "type": "object"
    },
    "salesQuotesPostRespCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "salesReturnsPostResCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqPurchaseTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "locationsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKey": {
      "properties": {
        "inventoryLineKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKeyInventoryLineKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Sequence Number",
          "x-samplevalue": 16384
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailUofMPrice": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailUofMPricePercent"
        }
      },
      "title": "uofMPrice",
      "type": "object"
    },
    "receivableDebitMemosPostResPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "salesOrdersPostResShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostResShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "RCT1160"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "LocationsGetAllCountryRegionCodeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "paymentsPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostReqBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RM CASH BATCH"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Cash"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "receivableCreditMemosPostReqFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "payableReturnsGetByIdCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Iso Code",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "companyAddressesGetResCompanyAddressesGetResKeyCompanyKeyProperties": {
      "properties": {
        "id": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyCompanyKeyPropertiesId"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone1": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResPhone1"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "payableInvoicesGetResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone3": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResPhone3"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "vendorDetailsPostResKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostResKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesPhone2": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResPhone2"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "vendorDetailsPostReqKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostReqKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "required": [
        "id"
      ],
      "title": "vendorKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 98.31
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineUnitPrice": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].priceLevel.price",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "writeoffAmount",
      "type": "object"
    },
    "salesItemsPostRes": {
      "properties": {
        "abccode": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "allowBackOrder": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "currencyDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "TWO"
        },
        "currentCost": {
          "$ref": "#/definitions/salesItemsPostResCurrentCost"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Sasmple Description"
        },
        "functionalCurrencyDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "TWO"
        },
        "genericDescription": {
          "type": "string"
        },
        "includeInDemandPlanning": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "internetAddresses": {
          "$ref": "#/definitions/salesItemsPostResInternetAddresses"
        },
        "keepCalendarYearHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepDistributionHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepFiscalYearHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepTransactionHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesItemsPostResKey"
        },
        "minimumShelfLifeDays1": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "minimumShelfLifeDays2": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "priceMethod": {
          "type": "string",
          "x-samplevalue": "CURRENCY_AMOUNT"
        },
        "purchaseTaxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "purchaseUofM": {
          "type": "string"
        },
        "quantityDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "ZERO"
        },
        "revalueInventory": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "salesTaxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "shippingWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shortDescription": {
          "type": "string"
        },
        "standardCost": {
          "$ref": "#/definitions/salesItemsPostResStandardCost"
        },
        "tolerancePercentage": {
          "$ref": "#/definitions/salesItemsPostResTolerancePercentage"
        },
        "trackingOption": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "SALES_ITEM"
        },
        "uofMScheduleKey": {
          "$ref": "#/definitions/salesItemsPostResUofMScheduleKey"
        },
        "userCategoryList1": {
          "type": "string"
        },
        "userCategoryList2": {
          "type": "string"
        },
        "userCategoryList3": {
          "type": "string"
        },
        "userCategoryList4": {
          "type": "string"
        },
        "userCategoryList5": {
          "type": "string"
        },
        "userCategoryList6": {
          "type": "string"
        },
        "valuationMethod": {
          "type": "string",
          "x-samplevalue": "FIFO_PERPETUAL"
        },
        "warrantyDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesItemsPostRes",
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseToKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 186.92
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "salesItemsPostReq": {
      "properties": {
        "abccode": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "allowBackOrder": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "currencyDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "TWO"
        },
        "currentCost": {
          "$ref": "#/definitions/salesItemsPostReqCurrentCost"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Sasmple Description",
          "x-required": true
        },
        "functionalCurrencyDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "TWO"
        },
        "genericDescription": {
          "type": "string"
        },
        "includeInDemandPlanning": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "internetAddresses": {
          "$ref": "#/definitions/salesItemsPostReqInternetAddresses"
        },
        "keepCalendarYearHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepDistributionHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepFiscalYearHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "keepTransactionHistory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesItemsPostReqKey",
          "x-required": true
        },
        "minimumShelfLifeDays1": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "minimumShelfLifeDays2": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "priceMethod": {
          "type": "string",
          "x-samplevalue": "CURRENCY_AMOUNT"
        },
        "purchaseTaxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "purchaseUofM": {
          "type": "string"
        },
        "quantityDecimalPlaces": {
          "type": "string",
          "x-samplevalue": "ZERO"
        },
        "revalueInventory": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "salesTaxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "shippingWeight": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shortDescription": {
          "type": "string"
        },
        "standardCost": {
          "$ref": "#/definitions/salesItemsPostReqStandardCost"
        },
        "tolerancePercentage": {
          "$ref": "#/definitions/salesItemsPostReqTolerancePercentage"
        },
        "trackingOption": {
          "type": "string",
          "x-samplevalue": "NONE"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "SALES_ITEM"
        },
        "uofMScheduleKey": {
          "$ref": "#/definitions/salesItemsPostReqUofMScheduleKey",
          "x-required": true
        },
        "userCategoryList1": {
          "type": "string"
        },
        "userCategoryList2": {
          "type": "string"
        },
        "userCategoryList3": {
          "type": "string"
        },
        "userCategoryList4": {
          "type": "string"
        },
        "userCategoryList5": {
          "type": "string"
        },
        "userCategoryList6": {
          "type": "string"
        },
        "valuationMethod": {
          "type": "string",
          "x-samplevalue": "FIFO_PERPETUAL"
        },
        "warrantyDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesItemsPostReq",
      "type": "object",
      "required": [
        "description",
        "key",
        "uofMScheduleKey"
      ]
    },
    "salesOrdersPostResLinesSalesOrderLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "payableReturnsPostReqPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTermsDiscountAvailableAmount"
        },
        "discountAvailableTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTermsDiscountAvailableTakenAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTermsDiscountTakenAmount"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "taxSchedulesGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxSchedulesGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "taxScheduleKey",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxes": {
      "properties": {
        "salesLineTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InvoiceListCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKey": {
      "properties": {
        "salesLineKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "GLTransactionCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "salesOrdersPostReqLines": {
      "properties": {
        "salesOrderLine": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "vendorDetailsPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "distributionTypeKey": {
      "properties": {
        "id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentCashAmount"
        },
        "documentId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantityFulfilled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1495477800000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SOP ORDERS"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetAllBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": 1601648411000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "developer"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKey": {
      "properties": {
        "quantityType": {
          "type": "string",
          "x-samplevalue": "ON_HAND"
        },
        "salesLineKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "payableInvoicesPostResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00000000000000001"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "lineTotalAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1003"
        }
      },
      "title": "salesDocumentKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000001"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLineWarehouseKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "PurchaseOrderShipToAddressKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightTaxAmount",
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "inventoryTransfersGetByIdRes": {
      "properties": {
        "auditTrailCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Audit Trail Code",
          "x-samplevalue": "SCIIT00000006"
        },
        "batchKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-09-09T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLines"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-16T22:03:21+05:30"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "HISTORY"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "locationsPatchReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "EmployeeListDepartmentKey": {
      "properties": {
        "id": {
          "description": " Valid Departments are 'ADMN','ACCT','SALE','SPTS','INST'",
          "type": "string",
          "x-alias": "department.name"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesQuotesPatchReqCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineCostOfSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4510-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "CustomerListAddressesCustomerAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.fax",
              "path": "addresses.customerAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "payableInvoicesPostReqPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "payableInvoicesGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "payableInvoicesPostResChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "chargeAmount",
      "type": "object"
    },
    "purchaseReceiptsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "salesDistribution",
      "type": "object"
    },
    "payableInvoicesPostReqTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "lineTotalAmount",
      "type": "object"
    },
    "salesOrdersPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "LocationsGetAllKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingPostResRoundAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "salesReturnsPostReqLinesSalesReturnLineReturnQuantityReturnedQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Bob Fitz"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "11403 45 St. South"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "phone1": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "60603-0776"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "IL"
        }
      },
      "title": "shipToAddress",
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "receivableDebitMemosPostResAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "chargeAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4110-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResSubtotal": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 162.5
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "paymentsPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES RETURNS"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "LocationsGetAllObject": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "countryRegionCodeKey": {
          "$ref": "#/definitions/LocationsGetAllCountryRegionCodeKey"
        },
        "fax": {
          "$ref": "#/definitions/LocationsGetAllFax"
        },
        "key": {
          "$ref": "#/definitions/LocationsGetAllKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "line2": {
          "type": "string",
          "x-alias": "contact.address.line2",
          "x-displayName": "Line 2",
          "x-samplevalue": "321 Chestnut Drive"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/LocationsGetAllPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/LocationsGetAllPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        },
        "warehouseKey": {
          "$ref": "#/definitions/LocationsGetAllWarehouseKey"
        }
      },
      "type": "object"
    },
    "freightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPostResKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/locationsPostResKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesReturnsGetResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesReturnsGetResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "GREG E."
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD",
          "x-searchable": true,
          "x-searchable-name": "documentTypeId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        }
      },
      "title": "documentTypeKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxPurchasesTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchasesTaxAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "receivableCreditMemosPostRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResAddressKey"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResBatchKey"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "discountReturned": {
          "$ref": "#/definitions/receivableCreditMemosPostResDiscountReturned"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResFreightTaxScheduleKey"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableCreditMemosPostResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResMiscellaneousTaxScheduleKey"
        },
        "postedBy": {
          "type": "string"
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResSalesAmount"
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResSalesTaxScheduleKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "CREDIT_MEMO"
        }
      },
      "title": "receivableCreditMemosPostRes",
      "type": "object"
    },
    "receivableCreditMemosPostReq": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqAddressKey"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqBatchKey"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqCustomerKey",
          "x-required": true
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "discountReturned": {
          "$ref": "#/definitions/receivableCreditMemosPostReqDiscountReturned"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqFreightTaxScheduleKey"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableCreditMemosPostReqKey",
          "x-required": true
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqMiscellaneousTaxScheduleKey"
        },
        "postedBy": {
          "type": "string"
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqSalesAmount",
          "x-required": true
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqSalesTaxScheduleKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableCreditMemosPostReqTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "CREDIT_MEMO"
        }
      },
      "title": "receivableCreditMemosPostReq",
      "type": "object",
      "required": [
        "customerKey",
        "key",
        "salesAmount"
      ]
    },
    "payableInvoicesPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "receivableCreditMemosPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesItemsPostResCurrentCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentCost",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInUseGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "commissions": {
      "properties": {
        "receivablesCommission": {
          "items": {
            "$ref": "#/definitions/receivablesCommission"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "payableInvoicesPostResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "PRIMARY"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResAddressKeyCompanyKey"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/payableInvoicesPostResAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/payableInvoicesPostResAmount1099"
        },
        "chargeAmount": {
          "$ref": "#/definitions/payableInvoicesPostResChargeAmount"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableInvoicesPostResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableInvoicesPostResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostResFreightTaxScheduleKey"
        },
        "hasIntercompanyDistributions": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesPostResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableInvoicesPostResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostResMiscellaneousTaxScheduleKey"
        },
        "payment": {
          "$ref": "#/definitions/payableInvoicesPostResPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/payableInvoicesPostResPaymentTermsKey"
        },
        "ponumber": {
          "type": "string"
        },
        "purchaseTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostResPurchaseTaxScheduleKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableInvoicesPostResPurchasesAmount"
        },
        "remitToAddressKey": {
          "$ref": "#/definitions/payableInvoicesPostResRemitToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/payableInvoicesPostResShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableInvoicesPostResTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/payableInvoicesPostResTerms"
        },
        "totalPayments": {
          "$ref": "#/definitions/payableInvoicesPostResTotalPayments"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableInvoicesPostResTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "1125"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableInvoicesPostResVendorKey"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/payableInvoicesPostResWriteoffAmount"
        }
      },
      "title": "payableInvoicesPostRes",
      "type": "object"
    },
    "payableInvoicesPostReq": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/payableInvoicesPostReqAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/payableInvoicesPostReqAmount1099"
        },
        "batchKey": {
          "$ref": "#/definitions/payableInvoicesPostReqBatchKey"
        },
        "chargeAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqChargeAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqCurrencyKey"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "My trial payable invoices"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostReqFreightTaxScheduleKey"
        },
        "hasIntercompanyDistributions": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableInvoicesPostReqKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostReqMiscellaneousTaxScheduleKey"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-04-26T11:23:56+05:30"
        },
        "payment": {
          "$ref": "#/definitions/payableInvoicesPostReqPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/payableInvoicesPostReqPaymentTermsKey"
        },
        "ponumber": {
          "type": "string"
        },
        "purchaseTaxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostReqPurchaseTaxScheduleKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqPurchasesAmount"
        },
        "remitToAddressKey": {
          "$ref": "#/definitions/payableInvoicesPostReqRemitToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/payableInvoicesPostReqShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqTaxAmount"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/payableInvoicesPostReqTaxScheduleKey"
        },
        "terms": {
          "$ref": "#/definitions/payableInvoicesPostReqTerms"
        },
        "totalPayments": {
          "$ref": "#/definitions/payableInvoicesPostReqTotalPayments"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "12345445"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableInvoicesPostReqVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "A Travel Company"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqWriteoffAmount"
        }
      },
      "required": [
        "vendorKey",
        "vendorDocumentNumber"
      ],
      "title": "payableInvoicesPostReq",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetAllResKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetAllResKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LOCAL DELIVERY"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "receivableCreditMemosPostResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ENTER/MATCH"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Ivc"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInServiceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLine": {
      "properties": {
        "actualShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "comment": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "costOfSalesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineCostOfSalesGLAccountKey"
        },
        "damagedGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDamagedGLAccountKey"
        },
        "discount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDiscount"
        },
        "discountGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDiscountGLAccountKey"
        },
        "extendedCost": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineExtendedCost"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "inServiceGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInServiceGLAccountKey"
        },
        "inUseGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInUseGLAccountKey"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInventoryGLAccountKey"
        },
        "isDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "Sleek UX-2100 fax"
        },
        "itemKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineItemKey"
        },
        "itemTaxScheduleKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineItemTaxScheduleKey"
        },
        "key": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLinePriceLevelKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantity"
        },
        "quantityAllocated": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantityAllocated"
        },
        "quantityCanceled": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantityCanceled"
        },
        "quantityFulfilled": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantityFulfilled"
        },
        "quantityToBackorder": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantityToBackorder"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineQuantityToInvoice"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-23T00:00:00+05:30"
        },
        "returnsGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineReturnsGLAccountKey"
        },
        "salesGLAccountKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalesGLAccountKey"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalespersonKey"
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxes"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTotalAmount"
        },
        "unitCost": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineUnitCost"
        },
        "unitPrice": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineUnitPrice"
        },
        "uofM": {
          "type": "string",
          "x-alias": "lines[*].product.salesUom",
          "x-samplevalue": "Each"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesFax": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResFax"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResWorkflows": {
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersPostResWorkflowsWorkflow"
          },
          "type": "array"
        }
      },
      "title": "workflows",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionSaleAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "API CC00000"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxableAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesQuotesGetAllSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "PAUL W.",
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributions": {
      "properties": {
        "receivablesDistribution": {
          "items": {
            "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesState": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "NSW"
        }
      },
      "title": "state",
      "type": "object"
    },
    "salesQuotesPostReqLinesSalesQuoteLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesQuotesPostReqLinesSalesQuoteLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesQuotesPostReqLinesSalesQuoteLineQuantity"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesQuotesPostReqLinesSalesQuoteLineQuantityToInvoice"
        },
        "quantityToOrder": {
          "$ref": "#/definitions/salesQuotesPostReqLinesSalesQuoteLineQuantityToOrder"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "paymentsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4YM295"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111CADVFD1"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightTaxAmount",
      "type": "object"
    },
    "CustomerListAddressesCustomerAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.phone",
              "path": "addresses.customerAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTermsDiscountAvailableAmount"
        },
        "discountDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1589999400000
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTermsDiscountTakenAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-06-20T00:00:00+05:30"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "CashReceiptKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/CashReceiptKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INV000000000002"
        }
      },
      "title": "key",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDiscountReturned": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountReturned",
      "type": "object"
    },
    "salesItemsPostReqTolerancePercentage": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tolerancePercentage",
      "type": "object"
    },
    "VendorAddressesVendorAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.phone",
              "path": "addresses.vendorAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKeyPricingKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "24X IDE"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantityCanceled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001",
          "x-required": true
        }
      },
      "title": "customerKey",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "receivableCreditMemosGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1003"
        }
      },
      "title": "salesDocumentKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "Vendor": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/VendorAddresses"
        },
        "checkName": {
          "type": "string"
        },
        "comment1": {
          "type": "string"
        },
        "comment2": {
          "type": "string"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/VendorDefaultAddressKey"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "notes": {
          "type": "string",
          "x-alias": "description"
        },
        "shortName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BEG BAL"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineWarehouseToKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "102G"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionSaleAmount",
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistribution": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "creditAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "purchaseDistribution",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseordersGetResListObject": {
      "properties": {
        "CreatedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-05-02T00:00:00Z"
        },
        "ModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-05-02T00:00:00Z"
        },
        "buyerKey": {
          "$ref": "#/definitions/purchaseordersGetResListBuyerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-05-02T00:00:00Z",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "key": {
          "$ref": "#/definitions/purchaseordersGetResListKey"
        },
        "remainingSubtotal": {
          "$ref": "#/definitions/purchaseordersGetResListRemainingSubtotal"
        },
        "status": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "RELEASED",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseordersGetResListVendorKey"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "shippingAddress.phone",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxes": {
      "properties": {
        "salesDocumentTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "companyAddressesGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLines": {
      "properties": {
        "purchaseInvoiceLine": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchReqFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineKeyPurchaseTransactionKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "receivableCreditMemosPostResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetAllKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000468",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentCard": {
      "properties": {
        "bankAccountKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "date": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        },
        "typeKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "EmployeePositionKey": {
      "properties": {
        "id": {
          "description": "Valid values are 'ADA' - Administrative,'CSP' - Consultant,'FSR' - Field Rep, 'TEC' - Technician",
          "type": "string",
          "x-alias": "title"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "miscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTermsDiscountAvailableAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-21T00:00:00+05:30"
        }
      },
      "type": "object"
    },
    "LedgerAccountListKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "000-1311-00"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "locationsGetByIdResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "locationsGetByIdResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "400-5600-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 1"
        }
      },
      "title": "salesTerritoryKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PHON-GTE-5043"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantityToBackorder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "addressKey": {
      "properties": {
        "RefKeyType": {
          "$ref": "#/definitions/RefKeyType"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReqDocumentTypeKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "STDQTE"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "QUOTE"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResFaxProperties": {
      "properties": {
        "value": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResFaxPropertiesValue"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "receivableCreditMemosGetByIdRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResAddressKey"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "RMSLS00000001"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResBatchKey"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-06-15T00:00:00+05:30"
        },
        "description": {
          "type": "string"
        },
        "discountReturned": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDiscountReturned"
        },
        "distributions": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResFreightTaxScheduleKey"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-01T00:00:00+05:30"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-11T15:39:39+05:30"
        },
        "postedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 315513000000
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResSalesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "HISTORY"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "CREDIT_MEMO"
        }
      },
      "title": "receivableCreditMemosGetByIdRes",
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "salesOrdersPostReqPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesQuotesPatchResLinesSalesQuoteLineQuantityToOrder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "paymentsPostReqCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "payableInvoicesGetByIdResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "receivablesDistribution",
      "type": "object"
    },
    "salesOrdersGetByIdResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "warehouseKey",
      "type": "object"
    },
    "salesOrdersPostResLines": {
      "properties": {
        "salesOrderLine": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchReqLinesSalesReturnLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesReturnsPatchReqLinesSalesReturnLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesReturnsPatchReqLinesSalesReturnLineQuantity"
        },
        "returnQuantity": {
          "$ref": "#/definitions/salesReturnsPatchReqLinesSalesReturnLineReturnQuantity"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesQuotesGetAllKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "QTEST1025"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesItemsPostResUofMScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 1"
        }
      },
      "title": "salesTerritoryKey",
      "type": "object"
    },
    "salesOrdersPostReqDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STDORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "PurchaseOrderShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceivablesInvoice": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/addressKey"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/batchKey"
        },
        "commissionBasedOn": {
          "type": "string"
        },
        "commissions": {
          "$ref": "#/definitions/commissions"
        },
        "corporateAccountKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "costAmount": {
          "$ref": "#/definitions/costAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/currencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/currentDocumentAmount"
        },
        "customerName": {
          "type": "string"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "distributions": {
          "$ref": "#/definitions/distributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/documentAmount"
        },
        "exchangeDate": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "number"
        },
        "freightAmount": {
          "$ref": "#/definitions/freightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/freightTaxScheduleKey"
        },
        "generalLedgerPostingDate": {
          "type": "string"
        },
        "gstdiscountAmount": {
          "$ref": "#/definitions/gstdiscountAmount"
        },
        "invoicePaidOffDate": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "isDirectDebitDocument": {
          "type": "boolean"
        },
        "isElectronic": {
          "type": "boolean"
        },
        "isIntrastatDocument": {
          "type": "boolean"
        },
        "isVoided": {
          "type": "boolean"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/miscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/miscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string"
        },
        "payment": {
          "$ref": "#/definitions/payment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/paymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "postedDate": {
          "type": "string"
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/salesTaxScheduleKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/shippingMethodKey"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/taxScheduleKey"
        },
        "taxes": {
          "$ref": "#/definitions/taxes"
        },
        "terms": {
          "$ref": "#/definitions/terms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/tradeDiscountAmount"
        },
        "transactionState": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "voidDate": {
          "type": "string"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/writeoffAmount"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LOCAL DELIVERY"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "receivableDebitMemosGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "payableReturnsGetByIdChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesReturnsPostResLinesSalesReturnLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Id",
          "x-samplevalue": "32X IDE"
        }
      },
      "type": "object"
    },
    "locationsPatchResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryToGLAccount": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryToGLAccountCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-displayName": "Is Encrypted",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "100XLG"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResLinesSalesReturnLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Id",
          "x-samplevalue": "32X IDE"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResBillToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableCreditMemosPostResAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "vendorDetailsGetByIdResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostReqTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "axScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLines": {
      "properties": {
        "salesFulfillmentOrderLine": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLine"
          },
          "type": "array"
        }
      },
      "title": "lines",
      "type": "object"
    },
    "receivableDebitMemosPostResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResKeyVendorKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1161"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "receivableDebitMemosPostReqCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostResLinesInventoryAdjustmentLineKeyInventoryKey"
        }
      },
      "type": "object"
    },
    "companiesGetAllResDefaultAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Taylor Stewart-Cray"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "county": {
          "type": "string"
        },
        "fax": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddressFax"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "4277 West Oak Parkway"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Fabrikam, Inc."
        },
        "phone1": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "60601-4277"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "IL"
        }
      },
      "title": "defaultAddress",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "glaccountKey": {
      "properties": {
        "id": {
          "type": "string"
        },
        "isEncrypted": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLines": {
      "properties": {
        "inventoryTransferLine": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLine"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdRes": {
      "properties": {
        "amount1099": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "POIVC00000045"
        },
        "batchKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResBatchKey"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-09T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributions"
        },
        "freightAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLines"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T00:00:00+05:30"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "Purchasing Invoice Entry"
        },
        "subtotal": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResSubtotal"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "WORK"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Advanced Office Systems"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "lineTotalAmount",
      "type": "object"
    },
    "GLTransactionBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/GLTransactionBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-08T00:00:00Z"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CMXFR00000001"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "GL_Normal"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "pricingGetByIdResKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineBackoutTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableInvoicesPostResPurchaseTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResPurchaseTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "purchaseTaxScheduleKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantityToBackorder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "servicesUofMScheduleKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "HR"
        }
      },
      "title": "uofMScheduleKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesModifiedBy": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "modifiedBy",
      "type": "object"
    },
    "InvoiceLinesSalesInvoiceLine": {
      "properties": {
        "comment": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "itemKey": {
          "$ref": "#/definitions/InvoiceLinesSalesInvoiceLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/InvoiceLinesSalesInvoiceLineQuantity"
        },
        "warehouseKey": {
          "$ref": "#/definitions/InvoiceLinesSalesInvoiceLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 5
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "InvoiceLinesSalesInvoiceLineQuantity": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number",
          "x-alias": "lines[*].quantity"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "Class": {
      "properties": {
        "description": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/RefKeyType"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "100XLG"
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKeyToQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 699999999999
        }
      },
      "title": "toQuantity",
      "type": "object"
    },
    "receivableDebitMemosPostResGstdiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "gstdiscountAmount",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "required": [
        "id"
      ],
      "title": "inventoryGLAccountKey",
      "type": "object"
    },
    "purchaseInvoicesPostResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "INVENTORY BATCH"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "IV_Trxent"
        }
      },
      "type": "object"
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetByIdResTaxScheduleDetailKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSSTE+PS0N0"
        }
      },
      "title": "taxDetailKey",
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "La Crosse"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "shippingAddress.contact.firstName",
          "x-samplevalue": "Jason Paul"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "fax": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressFax"
        },
        "line1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "727 25 St. N"
        },
        "line2": {
          "type": "string",
          "x-alias": "shippingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Central Distributing"
        },
        "phone1": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressPhone2"
        },
        "phone3": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressPhone3"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "54601-9975"
        },
        "state": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "WI"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseordersGetResListBuyerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInUseGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineInUseGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1520-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLines": {
      "properties": {
        "salesOrderLine": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone1PropertiesValue": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "02-55501030"
        }
      },
      "title": "value",
      "type": "object"
    },
    "locationsPatchReqKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPatchReqKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "CashReceiptBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKeyPricingKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKeyPricingKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKeyPricingKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKeyPricingKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        }
      },
      "title": "pricingKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKey": {
      "properties": {
        "salesLineKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 1"
        }
      },
      "title": "salesTerritoryKey",
      "type": "object"
    },
    "locationsGetByIdRes": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Created Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "0001-01-03T00:00:00+05:30"
        },
        "fax": {
          "$ref": "#/definitions/locationsGetByIdResFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/locationsGetByIdResInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/locationsGetByIdResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "lastModifiedDate",
          "x-displayName": "Last Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:56+05:30"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:56+05:30"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/locationsGetByIdResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/locationsGetByIdResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/locationsGetByIdResShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/locationsGetByIdResTaxScheduleKey"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "payableInvoicesPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineItemTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FABRIKAM0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "receivableCreditMemosPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "commissionAmount",
      "type": "object"
    },
    "taxes": {
      "properties": {
        "receivablesTax": {
          "items": {
            "$ref": "#/definitions/receivablesTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 13.08
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTermsDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTermsDiscountAmount"
        }
      },
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetail": {
      "properties": {
        "key": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:54+05:30"
        },
        "uofMPrice": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailUofMPrice"
        }
      },
      "title": "pricingDetail",
      "type": "object"
    },
    "payableInvoicesPostReqPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "receivableDebitMemosPostResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTermsDiscountAvailableAmount"
        },
        "discountAvailableTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTermsDiscountAvailableTakenAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTermsDiscountTakenAmount"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "inventoryAdjustmentsPostResKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "PMPAY00000008"
        },
        "batchKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResBatchKey"
        },
        "chargeAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResChargeAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-13T00:00:00+05:30"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "distributions": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResFreightAmount"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "glPostDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-13T00:00:00+05:30"
        },
        "isIntercompanyTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResMiscellaneousAmount"
        },
        "modifiedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T19:01:51+05:30"
        },
        "payment": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPayment"
        },
        "ponumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "postedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 315513000000
        },
        "purchasesAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPurchasesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxAmount"
        },
        "taxDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1389551400000
        },
        "taxes": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxes"
        },
        "terms": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTerms"
        },
        "totalPayments": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTotalPayments"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "HISTORY"
        },
        "type": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "PAYMENT"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "15000"
        },
        "vendorKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Comnet Enterprises, Inc"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResWriteoffAmount"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryFromGLAccountCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionKey"
        },
        "postingDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1388514600000
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "payablesDistribution",
      "type": "object"
    },
    "cash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/amount"
        },
        "bankAccountKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "date": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "locationsGetByIdResKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxes": {
      "properties": {
        "payablesTax": {
          "items": {
            "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTax"
          },
          "type": "array"
        }
      },
      "title": "taxes",
      "type": "object"
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKeyCompanyKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKeyTaxDetailKey"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKeyTaxScheduleKey"
        }
      },
      "title": "taxScheduleDetailKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityFulfilled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "quantityFulfilled",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailKeyPricingKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "VendorListAddressesVendorAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.city",
              "path": "addresses.vendorAddress[*].city | [0]"
            }
          ]
        },
        "contactPerson": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.firstName",
              "path": "addresses.vendorAddress[*].firstName | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.country",
              "path": "addresses.vendorAddress[*].country | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/VendorListAddressesVendorAddressFax"
        },
        "key": {
          "description": "Address Key must be match in Addresses",
          "$ref": "#/definitions/VendorListAddressesVendorAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line1",
              "path": "addresses.vendorAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.line2",
              "path": "addresses.vendorAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/VendorListAddressesVendorAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.postalCode",
              "path": "addresses.vendorAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.province",
              "path": "addresses.vendorAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersPostResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsGetResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesReturnsGetResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "RMARTN"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "RETURN"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceipts": {
      "properties": {
        "purchaseInvoiceApplyReceipt": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "receivableCreditMemosPostReqMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "CustomerAddressesCustomerAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.phone",
              "path": "addresses.customerAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "paymentsPostReqCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostReqCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CELLULAR0001"
        }
      },
      "type": "object"
    },
    "EmployeeListAddresses": {
      "properties": {
        "employeeAddress": {
          "items": {
            "$ref": "#/definitions/EmployeeListAddressesEmployeeAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissions": {
      "properties": {
        "salesCommission": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommission"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "currentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxes": {
      "properties": {
        "salesLineTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "CustomerAddresses": {
      "properties": {
        "customerAddress": {
          "items": {
            "$ref": "#/definitions/CustomerAddressesCustomerAddress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesQuotesPostRespDocumentTypeKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "STDQTE"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "QUOTE"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDiscountGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTermsDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "ProductListObject": {
      "properties": {
        "classKey": {
          "$ref": "#/definitions/ProductListClassKey"
        },
        "description": {
          "type": "string",
          "x-alias": "name"
        },
        "genericDescription": {
          "type": "string"
        },
        "isDiscontinued": {
          "type": "boolean",
          "x-alias": "active"
        },
        "key": {
          "$ref": "#/definitions/ProductListKey"
        },
        "shortDescription": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchReqShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesOrdersGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1495477800000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SOP ORDERS",
          "x-searchable": true,
          "x-searchable-names": [
            "batchId"
          ],
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 162.5
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesOrdersPostReqTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesOrdersPostReqTradeDiscountAmount"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistribution": {
      "properties": {
        "auditTrailCode": {
          "type": "string"
        },
        "creditAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionGlaccountKey"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributionsPurchaseDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "purchaseDistribution",
      "type": "object"
    },
    "locationsGetByIdResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsGetByIdResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingMethod",
          "x-displayName": "Id",
          "x-samplevalue": "LOCAL DELIVERY"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributions": {
      "properties": {
        "payablesDistribution": {
          "items": {
            "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistribution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineQuantity"
        },
        "warehouseKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineWarehouseKey"
        }
      },
      "type": "object"
    },
    "salesItemsPostReqCurrentCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentCost",
      "type": "object"
    },
    "salesQuotesGetAllCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesQuotesGetAllCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "CashReceiptBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/CashReceiptBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-28T00:00:00+0000"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20180328H08"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Cash"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "receivableDebitMemosPostResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "purchaseReceiptsPostRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResCurrencyKey"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseReceiptsPostResDistributions"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostResKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseReceiptsPostResLines"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Receivings Transaction Entry"
        },
        "remitToAddressKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResRemitToAddressKey"
        },
        "totalLandedCostAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostResTotalLandedCostAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "VEN9009"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "American Express"
        }
      },
      "title": "purchaseReceiptsPostRes",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000052"
        }
      },
      "title": "payablesDocumentKey",
      "type": "object"
    },
    "banksGetAllResObject": {
      "title": "banksGetAllRes",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/banksGetAllResAddress"
        },
        "transitNumber": {
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Steve's Bank",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ],
          "type": "string"
        },
        "directDepositTransitNumber": {
          "type": "string"
        },
        "branch": {
          "x-samplevalue": "Bank of America",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ],
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/banksGetAllResKey"
        }
      }
    },
    "purchaseReceiptsPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqCurrencyKey"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributions"
        },
        "key": {
          "$ref": "#/definitions/purchaseReceiptsPostReqKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLines"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Receivings Transaction Entry"
        },
        "remitToAddressKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqRemitToAddressKey"
        },
        "totalLandedCostAmount": {
          "$ref": "#/definitions/purchaseReceiptsPostReqTotalLandedCostAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "VEN9009"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "American Express"
        }
      },
      "required": [
        "vendorKey",
        "key"
      ],
      "title": "purchaseReceiptsPostReq",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineKeyPurchaseTransactionKey"
        }
      },
      "type": "object"
    },
    "taxDetailKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsPostReqAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 15
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPatchReqLines": {
      "properties": {
        "salesReturnLine": {
          "$ref": "#/definitions/salesReturnsPatchReqLinesSalesReturnLine"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "payableCreditMemosPostRes": {
      "properties": {
        "amount1099": {
          "$ref": "#/definitions/payableCreditMemosPostResAmount1099"
        },
        "batchKey": {
          "$ref": "#/definitions/payableCreditMemosPostResBatchKey"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "BEGINNING BALANCES1"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosPostResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResMiscellaneousAmount"
        },
        "ponumber": {
          "type": "string"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResPurchasesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableCreditMemosPostResTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "23rfd43qfe2.143"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableCreditMemosPostResVendorKey"
        }
      },
      "title": "payableCreditMemosPostRes",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineExtendedCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18
        }
      },
      "title": "extendedCost",
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableCreditMemosPostReq": {
      "properties": {
        "amount1099": {
          "$ref": "#/definitions/payableCreditMemosPostReqAmount1099"
        },
        "batchKey": {
          "$ref": "#/definitions/payableCreditMemosPostReqBatchKey"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "BEGINNING BALANCES1"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosPostReqKey",
          "x-required": true
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqMiscellaneousAmount"
        },
        "ponumber": {
          "type": "string"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqPurchasesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqTaxAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableCreditMemosPostReqTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "23rfd43qfe2.143",
          "x-required": true
        },
        "vendorKey": {
          "$ref": "#/definitions/payableCreditMemosPostReqVendorKey",
          "x-required": true
        }
      },
      "title": "payableCreditMemosPostReq",
      "type": "object",
      "required": [
        "key",
        "vendorDocumentNumber",
        "vendorKey"
      ]
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantityToInvoice": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesReturnsById": {
      "properties": {},
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "ledgerAccountsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/ledgerAccountsPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "000-1311-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "EmployeeAddressesEmployeeAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone2Properties": {
      "properties": {
        "value": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone2PropertiesValue"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        }
      },
      "type": "object"
    },
    "vendorDetailsPostReqPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "vendorDetailsGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsGetAllResKeyVendorKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesOrdersPostResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "vendorDetailsPostReqPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "LedgerAccountListObject": {
      "properties": {
        "accountType": {
          "type": "string",
          "x-alias": "accCategory"
        },
        "alias": {
          "type": "string",
          "x-samplevalue": "$OB"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Cash - Operating Account"
        },
        "isActive": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/LedgerAccountListKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "purchaseInvoicesPostReqTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTermsDiscountAvailableAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-05-21T00:00:00+05:30"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "InvoiceListLinesSalesInvoiceLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "VendorListAddressesVendorAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.phone",
              "path": "addresses.vendorAddress[*].phone1.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "contact.address.line1",
          "x-displayName": "Value",
          "x-samplevalue": 55.5
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "payableInvoicesPostReqPurchaseTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqPurchaseTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "purchaseTaxScheduleKey",
      "type": "object"
    },
    "InvoiceListObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/InvoiceListBatchKey"
        },
        "customerKey": {
          "$ref": "#/definitions/InvoiceListCustomerKey"
        },
        "customerPONumber": {
          "type": "string",
          "x-alias": "parentDocumentNumber"
        },
        "lines": {
          "$ref": "#/definitions/InvoiceListLines"
        },
        "note": {
          "type": "string",
          "x-alias": "description"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RECEIVING ENTRY"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResPhone1Properties": {
      "properties": {
        "value": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResPhone1PropertiesValue"
        }
      },
      "title": "properties",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "costAmount",
      "type": "object"
    },
    "paymentsPostResAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 15
        }
      },
      "type": "object"
    },
    "salesOrdersPostResSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 4"
        }
      },
      "type": "object"
    },
    "pricingPostReqDetailsPricingDetailKey": {
      "properties": {
        "pricingKey": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKeyPricingKey"
        },
        "toQuantity": {
          "$ref": "#/definitions/pricingPostReqDetailsPricingDetailKeyToQuantity"
        }
      },
      "title": "key",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 50.25
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesQuotesPatchReqBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Quote comment"
        },
        "customerKey": {
          "$ref": "#/definitions/salesQuotesPatchReqCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesQuotesPatchReqDocumentTypeKey"
        },
        "lines": {
          "$ref": "#/definitions/salesQuotesPatchReqLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales quote note"
        }
      },
      "required": [
        "date",
        "batchKey",
        "customerKey",
        "lines"
      ],
      "type": "object"
    },
    "salesQuotesPatchRes": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesQuotesPatchResBatchKey"
        },
        "comment": {
          "type": "string",
          "x-displayName": "Comment",
          "x-samplevalue": "Sales Quote comment"
        },
        "customerKey": {
          "$ref": "#/definitions/salesQuotesPatchResCustomerKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-15T05:30:00+05:30"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesQuotesPatchResDocumentTypeKey"
        },
        "key": {
          "$ref": "#/definitions/salesQuotesPatchResKey"
        },
        "lines": {
          "$ref": "#/definitions/salesQuotesPatchResLines"
        },
        "note": {
          "type": "string",
          "x-displayName": "Note",
          "x-samplevalue": "sales quote note"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdRes": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "0001-01-03T00:00:00+05:30"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsGetByIdResFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/vendorDetailsGetByIdResInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsGetByIdResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-03-19T23:01:34+05:30"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "123 Riley Street"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-03-19T23:01:34+05:30"
        },
        "phone1": {
          "$ref": "#/definitions/vendorDetailsGetByIdResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/vendorDetailsGetByIdResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResTaxScheduleKey"
        },
        "upszone": {
          "type": "string"
        }
      },
      "title": "vendorDetailsGetByIdRes",
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "CashReceiptCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesItemsPostResInternetAddresses": {
      "properties": {
        "additionalInformation": {
          "type": "string"
        },
        "emailBccAddress": {
          "type": "string"
        },
        "emailCcAddress": {
          "type": "string"
        },
        "emailToAddress": {
          "type": "string"
        },
        "internetField1": {
          "type": "string"
        },
        "internetField2": {
          "type": "string"
        },
        "internetField3": {
          "type": "string"
        },
        "internetField4": {
          "type": "string"
        },
        "internetField5": {
          "type": "string"
        },
        "internetField6": {
          "type": "string"
        },
        "internetField7": {
          "type": "string"
        },
        "internetField8": {
          "type": "string"
        },
        "messengerAddress": {
          "type": "string"
        }
      },
      "title": "internetAddresses",
      "type": "object"
    },
    "VendorListAddressesVendorAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.fax",
              "path": "addresses.vendorAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "inventoryTransfersGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTermsDiscount"
        },
        "discountAmountAppliedTaken": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTermsDiscountAmountAppliedTaken"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTermsDiscountAvailableAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTermsDiscountTakenAmount"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000457"
        }
      },
      "title": "payablesDocumentKey",
      "type": "object"
    },
    "amount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxes": {
      "properties": {
        "salesDocumentTax": {
          "items": {
            "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 98.31
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "salesItemsPostReqStandardCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "standardCost",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqDiscountReturned": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountReturned",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "CustomerAddressesCustomerAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.id",
              "path": "addresses.customerAddress[*].key.id | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineReturnsGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityCanceled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "quantityCanceled",
      "type": "object"
    },
    "receivableDebitMemosPostResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "receivableCreditMemosPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesReturnsPostResBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "SALES RETURNS"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSNSWST+20"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "payableCreditMemosPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0001000023A0003455"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResCommissionsSalesCommissionKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "type": "object"
    },
    "salesItemsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionPercentOfSale": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "percentOfSale",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissions": {
      "properties": {
        "salesCommission": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommission"
          },
          "type": "array"
        }
      },
      "title": "commissions",
      "type": "object"
    },
    "inventoryAdjustmentsGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "x-searchable": false,
          "$ref": "#/definitions/inventoryAdjustmentsGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "INVENTORY BATCH"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "IV_Trxent",
          "x-searchable": false
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKey": {
      "properties": {
        "pricingKey": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKeyPricingKey"
        },
        "toQuantity": {
          "$ref": "#/definitions/pricingPostResDetailsPricingDetailKeyToQuantity"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetAllResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "locationsPatchRes": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "deleteOnUpdate": {
          "type": "boolean",
          "x-displayName": "Delete On Update",
          "x-samplevalue": false
        },
        "fax": {
          "$ref": "#/definitions/locationsPatchResFax"
        },
        "key": {
          "$ref": "#/definitions/locationsPatchResKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/locationsPatchResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/locationsPatchResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911"
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqTotalLandedCostAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalLandedCostAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "locationsPatchReq": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "contact.address.city",
          "x-displayName": "City",
          "x-samplevalue": "Chicago"
        },
        "contactPerson": {
          "type": "string",
          "x-alias": "contact.email",
          "x-displayName": "Contact Person",
          "x-samplevalue": "bharadwaj"
        },
        "countryRegion": {
          "type": "string",
          "x-alias": "contact.address.country",
          "x-displayName": "Country Region",
          "x-samplevalue": "USA"
        },
        "deleteOnUpdate": {
          "type": "boolean",
          "x-displayName": "Delete On Update",
          "x-samplevalue": false
        },
        "fax": {
          "$ref": "#/definitions/locationsPatchReqFax"
        },
        "key": {
          "$ref": "#/definitions/locationsPatchReqKey"
        },
        "line1": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Line 1",
          "x-samplevalue": "456s 19th Street S."
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Name",
          "x-samplevalue": "bharadwaj"
        },
        "phone1": {
          "$ref": "#/definitions/locationsPatchReqPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/locationsPatchReqPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Postal Code",
          "x-samplevalue": "60603-911"
        },
        "state": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "State",
          "x-samplevalue": "IL"
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableInvoicesPostReqShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.03
        }
      },
      "title": "commissionPercent",
      "type": "object"
    },
    "receivableCreditMemosGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1589868878000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200519H11",
          "x-searchable": true,
          "x-searchable-name": "batchId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "quantity",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryTransfersPostRespKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "locationsPostResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "fax",
          "x-displayName": "Value",
          "x-samplevalue": "31255501030000"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKey": {
      "properties": {
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResDistributionsPurchaseDistributionKeyPurchaseTransactionKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "key",
      "type": "object"
    },
    "payableReturnsGetByIdFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AMEX"
        }
      },
      "required": [
        "id"
      ],
      "title": "vendorKey",
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesQuotesPatchReqLines": {
      "properties": {
        "salesQuoteLine": {
          "$ref": "#/definitions/salesQuotesPatchReqLinesSalesQuoteLine"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "servicesKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "12492527"
        }
      },
      "title": "key",
      "type": "object"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInServiceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdRes": {
      "properties": {
        "actualShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBatchKey"
        },
        "billToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBillToAddressKey"
        },
        "comment": {
          "type": "string"
        },
        "commissionAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionSaleAmount"
        },
        "commissions": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissions"
        },
        "createdBy": {
          "type": "string",
          "x-samplevalue": "sa"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-03-02T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical"
        },
        "customerPONumber": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "depositAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDepositAmount"
        },
        "discountAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDiscountAmount"
        },
        "distributions": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributions"
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "isDirectDebit": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLineTotalAmount"
        },
        "lines": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLines"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 333
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "BASED_ON_CUSTOMER"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-17T19:08:02+05:30"
        },
        "note": {
          "type": "string"
        },
        "originalSalesDocumentType": {
          "type": "string",
          "x-samplevalue": "None"
        },
        "paymentAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResPaymentAmount"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResPriceLevelKey"
        },
        "reference": {
          "type": "string"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResSalespersonKey"
        },
        "shipCompleteOnly": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResShippingMethodKey"
        },
        "shippingProcessStatus": {
          "type": "string",
          "x-samplevalue": "READY_TO_PACK"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTaxAmount"
        },
        "taxExemptNumber1": {
          "type": "string"
        },
        "taxExemptNumber2": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTaxScheduleKey"
        },
        "terms": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTerms"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTotalAmount"
        },
        "tradeDiscount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTradeDiscount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        },
        "upszone": {
          "type": "string"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResWarehouseKey"
        },
        "workflowPriority": {
          "type": "string",
          "x-samplevalue": "NORMAL"
        },
        "workflows": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResWorkflows"
        }
      },
      "title": "salesFulfillmentOrdersGetByIdRes",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesQuotesPostRespLines": {
      "properties": {
        "salesQuoteLine": {
          "$ref": "#/definitions/salesQuotesPostRespLinesSalesQuoteLine"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesQuotesPatchReqLinesSalesQuoteLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesQuotesPatchReqLinesSalesQuoteLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesQuotesPatchReqLinesSalesQuoteLineQuantity"
        },
        "quantityToInvoice": {
          "$ref": "#/definitions/salesQuotesPatchReqLinesSalesQuoteLineQuantityToInvoice"
        },
        "quantityToOrder": {
          "$ref": "#/definitions/salesQuotesPatchReqLinesSalesQuoteLineQuantityToOrder"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesQuotesPatchResKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "QTEST1025"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SLS - 1/15"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "payableCreditMemosGetByIdResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt": {
      "properties": {
        "cost": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost"
        },
        "doesRevalueInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInServiceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInServiceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4700-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "inServiceGLAccountKey",
      "type": "object"
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "salesFulfillmentOrdersGetByIdResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantityAllocated": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineKeyInventoryKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Sequence Number",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2500
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "purchaseordersGetResListBuyerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseordersGetResListBuyerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LESSONUSER1"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsPatchResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerials": {
      "properties": {
        "inventorySerial": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerial"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "INVENTORY BATCH"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 812.5
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "receivableDebitMemosPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "locationsPatchResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTaxKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "CustomerDefaultAddressKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "account",
              "path": "distributions.purchaseDistribution[*].glaccountKey.id | [0]"
            }
          ],
          "x-samplevalue": "000-2100-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousTaxAmount",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesKey": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "companyAddressesGetResKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAYABLES BATCH",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingPostReqKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "SDF456FD",
          "x-required": true
        }
      },
      "title": "itemKey",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineQuantityShipped": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "title": "quantityShipped",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "RMA004000"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesQuotesPostReqLines": {
      "properties": {
        "salesQuoteLine": {
          "$ref": "#/definitions/salesQuotesPostReqLinesSalesQuoteLine"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResLinesSalesReturnLineReturnQuantityReturnedQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersPostReqBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "PRIMARY"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "VendorListAddressesVendorAddressKey": {
      "properties": {
        "id": {
          "description": "Address Key must be match in Addresses",
          "type": "string",
          "x-alias": [
            {
              "alias": "corporateAddress.id",
              "path": "addresses.vendorAddress[*].key.id | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResBillToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResBillToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesReturnsPostReqLines": {
      "properties": {
        "salesReturnLine": {
          "$ref": "#/definitions/salesReturnsPostReqLinesSalesReturnLine"
        }
      },
      "type": "object"
    },
    "vendorDetailsGetByIdResKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsGetByIdResKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "salesReturnsGetResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 175.62
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "ORDST2225"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "InvoiceListBatchKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "account",
              "path": "distributions.purchaseDistribution[*].glaccountKey.id | [0]"
            }
          ],
          "x-samplevalue": "000-2100-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 812.5
        }
      },
      "title": "creditAmount",
      "type": "object"
    },
    "salesOrdersPostResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "FAXX-SLK-2100"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "title": "vendorKey",
      "type": "object"
    },
    "GLTransactionBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineShipToAddressKeyCustomerKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostRes": {
      "properties": {
        "amount1099": {
          "$ref": "#/definitions/purchaseInvoicesPostResAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "POIVC00000045"
        },
        "batchKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResCurrencyKey"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributions"
        },
        "freightAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostResKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseInvoicesPostResLines"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResPaymentTermsKey"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "Purchasing Invoice Entry"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/purchaseInvoicesPostResTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostResTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Advanced Office Systems"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPayment": {
      "properties": {
        "cash": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentCash"
        },
        "check": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentCheck"
        },
        "paymentCard": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentPaymentCard"
        }
      },
      "title": "payment",
      "type": "object"
    },
    "salesOrdersGetByIdResLineTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4110-02"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentCashAmount"
        },
        "documentId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "receivableCreditMemosPostResDiscountReturned": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountReturned",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0001000023A0003455",
          "x-required": true
        }
      },
      "title": "key",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "purchaseInvoicesPostReq": {
      "properties": {
        "amount1099": {
          "$ref": "#/definitions/purchaseInvoicesPostReqAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "POIVC00000045"
        },
        "batchKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqCurrencyKey"
        },
        "distributions": {
          "$ref": "#/definitions/purchaseInvoicesPostReqDistributions"
        },
        "freightAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqFreightAmount"
        },
        "freightTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqFreightTaxAmount"
        },
        "freightTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostReqKey"
        },
        "lines": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLines"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqMiscellaneousTaxAmount"
        },
        "miscellaneousTaxBasis": {
          "type": "string",
          "x-samplevalue": "NONTAXABLE"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqPaymentTermsKey"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "Purchasing Invoice Entry"
        },
        "taxAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/purchaseInvoicesPostReqTradeDiscountAmount"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "vendorKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Advanced Office Systems"
        }
      },
      "required": [
        "vendorKey",
        "vendorDocumentNumber"
      ],
      "type": "object"
    },
    "purchaseReceiptsPostResLines": {
      "properties": {
        "purchaseReceiptLine": {
          "items": {
            "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLine"
          },
          "type": "array"
        }
      },
      "title": "lines",
      "type": "object"
    },
    "ledgerAccountsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/ledgerAccountsPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "000-1311-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "EmployeeListAddressesEmployeeAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "fax",
              "path": "addresses.employeeAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "FULFILLMENT_ORDER"
        }
      },
      "title": "documentTypeKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4110-02"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPatchReqKeyVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqKeyVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACETRAVE0001"
        }
      },
      "required": [
        "id"
      ],
      "title": "vendorKey",
      "type": "object"
    },
    "payableReturnsGetById": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/payableReturnsGetByIdAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/payableReturnsGetByIdAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Audit Trail Code"
        },
        "batchKey": {
          "$ref": "#/definitions/payableReturnsGetByIdBatchKey"
        },
        "chargeAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdChargeAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-displayName": "Description",
          "x-samplevalue": "Payble return test"
        },
        "discountReturnedAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdDiscountReturnedAmount"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/payableReturnsGetByIdFreightTaxScheduleKey"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "glAccount",
          "x-displayName": "General Ledger Posting Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "hasIntercompanyDistributions": {
          "type": "boolean",
          "x-alias": "isCompany",
          "x-displayName": "Has inter Company Distributions",
          "x-samplevalue": false
        },
        "isIntercompanyTransaction": {
          "type": "boolean",
          "x-alias": "isCompany",
          "x-displayName": "Is Inter Company Transaction",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-displayName": "Is Voided",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableReturnsGetByIdKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/payableReturnsGetByIdMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified By"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2021-03-16T02:33:53+05:30"
        },
        "payment": {
          "$ref": "#/definitions/payableReturnsGetByIdPayment"
        },
        "ponumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Po Number"
        },
        "postedBy": {
          "type": "string",
          "x-displayName": "Posted By"
        },
        "purchaseTaxScheduleKey": {
          "$ref": "#/definitions/payableReturnsGetByIdPurchaseTaxScheduleKey"
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdPurchasesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdTaxAmount"
        },
        "taxDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Tax Date",
          "x-samplevalue": 1491935400000
        },
        "totalPayments": {
          "$ref": "#/definitions/payableReturnsGetByIdTotalPayments"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Type",
          "x-samplevalue": "RETURN"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Vendor Document Number",
          "x-samplevalue": "12345"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableReturnsGetByIdVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-alias": "name",
          "x-displayName": "Vendor Name",
          "x-samplevalue": "API CC"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/payableReturnsGetByIdWriteoffAmount"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLinesPurchaseOrderLineShippingMethodKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLinePriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLinePriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "TaxRate": {
      "properties": {
        "taxDetailDescription": {
          "type": "string"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "taxDetailPercent": {
          "type": "number"
        },
        "taxDetailTaxMaximum": {
          "$ref": "#/definitions/DecimalCurrencyType"
        },
        "taxDetailType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesCity": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "Sydney"
        }
      },
      "title": "city",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "salesOrdersPostResPaymentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentPaymentCard": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResPaymentPaymentCardAmount"
        },
        "number": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ENTER/MATCH"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO2081"
        }
      },
      "title": "purchaseOrderKey",
      "type": "object"
    },
    "CashReceiptAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60
        }
      },
      "title": "amount",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesReturnsPostReqLinesSalesReturnLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Id",
          "x-samplevalue": "32X IDE"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000457"
        }
      },
      "title": "key",
      "type": "object"
    },
    "payableCreditMemosGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000001129",
          "x-searchable": true,
          "x-searchable-name": "documentId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesOrdersPostResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 1925.95
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTE-PS6N0"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLinePriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostResSalesTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1009"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetAllResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesOrdersPostReqShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111",
          "x-searchable": true,
          "x-searchable-name": "documentId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesGetByIdResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineInServiceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAmount",
      "type": "object"
    },
    "purchaseInvoicesGetAllResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "paymentsPostResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineKeyInventoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineKeyInventoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "InvoiceCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "pricingPostResKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingPostResKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingPostResKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingPostResKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResShipToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShipToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesOrdersGetAllResDocumentTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetAllResDocumentTypeKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STDORD",
          "x-searchable": true,
          "x-searchable-names": [
            "documentTypeId"
          ],
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "type": {
          "type": "string",
          "x-samplevalue": "ORDER"
        }
      },
      "type": "object"
    },
    "tradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "paymentsPostResBankAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/paymentsPostResBankAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "UPTOWN TRUST"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "RCT1160"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineKeyPurchaseTransactionKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "vendorDetailsPatchReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqKeyVendorKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W.",
          "x-searchable": true,
          "x-searchable-name": "salesPersonId",
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "inventoryTransfersPostReqLinesInventoryTransferLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryTransfersPostReqLinesInventoryTransferLineKeyInventoryKey"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesOrdersPostResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineInventoryOffsetGLAccountCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReq": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqAddressKey"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqBatchKey"
        },
        "commissionAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqCustomerKey",
          "x-required": true
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqFreightTaxScheduleKey"
        },
        "gstdiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqGstdiscountAmount"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableDebitMemosPostReqKey",
          "x-required": true
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string"
        },
        "payment": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqSalesAmount",
          "x-required": true
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqSalesTaxScheduleKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "DEBIT_MEMO"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqWriteoffAmount"
        }
      },
      "title": "receivableDebitMemosPostReq",
      "type": "object",
      "required": [
        "customerKey",
        "key",
        "salesAmount"
      ]
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResAddressKey"
        },
        "auditTrailCode": {
          "type": "string"
        },
        "batchKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResBatchKey"
        },
        "commissionAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResCommissionAmount"
        },
        "commissionBasedOn": {
          "type": "string",
          "x-samplevalue": "SALES"
        },
        "costAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResCostAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResCurrencyKey"
        },
        "currentDocumentAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResCurrentDocumentAmount"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Home Furnishings Limited"
        },
        "customerPONumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "documentAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResFreightAmount"
        },
        "freightTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResFreightTaxScheduleKey"
        },
        "gstdiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResGstdiscountAmount"
        },
        "isDeleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isDirectDebitDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isElectronic": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isIntrastatDocument": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/receivableDebitMemosPostResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResMiscellaneousAmount"
        },
        "miscellaneousTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResMiscellaneousTaxScheduleKey"
        },
        "modifiedBy": {
          "type": "string"
        },
        "payment": {
          "$ref": "#/definitions/receivableDebitMemosPostResPayment"
        },
        "paymentTermsKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentTermsKey"
        },
        "postedBy": {
          "type": "string"
        },
        "salesAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResSalesAmount"
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResSalesTaxScheduleKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTaxAmount"
        },
        "terms": {
          "$ref": "#/definitions/receivableDebitMemosPostResTerms"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "DEBIT_MEMO"
        },
        "writeoffAmount": {
          "$ref": "#/definitions/receivableDebitMemosPostResWriteoffAmount"
        }
      },
      "title": "receivableDebitMemosPostRes",
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLine": {
      "properties": {
        "inventoryFromGLAccount": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryFromGLAccount"
        },
        "inventoryToGLAccount": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryToGLAccount"
        },
        "itemKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineKey"
        },
        "quantity": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineQuantity"
        },
        "quantityTypeFrom": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Quantity Type From",
          "x-samplevalue": "ON_HAND"
        },
        "quantityTypeTo": {
          "type": "string",
          "x-alias": "type",
          "x-displayName": "Quantity Type To",
          "x-samplevalue": "ON_HAND"
        },
        "unitCost": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineUnitCost"
        },
        "warehouseFromKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseFromKey"
        },
        "warehouseToKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineWarehouseToKey"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineKeyInventoryKey"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryFromGLAccount": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetByIdResLinesInventoryTransferLineInventoryFromGLAccountCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-displayName": "Is Encrypted",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineShipToAddressKeyCustomerKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostResPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKeySalesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKeySalesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1003"
        }
      },
      "title": "salesDocumentKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.02
        }
      },
      "title": "unitCost",
      "type": "object"
    },
    "vendorDetailsGetByIdResPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "taxScheduleDetailsGetByIdResTaxScheduleDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RECEIVING ENTRY",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "vendorDetailsGetByIdResPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29855501010000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "salesOrdersPostResShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "purchaseReceiptsPostReqLinesPurchaseReceiptLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 81.25
        }
      },
      "title": "unitCost",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKeySalesDocumentKey"
        }
      },
      "title": "salesLineKey",
      "type": "object"
    },
    "companiesGetAllResDefaultAddressKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "Primary"
        }
      },
      "title": "defaultAddressKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineQuantityCanceled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "LocationsGetAllKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/LocationsGetAllKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "salesQuotesPostRespLinesSalesQuoteLineQuantityToOrder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesReturnsPostReqCustomerKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResFax": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResFaxProperties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "fax"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResFax",
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsPostRes": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/paymentsPostResAmount"
        },
        "bankAccountKey": {
          "$ref": "#/definitions/paymentsPostResBankAccountKey"
        },
        "batchKey": {
          "$ref": "#/definitions/paymentsPostResBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/paymentsPostResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/paymentsPostResCustomerKey"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "key": {
          "$ref": "#/definitions/paymentsPostResKey"
        },
        "postedBy": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001",
          "x-required": true
        }
      },
      "title": "customerKey",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "salesOrdersGetByIdResLinesSalesOrderLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "paymentsPostReq": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/paymentsPostReqAmount"
        },
        "bankAccountKey": {
          "$ref": "#/definitions/paymentsPostReqBankAccountKey"
        },
        "batchKey": {
          "$ref": "#/definitions/paymentsPostReqBatchKey"
        },
        "currencyKey": {
          "$ref": "#/definitions/paymentsPostReqCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/paymentsPostReqCustomerKey"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "key": {
          "$ref": "#/definitions/paymentsPostReqKey"
        },
        "postedBy": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO1002"
        }
      },
      "title": "purchaseOrderKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTotalPayments": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalPayments",
      "type": "object"
    },
    "vendorDetailsPostResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLinePriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKey": {
      "properties": {
        "payablesDocumentKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionKeyPayablesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInventoryGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInventoryGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "inventoryGLAccountKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "INVPCE00009"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "payableInvoicesGetByIdResPaymentCheck": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableInvoicesGetByIdResPaymentCheckAmount"
        },
        "checkNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "check",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1491935400000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USASTCITY-6*"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "LocationsGetAllPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone2",
          "x-displayName": "Value",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "payableReturnsGetAllMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "LocationsGetAllPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "corporateAddress.phone",
          "x-displayName": "Value",
          "x-samplevalue": "3125550100"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostResLinesInventoryAdjustmentLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "100XLG"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableCreditMemosPostReqPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 175.62
        }
      },
      "title": "purchasesAmount",
      "type": "object"
    },
    "CashReceiptBankAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/CashReceiptBankAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UPTOWN TRUST"
        }
      },
      "title": "bankAccountKey",
      "type": "object"
    },
    "receivableCreditMemosPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200520H16"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistribution": {
      "properties": {
        "creditAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionCreditAmount"
        },
        "debitAmount": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDebitAmount"
        },
        "distributionTypeKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionDistributionTypeKey"
        },
        "glaccountKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionGlaccountKey"
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "key": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKey"
        },
        "reference": {
          "type": "string"
        }
      },
      "title": "receivablesDistribution",
      "type": "object"
    },
    "receivableDebitMemosPostReqSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "Payment": {
      "properties": {},
      "type": "object"
    },
    "salesQuotesGetAllTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-displayName": "Value",
          "x-samplevalue": 85.55
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineUnitCost": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": 3.29
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W."
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "LESSON USER1",
          "x-searchable": true,
          "x-searchable-names": [
            "batchId"
          ],
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "source": {
          "type": "string",
          "x-samplevalue": "XXPM_Payment"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        },
        "salesDocumentKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKey"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "COMNETEN0001"
        }
      },
      "type": "object"
    },
    "EmployeeListObject": {
      "properties": {
        "addresses": {
          "$ref": "#/definitions/EmployeeListAddresses"
        },
        "benefitStartDate": {
          "description": "Date Format is YYYY-MM-DD",
          "type": "string"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/EmployeeListDefaultAddressKey"
        },
        "departmentKey": {
          "description": " Valid Departments are 'ADMN','ACCT','SALE','SPTS','INST'",
          "$ref": "#/definitions/EmployeeListDepartmentKey"
        },
        "employmentStartDate": {
          "description": "Date Format is YYYY-MM-DD",
          "type": "string",
          "x-alias": "hireDate"
        },
        "employmentType": {
          "description": "Valid values are 'FULL_TIME_REGULAR','FULL_TIME_TEMP','INTERN','PART_TIME_REGULAR','PART_TIME_TEMP','OTHER'",
          "type": "string",
          "x-alias": "type"
        },
        "name": {
          "$ref": "#/definitions/EmployeeListName"
        },
        "positionKey": {
          "$ref": "#/definitions/EmployeeListPositionKey"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "ssn"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLot": {
      "properties": {
        "bin": {
          "type": "string"
        },
        "dateReceived": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1434306600000
        },
        "dateSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "isPosted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKey"
        },
        "lotNumber": {
          "type": "string",
          "x-samplevalue": "LOT A"
        },
        "quantity": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotQuantity"
        },
        "unitCost": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotUnitCost"
        }
      },
      "title": "salesLineLot",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineInUseGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineInUseGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1520-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableReturnsGetByIdPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqSalesTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosPostReqSalesTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "salesTaxScheduleKey",
      "type": "object"
    },
    "salesItemsPostResTolerancePercentage": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tolerancePercentage",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "taxScheduleDetailsGetResTaxScheduleDetailKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/taxScheduleDetailsGetResTaxScheduleDetailKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSSTE+PS0N0",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "taxDetailKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1009EGS"
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "FULORD1003"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesFulfillmentOrdersGetByIdResDistributions": {
      "properties": {
        "salesDistribution": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistribution"
          },
          "type": "array"
        }
      },
      "title": "distributions",
      "type": "object"
    },
    "payableReturnsGetByIdPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/payableReturnsGetByIdPaymentCashAmount"
        },
        "documentId": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Document Id"
        },
        "number": {
          "type": "string",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Number"
        }
      },
      "type": "object"
    },
    "taxableAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosPostReqSalesTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResTaxesSalesDocumentTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersPostResTaxesSalesDocumentTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "amount",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "locationsPatchReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPatchReqKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/locationsPatchReqKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineItemTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineItemTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "payableReturnsPostResBatchKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "developer"
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsPostReqLinesInventoryAdjustmentLineWarehouseKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "PurchaseOrderLines": {
      "properties": {
        "purchaseOrderLine": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderLinesPurchaseOrderLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": "shippingAddress.phone",
          "x-samplevalue": "60855501390000"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetByIdResLinesInventoryTransferLineKeyInventoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/payableInvoicesPostReqTermsDiscount"
        },
        "discountAmountAppliedTaken": {
          "$ref": "#/definitions/payableInvoicesPostReqTermsDiscountAmountAppliedTaken"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqTermsDiscountAvailableAmount"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/payableInvoicesPostReqTermsDiscountTakenAmount"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineItemKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineItemTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "CreditTerm": {
      "properties": {
        "createdDate": {
          "type": "string"
        },
        "daysDiscountAvailable": {
          "type": "integer"
        },
        "daysUntilDue": {
          "type": "integer"
        },
        "discountDateBasedOn": {
          "type": "string"
        },
        "dueDateBasedOn": {
          "type": "string"
        },
        "isDiscountCalculatedOnFreight": {
          "type": "boolean"
        },
        "isDiscountCalculatedOnMiscellaneous": {
          "type": "boolean"
        },
        "isDiscountCalculatedOnSalePurchase": {
          "type": "boolean"
        },
        "isDiscountCalculatedOnTax": {
          "type": "boolean"
        },
        "isDiscountCalculatedOnTradeDiscount": {
          "type": "boolean"
        },
        "key": {
          "$ref": "#/definitions/RefKeyType"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string"
        },
        "useGracePeriods": {
          "type": "boolean"
        },
        "useValueAddedTax": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResSalesTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResSalesTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "salesTaxScheduleKey",
      "type": "object"
    },
    "vendorDetailsPostReqShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLinePriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLinePriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostResDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "documentAmount",
      "type": "object"
    },
    "payableCreditMemosPostReqVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostReqVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALC0001",
          "x-required": true
        }
      },
      "title": "vendorKey",
      "type": "object",
      "required": [
        "id"
      ]
    },
    "salesFulfillmentOrdersPostResBillToAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBillToAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResBillToAddressKeyCustomerKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "billToAddressKey",
      "type": "object"
    },
    "taxSchedulesGetAllResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "pricingPostReqRoundAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "vendorDetailsPostResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERNIGHT"
        }
      },
      "title": "shippingMethodKey",
      "type": "object"
    },
    "salesOrdersPostReqDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "RCT1160"
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "00000000000000001",
          "x-searchable": true,
          "x-searchable-names": [
            "documentId"
          ],
          "x-searchable-operators": [
            "=",
            "!="
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineInServiceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInServiceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1300-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesReturnsGetResTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountDue",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-displayName": "Value",
          "x-samplevalue": 128.4
        }
      },
      "type": "object"
    },
    "CustomerAddressesCustomerAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "contact.fax",
              "path": "addresses.customerAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "companiesGetAllResDefaultAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "3124362896"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "servicesPostReq": {
      "properties": {
        "description": {
          "type": "string",
          "x-samplevalue": "sample test service"
        },
        "key": {
          "$ref": "#/definitions/servicesPostReqKey"
        },
        "uofMScheduleKey": {
          "$ref": "#/definitions/servicesPostReqUofMScheduleKey"
        }
      },
      "title": "servicesPostReq",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineDamagedGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineDamagedGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4700-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey"
        },
        "receiptKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey"
        },
        "receiptLineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetAllKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryTransfersGetAllKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000008",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "payableInvoicesPostReqFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "GLTransactionSourceDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityAllocated": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "quantityAllocated",
      "type": "object"
    },
    "payableInvoicesPostResTermsDiscountTakenAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountTakenAmount",
      "type": "object"
    },
    "receivableDebitMemosPostResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/receivableDebitMemosPostResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "paymentsPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInUseGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "pricingGetAllResKey": {
      "properties": {
        "currencyKey": {
          "$ref": "#/definitions/pricingGetAllResKeyCurrencyKey"
        },
        "itemKey": {
          "$ref": "#/definitions/pricingGetAllResKeyItemKey"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/pricingGetAllResKeyPriceLevelKey"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        }
      },
      "title": "key",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostResPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineCostOfSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineCostOfSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4510-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "costOfSalesGLAccountKey",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine3": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "line3",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTotalPayments": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine2": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "Suite 32"
        }
      },
      "title": "line2",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesLine1": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "416 Glen Eira Place"
        }
      },
      "title": "line1",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResDistributionsReceivablesDistributionKeyReceivablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CM1000.1"
        }
      },
      "title": "receivablesDocumentKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "ACCS-CRD-12WH"
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResLines": {
      "properties": {
        "salesReturnLine": {
          "$ref": "#/definitions/salesReturnsPatchResLinesSalesReturnLine"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResCommissionsSalesCommissionCommissionAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 54
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqTradeDiscount": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqTradeDiscountAmount"
        }
      },
      "title": "tradeDiscount",
      "type": "object"
    },
    "EmployeeAddressesEmployeeAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-alias": [
            {
              "alias": "fax",
              "path": "addresses.employeeAddress[*].fax.value | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "key": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/RefKeyType"
        },
        "id": {
          "type": "string"
        },
        "receivablesDocumentKey": {
          "$ref": "#/definitions/receivablesDocumentKey"
        },
        "sequenceNumber": {
          "type": "number"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/taxDetailKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1495477800000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SOP ORDERS"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Sales Entry"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqRemitToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionSaleAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 49.85
        }
      },
      "title": "commissionSaleAmount",
      "type": "object"
    },
    "vendorDetailsPatchRes": {
      "properties": {
        "ce_id": {
          "type": "string",
          "x-samplevalue": "ewogICJjb21wYW55S2V5IiA6IHsKICAgICJpZCIgOiAtMQogIH0sCiAgInZlbmRvcktleSIgOiB7CiAgICAiY29tcGFueUtleSIgOiB7CiAgICAgICJpZCIgOiAtMQogICAgfSwKICAgICJpZCIgOiAiQUNFVFJBVkUwMDAxIgogIH0sCiAgImlkIiA6ICJXQVJFSE9VU0UiCn0="
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsPatchResFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/vendorDetailsPatchResInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsPatchResKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "Hemadurga wonders apartment PJR Enclave Road"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/vendorDetailsPatchResPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/vendorDetailsPatchResPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/vendorDetailsPatchResShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/vendorDetailsPatchResTaxScheduleKey"
        },
        "upszone": {
          "type": "string"
        }
      },
      "title": "vendorDetailsPatchRes",
      "x-primary-key": [
        "ce_id"
      ],
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLine": {
      "properties": {
        "actualShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "billingQuantity": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineBillingQuantity"
        },
        "comment": {
          "type": "string"
        },
        "costOfSalesGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineCostOfSalesGLAccountKey"
        },
        "damagedGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDamagedGLAccountKey"
        },
        "discount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscount"
        },
        "discountGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineDiscountGLAccountKey"
        },
        "extendedCost": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineExtendedCost"
        },
        "frontOfficeIntegrationId": {
          "type": "string"
        },
        "fulfillDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "inServiceGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInServiceGLAccountKey"
        },
        "inUseGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInUseGLAccountKey"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationSource": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inventoryGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineInventoryGLAccountKey"
        },
        "isDropShip": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isNonInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "itemDescription": {
          "type": "string",
          "x-samplevalue": "Black Mouse"
        },
        "itemKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineItemKey"
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineKey"
        },
        "lots": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLots"
        },
        "priceLevelKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLinePriceLevelKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantity"
        },
        "quantityAllocated": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityAllocated"
        },
        "quantityCanceled": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityCanceled"
        },
        "quantityFulfilled": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityFulfilled"
        },
        "quantityToBackorder": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityToBackorder"
        },
        "requestedShipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-12T00:00:00+05:30"
        },
        "returnsGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineReturnsGLAccountKey"
        },
        "salesGLAccountKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesGLAccountKey"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalespersonKey"
        },
        "shipToAddress": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddress"
        },
        "shipToAddressKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKey"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShippingMethodKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxAmount"
        },
        "taxBasis": {
          "type": "string",
          "x-samplevalue": "TAXABLE"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTaxScheduleKey"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineTotalAmount"
        },
        "unitCost": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineUnitCost"
        },
        "unitPrice": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineUnitPrice"
        },
        "uofM": {
          "type": "string",
          "x-samplevalue": "Each"
        },
        "warehouseKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineWarehouseKey"
        }
      },
      "title": "salesFulfillmentOrderLine",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxKeyPayablesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsPatchReq": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Sydney"
        },
        "contactPerson": {
          "type": "string",
          "x-samplevalue": "Greg Powell"
        },
        "countryRegion": {
          "type": "string",
          "x-samplevalue": "Australia"
        },
        "fax": {
          "$ref": "#/definitions/vendorDetailsPatchReqFax"
        },
        "internetAddresses": {
          "$ref": "#/definitions/vendorDetailsPatchReqInternetAddresses"
        },
        "key": {
          "$ref": "#/definitions/vendorDetailsPatchReqKey"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "Hemadurga wonders apartment PJR Enclave Road"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/vendorDetailsPatchReqPhone1"
        },
        "phone2": {
          "$ref": "#/definitions/vendorDetailsPatchReqPhone2"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "2086"
        },
        "shippingMethodKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqShippingMethodKey"
        },
        "state": {
          "type": "string",
          "x-samplevalue": "NSW"
        },
        "taxScheduleKey": {
          "$ref": "#/definitions/vendorDetailsPatchReqTaxScheduleKey"
        },
        "upszone": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "vendorDetailsPatchReq",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqShipToAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CENTRALD0001"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostResCurrentDocumentAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "currentDocumentAmount",
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxKeyTaxDetailKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxesPayablesTaxKeyTaxDetailKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSSTE+PS0N0"
        }
      },
      "title": "taxDetailKey",
      "type": "object"
    },
    "receivableDebitMemosPostResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesPostResTermsDiscount": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/payableInvoicesPostResTermsDiscountPercent"
        }
      },
      "title": "discount",
      "type": "object"
    },
    "receivableCreditMemosGetAllResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableCreditMemosGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "receivableDebitMemosPostReqCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "purchaseInvoicesPostResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetAllResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetAllResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000035",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineItemKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineItemKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "FAXX-SLK-2100"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "3-D2657A"
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetAllResObject": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResBatchKey"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30"
        },
        "currencyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResCurrencyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResCustomerKey"
        },
        "customerName": {
          "type": "string",
          "x-samplevalue": "Aaron Fitz Electrical",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "customerPONumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T00:00:00+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "documentTypeKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResDocumentTypeKey"
        },
        "freightAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResFreightAmount"
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResKey"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T05:23:36+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "lineTotalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResLineTotalAmount"
        },
        "masterNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 409,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            ">",
            "<"
          ]
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResMiscellaneousAmount"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-21T05:23:36+05:30",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            ">",
            "<",
            "<=",
            ">="
          ]
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResSalespersonKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResTaxAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResTotalAmount"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetAllResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "WORK",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "salesFulfillmentOrdersGetAllRes",
      "type": "object"
    },
    "payableCreditMemosGetByIdResDistributionsPayablesDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributionsPayablesDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "vendorDetailsPatchReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesReturnsGetResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesReturnsGetResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResShippingMethodKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResShippingMethodKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "GROUND"
        }
      },
      "type": "object"
    },
    "payableInvoicesPostReqAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostReqAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineReturnsGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineReturnsGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1330-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKey": {
      "properties": {
        "salesLineKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKey"
        },
        "taxDetailKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineTaxesSalesLineTaxKeyTaxDetailKey"
        }
      },
      "type": "object"
    },
    "vendorDetailsPatchResKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetAllResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceipt": {
      "properties": {
        "cost": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptCost"
        },
        "doesRevalueInventory": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey"
        },
        "quantityInvoiced": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptQuantityInvoiced"
        },
        "unitCost": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptUnitCost"
        },
        "varianceGLAccountKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResShipToAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsGetByIdResLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT1161"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesOrdersPostResLinesSalesOrderLineInUseGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineInUseGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1520-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTaxableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "quantity",
      "type": "object"
    },
    "RefKeyType": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pricingPostReqDetails": {
      "properties": {
        "pricingDetail": {
          "items": {
            "$ref": "#/definitions/pricingPostReqDetailsPricingDetail"
          },
          "type": "array"
        }
      },
      "title": "details",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalespersonKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "locationsPostReqKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPostResLinesSalesReturnLineReturnQuantityReturnedQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "returntoAddress.line1",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqBatchKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20200520H16"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "RM_Sales"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineLotsSalesLineLotKeySalesLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "PurchaseOrderLinesPurchaseOrderLineQuantityOrdered": {
      "properties": {
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number",
          "x-alias": "lines[*].orderedQuantity"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetAllResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResAddressKeyCompanyKey"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "receivableCreditMemosPostResAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "depositAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineDamagedGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineDamagedGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4700-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostReqFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "purchaseReceiptsPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SANDRA M."
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesPostResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "payableCreditMemosPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableCreditMemosPostReqBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": -2209008600000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BEG BAL1"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesOrdersGetByIdResWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostResp": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryTransfersPostRespBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-09-09T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersPostRespKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryTransfersPostRespLines"
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResKey": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/companyAddressesGetResCompanyAddressesGetResKeyProperties"
        },
        "title": {
          "type": "string",
          "x-samplevalue": "key"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "object"
        }
      },
      "title": "companyAddressesGetResKey",
      "type": "object"
    },
    "CashReceipt": {
      "items": {
        "$ref": "#/definitions/CashReceiptObject"
      },
      "type": "array"
    },
    "purchaseReceiptsPostReqBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1494268200000
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RECEIVING ENTRY"
        },
        "source": {
          "type": "string",
          "x-samplevalue": "Rcvg Trx Entry"
        }
      },
      "title": "batchKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResWarehouseKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DM25111FGTA1"
        }
      },
      "title": "key",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "pricingPostResKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResChargeAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 50
        }
      },
      "title": "chargeAmount",
      "type": "object"
    },
    "purchaseReceiptsGetAllResVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantityFulfilled": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineCostOfSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4510-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributions": {
      "properties": {
        "purchaseDistribution": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostReqDistributionsPurchaseDistribution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "inventoryTransfersGetAllBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqAddressKeyCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqPriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostReqPriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "type": "object"
    },
    "payableReturnsPostResKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "00000000000000468"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "payableCreditMemosPostResAmount1099": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount1099",
      "type": "object"
    },
    "salesOrdersGetByIdResPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResPaymentCheckAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "payableInvoicesGetResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "vendorDetailsGetAllResFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "29455501010000"
        }
      },
      "title": "fax",
      "type": "object"
    },
    "salesOrdersPostResShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostResFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKey": {
      "properties": {
        "inventoryKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKeyInventoryKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-alias": "bankAccountNumber",
          "x-displayName": "Sequence Number",
          "x-samplevalue": 16384
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResDepositAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "depositAmount",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-6630-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineKeyInventoryKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPostReqLinesSalesReturnLineReturnQuantity": {
      "properties": {
        "returnedQuantity": {
          "$ref": "#/definitions/salesReturnsPostReqLinesSalesReturnLineReturnQuantityReturnedQuantity"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "title": "purchaseTransactionKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineShipToAddressKeyCustomerKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosGetByIdResAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResTaxesSalesDocumentTaxGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-2300-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineQuantity": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderQuantity",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxKeyTaxDetailKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResMiscellaneousTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTermsDiscountPercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "percent",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailUofMPrice": {
      "properties": {
        "percent": {
          "$ref": "#/definitions/pricingGetByIdResDetailsPricingDetailUofMPricePercent"
        }
      },
      "title": "uofMPrice",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesTerritoryKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineSalesTerritoryKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "TERRITORY 1"
        }
      },
      "title": "salesTerritoryKey",
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineReturnsGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineReturnsGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-1330-01"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResSalespersonKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResSalespersonKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PAUL W."
        }
      },
      "title": "salespersonKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResShipToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxesPayablesTaxMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousTaxAmount",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResWorkflows": {
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResWorkflowsWorkflow"
          },
          "type": "array"
        }
      },
      "title": "workflows",
      "type": "object"
    },
    "receivableCreditMemosGetByIdResMiscellaneousTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableCreditMemosGetByIdResMiscellaneousTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "miscellaneousTaxScheduleKey",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "terms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/discount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/discountAvailableAmount"
        },
        "discountAvailableTakenAmount": {
          "$ref": "#/definitions/discountAvailableTakenAmount"
        },
        "discountDate": {
          "type": "number"
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/discountTakenAmount"
        },
        "dueDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductListClassKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentTerms.id",
          "x-samplevalue": "Net 30"
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineInventoryGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResMiscellaneousTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousTaxAmount",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResTerms": {
      "properties": {
        "discount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTermsDiscount"
        },
        "discountAvailableAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTermsDiscountAvailableAmount"
        },
        "discountAvailableTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTermsDiscountAvailableTakenAmount"
        },
        "discountDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1390761000000
        },
        "discountTakenAmount": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResTermsDiscountTakenAmount"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-02-26T00:00:00+05:30"
        }
      },
      "title": "terms",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxKeySalesLineKeySalesDocumentKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResLinesPurchaseInvoiceLineKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxesPayablesTaxFreightTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "payableInvoicesPostResAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressPhone3": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "phone3",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersPostReqWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "warehouseKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressPhone2": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone2",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqShipToAddressPhone1": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "31255501020000"
        }
      },
      "title": "phone1",
      "type": "object"
    },
    "vendorDetailsPostResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResDistributionsPayablesDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5000
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResVendorKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResVendorKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "ADVANCED0001",
          "x-searchable": "true",
          "x-searchable-operators": [
            "=",
            "LIKE",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostResLinesPurchaseReceiptLinePurchaseOrderKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostResLinesPurchaseReceiptLinePurchaseOrderKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO2081"
        }
      },
      "title": "purchaseOrderKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLineQuantityToBackorder": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "quantityToBackorder",
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResWriteoffAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKey": {
      "properties": {
        "salesDocumentKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResDistributionsSalesDistributionKeySalesDocumentKey"
        },
        "sequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16384
        }
      },
      "title": "key",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerial": {
      "properties": {
        "bin": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Bin"
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLinesInventoryAdjustmentLineSerialsInventorySerialKey"
        },
        "serialNumber": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Serial Number",
          "x-samplevalue": "SERIAL 1"
        }
      },
      "type": "object"
    },
    "salesOrdersPostResLinesSalesOrderLineItemTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersPostResLinesSalesOrderLineItemTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqSalesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesAmount",
      "type": "object"
    },
    "paymentsPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResFreightTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResFreightTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL DETAILS"
        }
      },
      "title": "freightTaxScheduleKey",
      "type": "object"
    },
    "payableInvoicesPostReqTotalPayments": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalPayments",
      "type": "object"
    },
    "pricingPostResKeyItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "SDF456"
        }
      },
      "title": "itemKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResTermsDiscountAvailableAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "discountAvailableAmount",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineSalesGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineSalesGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4110-02"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "receivableDebitMemosPostReqFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKey": {
      "properties": {
        "lineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        },
        "purchaseTransactionKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyPurchaseTransactionKey"
        },
        "receiptKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptKeyReceiptKey"
        },
        "receiptLineSequenceNumber": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 32768
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResWarehouseKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResWarehouseKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "title": "warehouseKey",
      "type": "object"
    },
    "salesAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "pricingPostReqKeyPriceLevelKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "salesOrdersGetByIdResLinesSalesOrderLineDamagedGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesOrdersGetByIdResLinesSalesOrderLineDamagedGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4700-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RCT4076"
        }
      },
      "required": [
        "id"
      ],
      "title": "key",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResAddressKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResAddressKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AARONFIT0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "PurchaseOrderLinesPurchaseOrderLineItemKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "pricingPostResDetailsPricingDetailKeyPricingKeyCurrencyKey": {
      "properties": {
        "isocode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currencyKey",
      "type": "object"
    },
    "freightAmount": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "decimalDigits": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesPostReqLinesPurchaseInvoiceLinePurchaseOrderLineKeyPurchaseTransactionKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PO0999"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-4730-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "vendorDetailsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "WAREHOUSE"
        },
        "vendorKey": {
          "$ref": "#/definitions/vendorDetailsPostResKeyVendorKey"
        }
      },
      "title": "key",
      "type": "object"
    },
    "vendorDetailsPostResTaxScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/vendorDetailsPostResTaxScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUSNSWST+20"
        }
      },
      "title": "taxScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersPostReqWorkflows": {
      "properties": {
        "workflow": {
          "items": {
            "$ref": "#/definitions/salesFulfillmentOrdersPostReqWorkflowsWorkflow"
          },
          "type": "array"
        }
      },
      "title": "workflows",
      "type": "object"
    },
    "payableInvoicesGetByIdResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResAddressKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRIMARY"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "companiesGetAllResKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "key",
      "type": "object"
    },
    "receivableDebitMemosPostResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "payableReturnsGetByIdPaymentCashAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "paymentMethod",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "purchaseReceiptsPostReqDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseReceiptsPostReqDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "title": "distributionTypeKey",
      "type": "object"
    },
    "salesItemsPostResUofMScheduleKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesItemsPostResUofMScheduleKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EACH"
        }
      },
      "title": "uofMScheduleKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "miscellaneousAmount",
      "type": "object"
    },
    "payableCreditMemosGetByIdRes": {
      "properties": {
        "addressKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResAddressKey"
        },
        "amount1099": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResAmount1099"
        },
        "auditTrailCode": {
          "type": "string",
          "x-samplevalue": "PMTRX00000001"
        },
        "batchKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResBatchKey"
        },
        "chargeAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResChargeAmount"
        },
        "currencyKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResCurrencyKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2013-09-15T00:00:00+05:30"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "BEGINNING BALANCES"
        },
        "distributions": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDistributions"
        },
        "documentAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResDocumentAmount"
        },
        "freightAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResFreightAmount"
        },
        "generalLedgerPostingDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-01-01T00:00:00+05:30"
        },
        "isIntercompanyTransaction": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isVoided": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResKey"
        },
        "miscellaneousAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResMiscellaneousAmount"
        },
        "modifiedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2009-05-13T19:01:51+05:30"
        },
        "ponumber": {
          "type": "string"
        },
        "postedBy": {
          "type": "string",
          "x-samplevalue": "LESSON USER1"
        },
        "postedDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 315513000000
        },
        "purchasesAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResPurchasesAmount"
        },
        "taxAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxAmount"
        },
        "taxDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1379183400000
        },
        "taxes": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTaxes"
        },
        "tradeDiscountAmount": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResTradeDiscountAmount"
        },
        "transactionState": {
          "type": "string",
          "x-samplevalue": "HISTORY"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "CREDIT_MEMO"
        },
        "vendorDocumentNumber": {
          "type": "string",
          "x-samplevalue": "6002.1"
        },
        "vendorKey": {
          "$ref": "#/definitions/payableCreditMemosGetByIdResVendorKey"
        },
        "vendorName": {
          "type": "string",
          "x-samplevalue": "Superior Telephone Systems"
        }
      },
      "title": "payableCreditMemosGetByIdRes",
      "type": "object"
    },
    "receivableDebitMemosPostReqPaymentCash": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/receivableDebitMemosPostReqPaymentCashAmount"
        },
        "number": {
          "type": "string"
        }
      },
      "title": "cash",
      "type": "object"
    },
    "receivableDebitMemosPostResFreightTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "purchaseReceiptsGetByIdResDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "debitAmount",
      "type": "object"
    },
    "receivableDebitMemosGetAllResCustomerKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResCommissionsSalesCommission": {
      "properties": {
        "commissionAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionAmount"
        },
        "commissionPercent": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionPercent"
        },
        "commissionSaleAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionCommissionSaleAmount"
        },
        "key": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionKey"
        },
        "noncommissionedAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionNoncommissionedAmount"
        },
        "percentOfSale": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionPercentOfSale"
        },
        "salesAmount": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesAmount"
        },
        "salesTerritoryKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalesTerritoryKey"
        },
        "salespersonKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResCommissionsSalesCommissionSalespersonKey"
        }
      },
      "title": "salesCommission",
      "type": "object"
    },
    "receivableDebitMemosGetAllResKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesOrdersGetByIdResShippingMethodKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersGetByIdResTaxesSalesDocumentTaxTotalTaxPotentialAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 108
        }
      },
      "type": "object"
    },
    "salesReturnsGetResDocumentTypeKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "type",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersPostResPaymentTermsKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostReqBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResBillToAddressKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "EmployeeListAddressesEmployeeAddress": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.city",
              "path": "addresses.employeeAddress[*].city | [0]"
            }
          ]
        },
        "countryRegion": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.country",
              "path": "addresses.employeeAddress[*].countryRegion | [0]"
            }
          ]
        },
        "fax": {
          "$ref": "#/definitions/EmployeeListAddressesEmployeeAddressFax"
        },
        "key": {
          "$ref": "#/definitions/EmployeeListAddressesEmployeeAddressKey"
        },
        "line1": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.line1",
              "path": "addresses.employeeAddress[*].line1 | [0]"
            }
          ]
        },
        "line2": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.line2",
              "path": "addresses.employeeAddress[*].line2 | [0]"
            }
          ]
        },
        "line3": {
          "type": "string"
        },
        "phone1": {
          "$ref": "#/definitions/EmployeeListAddressesEmployeeAddressPhone1"
        },
        "postalCode": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.postalCode",
              "path": "addresses.employeeAddress[*].postalCode | [0]"
            }
          ]
        },
        "state": {
          "type": "string",
          "x-alias": [
            {
              "alias": "address.province",
              "path": "addresses.employeeAddress[*].state | [0]"
            }
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionCreditAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 103.79
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPaymentPaymentCardAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "amount",
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTax": {
      "properties": {
        "glaccountKey": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxGlaccountKey"
        },
        "isBackoutTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "isTaxableTax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxKey"
        },
        "taxAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxTaxAmount"
        },
        "taxableAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxTaxableAmount"
        },
        "totalAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxTotalAmount"
        },
        "totalTaxPotentialAmount": {
          "$ref": "#/definitions/salesOrdersPostReqTaxesSalesDocumentTaxTotalTaxPotentialAmount"
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdBatchKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableReturnsGetByIdBatchKeyCompanyKey"
        },
        "createdDateTime": {
          "format": "int64",
          "type": "integer",
          "x-alias": "createdDate",
          "x-displayName": "Created Date Time",
          "x-samplevalue": 1601648411000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "developer"
        },
        "source": {
          "type": "string",
          "x-displayName": "Source",
          "x-samplevalue": "PM_Trxent"
        }
      },
      "type": "object"
    },
    "salesReturnsPostResLinesSalesReturnLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesReturnsPostResLinesSalesReturnLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesReturnsPostResLinesSalesReturnLineQuantity"
        },
        "returnQuantity": {
          "$ref": "#/definitions/salesReturnsPostResLinesSalesReturnLineReturnQuantity"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqLinesPurchaseInvoiceLineReceiptsPurchaseInvoiceApplyReceiptVarianceGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetByIdResAddressKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResAddressKeyCompanyKey"
        },
        "customerKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResAddressKeyCustomerKey"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "addressKey",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResSubtotal": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-samplevalue": 103.79
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResDistributionsPurchaseDistributionDebitAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "postedPayablesVendorPaymentsGetResTaxes": {
      "properties": {
        "payablesTax": {
          "items": {
            "$ref": "#/definitions/postedPayablesVendorPaymentsGetResTaxesPayablesTax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-alias": "taxId",
          "x-displayName": "Value",
          "x-samplevalue": 5.6
        }
      },
      "type": "object"
    },
    "payableReturnsGetByIdPurchasesAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineCostOfSalesGLAccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLinePriceLevelKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesFulfillmentOrdersGetByIdResLinesSalesFulfillmentOrderLinePriceLevelKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "RETAIL"
        }
      },
      "title": "priceLevelKey",
      "type": "object"
    },
    "payableInvoicesGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/payableInvoicesGetByIdResDistributionsPayablesDistributionKeyPayablesDocumentKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "00000000000000457"
        }
      },
      "title": "payablesDocumentKey",
      "type": "object"
    },
    "salesOrdersPostReqLinesSalesOrderLineTaxesSalesLineTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 1799.95
        }
      },
      "type": "object"
    },
    "companiesGetAllResObject": {
      "properties": {
        "accountSegmentSeparator": {
          "type": "string",
          "x-samplevalue": "-"
        },
        "businessType": {
          "type": "string"
        },
        "defaultAddress": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddress"
        },
        "defaultAddressKey": {
          "$ref": "#/definitions/companiesGetAllResDefaultAddressKey"
        },
        "dunsnumber": {
          "type": "string"
        },
        "isValueAddedTaxReturnEnabled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "key": {
          "$ref": "#/definitions/companiesGetAllResKey"
        },
        "modifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Fabrikam, Inc."
        },
        "options": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "UseShippingMethodWhenSelectingDefaultTaxSchedule",
            "AllowSummaryLevelTaxEdits"
          ]
        },
        "purchasesTaxScheduleKey": {
          "$ref": "#/definitions/companiesGetAllResPurchasesTaxScheduleKey"
        },
        "salesTaxScheduleKey": {
          "$ref": "#/definitions/companiesGetAllResSalesTaxScheduleKey"
        },
        "sicnumber": {
          "type": "string"
        },
        "taxExempt1": {
          "type": "string"
        },
        "taxExempt2": {
          "type": "string"
        },
        "taxRegistration": {
          "type": "string"
        },
        "userDefined1": {
          "type": "string"
        },
        "userDefined2": {
          "type": "string"
        },
        "vets100Number": {
          "type": "string"
        },
        "witholdingFileOrReconciliationNumber": {
          "type": "string"
        },
        "witholdingTaxRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "companiesGetAllRes",
      "type": "object"
    },
    "locationsPostReqKeyCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/locationsPostReqKeyCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "ADVANCED0001"
        }
      },
      "type": "object"
    },
    "payableCreditMemosGetByIdResTaxesPayablesTaxTotalAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "totalAmount",
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesName": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "International TeleCom Assoc."
        }
      },
      "title": "name",
      "type": "object"
    },
    "purchaseInvoicesPostReqKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "receivableDebitMemosGetAllResTaxAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxAmount",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdRes": {
      "properties": {
        "auditTrailCode": {
          "type": "string",
          "x-alias": "contact.address.postalCode",
          "x-displayName": "Audit Trail Code"
        },
        "batchKey": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-04-21T00:00:00+05:30"
        },
        "glpostingDate": {
          "format": "int64",
          "type": "integer",
          "x-alias": "glpostingDate",
          "x-displayName": "General Ledger Posting Date",
          "x-samplevalue": 1492713000000
        },
        "key": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryAdjustmentsGetByIdResLines"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-displayName": "Modified Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2017-01-11T16:03:44+05:30"
        },
        "transactionState": {
          "type": "string",
          "x-alias": "contact.address.province",
          "x-displayName": "Transaction State",
          "x-samplevalue": "WORK"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostReq": {
      "properties": {
        "batchKey": {
          "$ref": "#/definitions/inventoryTransfersPostReqBatchKey"
        },
        "date": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-displayName": "Date",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-09-09T00:00:00+05:30"
        },
        "key": {
          "$ref": "#/definitions/inventoryTransfersPostReqKey"
        },
        "lines": {
          "$ref": "#/definitions/inventoryTransfersPostReqLines"
        }
      },
      "required": [
        "date",
        "batchKey",
        "lines",
        "key"
      ],
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesPostalCode": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "2086"
        }
      },
      "title": "postalCode",
      "type": "object"
    },
    "vendorDetailsGetAllResKeyVendorKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosGetByIdResPaymentTermsKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResPaymentTermsKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "Net 30"
        }
      },
      "title": "paymentTermsKey",
      "type": "object"
    },
    "payableCreditMemosGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesItemsPostResKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/salesItemsPostResKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SDF456FD0!"
        }
      },
      "title": "key",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDistributionTypeKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResDistributionsPurchaseDistributionDistributionTypeKeyCompanyKey"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResPurchaseTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "receivableDebitMemosPostResCustomerKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosPostResCustomerKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "HOMEFURN0001"
        }
      },
      "title": "customerKey",
      "type": "object"
    },
    "inventoryAdjustmentsGetByIdResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqMiscellaneousAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqShipToAddressFax": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "00000000000000"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetResFreightAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "freightAmount",
      "type": "object"
    },
    "salesOrdersGetAllResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "companyAddressesGetResCompanyAddressesGetResObjectPropertiesContactPerson": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "x-samplevalue": {
          "type": "string",
          "x-samplevalue": "Jordan, Katie"
        }
      },
      "title": "contactPerson",
      "type": "object",
      "x-searchable": true,
      "x-searchable-operators": [
        "=",
        "LIKE",
        "!="
      ]
    },
    "receivableDebitMemosGetByIdResDistributionsReceivablesDistributionGlaccountKey": {
      "properties": {
        "companyKey": {
          "$ref": "#/definitions/receivableDebitMemosGetByIdResDistributionsReceivablesDistributionGlaccountKeyCompanyKey"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "000-7040-00"
        },
        "isEncrypted": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "glaccountKey",
      "type": "object"
    },
    "pricingGetByIdResDetailsPricingDetailUofMPricePercent": {
      "properties": {
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.8
        }
      },
      "title": "percent",
      "type": "object"
    },
    "salesFulfillmentOrdersPostResPriceLevelKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "PurchaseOrderShippingMethodKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "shippingMethod"
        }
      },
      "type": "object"
    },
    "payableInvoicesGetByIdResTaxes": {
      "properties": {
        "payablesTax": {
          "items": {
            "$ref": "#/definitions/payableInvoicesGetByIdResTaxesPayablesTax"
          },
          "type": "array"
        }
      },
      "title": "taxes",
      "type": "object"
    },
    "purchaseInvoicesPostReqDistributionsPurchaseDistributionKeyPurchaseTransactionKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesOrdersPostReqTaxesSalesDocumentTaxGlaccountKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "salesReturnsPatchResLinesSalesReturnLine": {
      "properties": {
        "itemKey": {
          "$ref": "#/definitions/salesReturnsPatchResLinesSalesReturnLineItemKey"
        },
        "quantity": {
          "$ref": "#/definitions/salesReturnsPatchResLinesSalesReturnLineQuantity"
        },
        "returnQuantity": {
          "$ref": "#/definitions/salesReturnsPatchResLinesSalesReturnLineReturnQuantity"
        }
      },
      "type": "object"
    },
    "inventoryTransfersPostRespLinesInventoryTransferLineWarehouseFromKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-displayName": "Id",
          "x-samplevalue": "WAREHOUSE"
        }
      },
      "type": "object"
    },
    "payableReturnsPostReqVendorKey": {
      "properties": {
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-displayName": "Id",
          "x-samplevalue": "API CC00000"
        }
      },
      "type": "object"
    },
    "salesReturnsGetResTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-alias": "currency",
          "x-displayName": "Currency",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Decimal Digits",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-alias": "discountAmount",
          "x-displayName": "Value",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "receivableCreditMemosPostReqTradeDiscountAmount": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tradeDiscountAmount",
      "type": "object"
    },
    "salesOrdersPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    },
    "payableCreditMemosPostResBatchKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": -1
        }
      },
      "title": "companyKey",
      "type": "object"
    },
    "salesTaxScheduleKey": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseReceiptsGetAllResSubtotal": {
      "properties": {
        "currency": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "decimalDigits": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 162.5
        }
      },
      "title": "subtotal",
      "type": "object"
    },
    "locationsGetByIdResTaxScheduleKeyCompanyKey": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-alias": "taxId",
          "x-displayName": "Id",
          "x-samplevalue": -1
        }
      },
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "Microsoft Dynamics GP",
    "x-element-hub": "finance",
    "x-element-key": "greatplains",
    "title": "greatplains",
    "x-element-id": 50,
    "version": "api-v2",
    "description": "Add a Microsoft Dynamics Instance to connect your existing Microsoft Dynamics account to the Finance Hub, allowing you to manage customers, employees, invoices, purchase orders, etc. across multiple Finance Elements. You will need your Microsoft Dynamics account information to add an instance."
  },
  "tags": [
    {
      "name": "Banks"
    },
    {
      "name": "Bulk"
    },
    {
      "name": "Cash Receipts"
    },
    {
      "name": "Classes"
    },
    {
      "name": "Companies"
    },
    {
      "name": "Company Addresses"
    },
    {
      "name": "Credit Terms"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Employees"
    },
    {
      "name": "Inventory Adjustments"
    },
    {
      "name": "Inventory Transfers"
    },
    {
      "name": "Invoices"
    },
    {
      "name": "Journal Entries"
    },
    {
      "name": "Ledger Accounts"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Payable Credit Memos"
    },
    {
      "name": "Payable Invoices"
    },
    {
      "name": "Payable Returns"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Posted Payables Vendor Payments"
    },
    {
      "name": "Pricing"
    },
    {
      "name": "Products"
    },
    {
      "name": "Purchase Invoices"
    },
    {
      "name": "Purchase Orders"
    },
    {
      "name": "Purchase Receipts"
    },
    {
      "name": "Receivable Credit Memos"
    },
    {
      "name": "Receivable Debit Memos"
    },
    {
      "name": "Receivables Invoices"
    },
    {
      "name": "Sales Fulfillment Orders"
    },
    {
      "name": "Sales Items"
    },
    {
      "name": "Sales Orders"
    },
    {
      "name": "Sales Quotes"
    },
    {
      "name": "Sales Returns"
    },
    {
      "name": "Services"
    },
    {
      "name": "Tax Rates"
    },
    {
      "name": "Tax Schedule Details"
    },
    {
      "name": "Tax Schedules"
    },
    {
      "name": "Vendor Details"
    },
    {
      "name": "Vendors"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "ERP solution for financials, inventory, and operations for small and medium businesses",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/greatplains"
  }
}